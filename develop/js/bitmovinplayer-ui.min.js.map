{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/custom/ts/components/gobackbutton.ts","src/custom/ts/components/quanteecconsumptions.ts","src/custom/ts/components/radiomode/radiomodetogglebutton.ts","src/ts/arrayutils.ts","src/ts/audiotrackutils.ts","src/ts/browserutils.ts","src/ts/components/adclickoverlay.ts","src/ts/components/admessagelabel.ts","src/ts/components/adskipbutton.ts","src/ts/components/airplaytogglebutton.ts","src/ts/components/audioqualityselectbox.ts","src/ts/components/audiotracklistbox.ts","src/ts/components/audiotrackselectbox.ts","src/ts/components/bufferingoverlay.ts","src/ts/components/button.ts","src/ts/components/caststatusoverlay.ts","src/ts/components/casttogglebutton.ts","src/ts/components/castuicontainer.ts","src/ts/components/clickoverlay.ts","src/ts/components/closebutton.ts","src/ts/components/component.ts","src/ts/components/container.ts","src/ts/components/controlbar.ts","src/ts/components/ecomodecontainer.ts","src/ts/components/ecomodetogglebutton.ts","src/ts/components/errormessageoverlay.ts","src/ts/components/fullscreentogglebutton.ts","src/ts/components/hugeplaybacktogglebutton.ts","src/ts/components/hugereplaybutton.ts","src/ts/components/itemselectionlist.ts","src/ts/components/label.ts","src/ts/components/listbox.ts","src/ts/components/listselector.ts","src/ts/components/metadatalabel.ts","src/ts/components/pictureinpicturetogglebutton.ts","src/ts/components/playbackspeedselectbox.ts","src/ts/components/playbacktimelabel.ts","src/ts/components/playbacktogglebutton.ts","src/ts/components/playbacktoggleoverlay.ts","src/ts/components/quickseekbutton.ts","src/ts/components/recommendationoverlay.ts","src/ts/components/replaybutton.ts","src/ts/components/seekbar.ts","src/ts/components/seekbarbufferlevel.ts","src/ts/components/seekbarcontroller.ts","src/ts/components/seekbarlabel.ts","src/ts/components/selectbox.ts","src/ts/components/settingspanel.ts","src/ts/components/settingspanelitem.ts","src/ts/components/settingspanelpage.ts","src/ts/components/settingspanelpagebackbutton.ts","src/ts/components/settingspanelpagenavigatorbutton.ts","src/ts/components/settingspanelpageopenbutton.ts","src/ts/components/settingstogglebutton.ts","src/ts/components/spacer.ts","src/ts/components/subtitlelistbox.ts","src/ts/components/subtitleoverlay.ts","src/ts/components/subtitleselectbox.ts","src/ts/components/subtitlesettings/backgroundcolorselectbox.ts","src/ts/components/subtitlesettings/backgroundopacityselectbox.ts","src/ts/components/subtitlesettings/characteredgeselectbox.ts","src/ts/components/subtitlesettings/fontcolorselectbox.ts","src/ts/components/subtitlesettings/fontfamilyselectbox.ts","src/ts/components/subtitlesettings/fontopacityselectbox.ts","src/ts/components/subtitlesettings/fontsizeselectbox.ts","src/ts/components/subtitlesettings/subtitlesettingselectbox.ts","src/ts/components/subtitlesettings/subtitlesettingslabel.ts","src/ts/components/subtitlesettings/subtitlesettingsmanager.ts","src/ts/components/subtitlesettings/subtitlesettingspanelpage.ts","src/ts/components/subtitlesettings/subtitlesettingsresetbutton.ts","src/ts/components/subtitlesettings/windowcolorselectbox.ts","src/ts/components/subtitlesettings/windowopacityselectbox.ts","src/ts/components/timelinemarkershandler.ts","src/ts/components/titlebar.ts","src/ts/components/togglebutton.ts","src/ts/components/tvnoisecanvas.ts","src/ts/components/uicontainer.ts","src/ts/components/videoqualityselectbox.ts","src/ts/components/volumecontrolbutton.ts","src/ts/components/volumeslider.ts","src/ts/components/volumetogglebutton.ts","src/ts/components/vrtogglebutton.ts","src/ts/components/watermark.ts","src/ts/demofactory.ts","src/ts/dom.ts","src/ts/errorutils.ts","src/ts/eventdispatcher.ts","src/ts/focusvisibilitytracker.ts","src/ts/groupplaybackapi.ts","src/ts/guid.ts","src/ts/imageloader.ts","src/ts/localization/i18n.ts","src/ts/localization/languages/de.json","src/ts/localization/languages/en.json","src/ts/localization/languages/es.json","src/ts/localization/languages/nl.json","src/ts/main.ts","src/ts/mobilev3playerapi.ts","src/ts/playerutils.ts","src/ts/spatialnavigation/ListNavigationGroup.ts","src/ts/spatialnavigation/gethtmlelementsfromcomponents.ts","src/ts/spatialnavigation/keymap.ts","src/ts/spatialnavigation/navigationalgorithm.ts","src/ts/spatialnavigation/navigationgroup.ts","src/ts/spatialnavigation/nodeeventsubscriber.ts","src/ts/spatialnavigation/rootnavigationgroup.ts","src/ts/spatialnavigation/seekbarhandler.ts","src/ts/spatialnavigation/spatialnavigation.ts","src/ts/spatialnavigation/typeguards.ts","src/ts/spatialnavigation/types.ts","src/ts/storageutils.ts","src/ts/stringutils.ts","src/ts/subtitleutils.ts","src/ts/timeout.ts","src/ts/uifactory.ts","src/ts/uimanager.ts","src/ts/uiutils.ts","src/ts/volumecontroller.ts","src/ts/vttutils.ts"],"names":["f","g","exports","module","define","amd","window","global","self","this","bitmovin","playerui","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_super","button_1","GoBackButton","Button","__extends","prototype","configure","player","uimanager","_this","onClick","subscribe","customMessageHandler","sendAsynchronous","on","PlayerEvent","ViewModeChanged","getViewMode","hide","show","config","error","defaultConfig","cssClasses","text","ariaLabel","mergeConfig","QuanteecConsumptions","isQuanteecDisplayed","cssClass","togglebutton_1","RadioModeToggleButton","ToggleButton","initialState","active","JSON","stringify","activated","isRadioModeActive","ArrayUtils","remove","array","item","index","indexOf","splice","i18n_1","AudioTrackSwitchHandler","element","addAudioTrack","event","audioTrack","track","listElement","hasItem","id","addItem","i18n","getLocalizer","label","removeAudioTrack","removeItem","selectCurrentAudioTrack","currentAudioTrack","getAudio","selectItem","refreshAudioTracks","audioTracks","getAvailableAudio","synchronizeItems","map","key","bindSelectionEvent","bindPlayerEvents","onItemSelected","_","value","setAudio","AudioChanged","SourceUnloaded","PeriodSwitched","AudioAdded","AudioRemoved","getConfig","events","onUpdated","BrowserUtils","Object","defineProperty","windowExists","navigator","userAgent","test","isHisense","platform","includes","maxTouchPoints","msMaxTouchPoints","clickoverlay_1","AdClickOverlay","ClickOverlay","adFinishedHandler","setUrl","clickThroughCallback","AdStarted","ad","clickThroughUrl","clickThroughUrlOpened","AdFinished","AdSkipped","AdError","pause","acceptsTouchWithUiHidden","label_1","stringutils_1","AdMessageLabel","Label","adEndHandler","off","TimeChanged","updateMessageHandler","setText","StringUtils","replaceAdMessagePlaceholders","performLocalization","uiConfig","message","AdSkipButton","updateSkipMessageHandler","untilSkippableMessage","skippableMessage","skipOffset","getCurrentTime","disable","enable","skippableAfter","ads","skip","AirPlayToggleButton","airPlayAvailableHandler","isAirplayAvailable","showAirplayTargetPicker","console","log","airPlayChangedHandler","isAirplayActive","AirplayAvailable","AirplayChanged","selectbox_1","AudioQualitySelectBox","SelectBox","updateAudioQualities","audioQualities","getAvailableAudioQualities","clearItems","_i","audioQualities_1","audioQuality","selectCurrentAudioQuality","getAudioQuality","sender","setAudioQuality","AudioQualityChanged","AudioQualityAdded","AudioQualityRemoved","listbox_1","audiotrackutils_1","AudioTrackListBox","ListBox","AudioTrackSelectBox","container_1","component_1","timeout_1","BufferingOverlay","Container","showOverlay","overlayShowTimeout","start","hideOverlay","clear","Timeout","showDelayMs","StallStarted","StallEnded","Play","Playing","Paused","Seek","Seeked","TimeShift","TimeShifted","isStalled","indicators","Component","tag","role","hidden","components","dom_1","eventdispatcher_1","toDomElement","buttonElementAttributes","aria-label","class","getCssClasses","type","aria-pressed","tabindex","tabIndex","toString","buttonElement","DOM","append","prefixCss","html","onClickEvent","getDomElement","find","buttonEvents","dispatch","getEvent","EventDispatcher","CastStatusOverlay","CastWaitingForDevice","castDeviceName","castPayload","deviceName","statusLabel","CastStarted","CastStopped","CastToggleButton","isCastAvailable","isCasting","castStop","castVideo","uicontainer_1","CastUIContainer","UIContainer","isUiShown","showUi","castUiHideTimeout","hideDelay","onControlsHide","onControlsShow","showUiPermanently","showUiWithTimeout","isPlaying","release","initialize","url","data","open","getUrl","undefined","CloseButton","target","ViewMode","guid_1","disabled","isHidden","isDisabled","onShow","onComponentShow","onHide","onComponentHide","onViewModeChanged","args","onComponentViewModeChanged","onHoverChangedEvent","hasDomElement","Boolean","setAriaLabel","setAriaAttr","name","attr","concat","defaults","base","assign","css","join","trim","cssClassOrId","cssPrefix","addClass","CLASS_HIDDEN","onHideEvent","removeClass","onShowEvent","isShown","toggleHidden","CLASS_DISABLED","onDisabledEvent","onEnabledEvent","isEnabled","isHovered","hovered","componentEvents","onEnabled","onDisabled","onViewModeChangedEvent","mode","viewMode","onHoverChanged","Guid","next","Temporary","arrayutils_1","addComponent","component","push","componentsToAdd","removeComponent","componentsToRemove","getComponents","removeComponents","_a","slice","updateComponents","shift","innerContainerElement","containerElement","innerContainer","initialComponent","suspendHideTimeout","resumeHideTimeout","trackComponentViewMode","Persistent","componentsInPersistentViewMode","Math","max","uiutils_1","spacer_1","browserutils_1","settingspanel_1","ControlBar","hoverStackCount","isSettingsPanelShown","disableAutoHideWhenHovered","isTouchSupported","UIUtils","traverseTree","Spacer","isMobile","SettingsPanel","onPreviewControlsHide","cancel","ecomodetogglebutton_1","settingspanelitem_1","EcoModeContainer","setOnToggleCallback","callback","onToggleCallback","SegmentPlayback","segment","bitrate","frameRate","maxHeight","maxBitrate","maxWidth","currentEnergyKwh","maxEnergyKwh","mimeType","height","mediaInfo","width","_b","getMaxQualityAvailable","getAvailableVideoQualities","calculateEnergyConsumption","duration","ecoModeSavedEmissionsItem","updateSavedEmissions","emissionsSavedLabel","currentEnergyConsuption","maxEnergyConsuption","currentEnergyEmission","maxEnergyEmisson","savedEmissons","toFixed","fps","availableVideoQualities","sortedQualities","sort","b","ecoModeToggleButton","EcoModeToggleButton","labelEcoMode","for","ecoModeToggleButtonItem","SettingsPanelItem","onToggleOn","onToggleOff","areAdaptationApisAvailable","toggle","enableEcoMode","setVideoQuality","disableEcoMode","VideoQualityChanged","quality","targetQuality","isGetConfigAvailable","adaptation","isSetConfigAvailable","setConfig","adaptationConfig","codec","resolution","maxSelectableVideoHeight","limitToPlayerSize","onClass","offClass","tvnoisecanvas_1","errorutils_1","mobilev3playerapi_1","gobackbutton_1","ErrorMessageOverlay","errorEventHandler","handleErrorMessage","customizedMessage","errorMessages","customMessage","messages","display","isMobileV3PlayerAPI","MobileV3PlayerEvent","PlayerError","ErrorUtils","defaultMobileV3ErrorMessageTranslator","SourceError","defaultWebErrorMessageTranslator","SourceLoaded","tvNoiseBackground","stop","errorMessage","errorLabel","TvNoiseCanvas","FullscreenToggleButton","fullscreenStateHandler","Fullscreen","fullscreenAvailabilityChangedHandler","isFullScreenAvailable","isViewModeAvailable","ViewModeAvailabilityChanged","targetViewMode","Inline","setViewMode","playbacktogglebutton_1","HugePlaybackToggleButton","PlaybackToggleButton","togglePlayback","isPlayInitiated","play","toggleFullscreen","suppressPlayButtonTransitionAnimation","setTransitionAnimationsEnabled","onToggle","subscribeOnce","firstPlay","enterFullscreenOnInitialPlayback","clickTime","doubleClickTime","isAutoplayEnabled","now","Date","setTimeout","Warning","WarningCode","PLAYBACK_COULD_NOT_BE_STARTED","playback","autoplay","isAutoplayUpcoming","getSource","enabled","noTransitionAnimationsClass","hasClass","HugeReplayButton","listselector_1","ItemSelectionList","ListSelector","isActive","items","updateDomItems","selectedValue","selectedListItem","empty","listItem","CLASS_SELECTED","deselectItem","this_1","String","onItemSelectedEvent","onItemAddedEvent","selectedItem","onItemRemovedEvent","tagName","labelElement","localizedText","onTextChangedEvent","getText","clearText","isEmpty","labelEvents","onTextChanged","onItemAdded","addListBoxDomItem","onItemRemoved","removeListBoxDomItem","refreshSelectedItem","listBoxElement","createListBoxDomItems","buildListBoxItemButton","ListBoxItemButton","getComponentForKey","c","listBoxItemButton_1","newItem","getItemForKey","handleSelectionChange","getItemIndex","parseInt","getItems","sortedInsert","__assign","filter","translator","findIndex","entry","getSelectedItem","newItems","forEach","items_1","itemCount","keys","listSelectorEvents","MetadataLabelContent","MetadataLabel","init","content","Title","uiconfig","metadata","title","Description","description","toLowerCase","PictureInPictureToggleButton","pictureInPictureStateHandler","PictureInPicture","pictureInPictureAvailabilityChangedHandler","isPictureInPictureAvailable","PlaybackSpeedSelectBox","setDefaultValue","playbackSpeed","getPlaybackSpeed","setSpeed","addDefaultItems","setPlaybackSpeed","parseFloat","PlaybackSpeedChanged","speed","customItems","defaultPlaybackSpeeds","PlaybackTimeLabelMode","playerutils_1","PlaybackTimeLabel","minWidth","min-width","updateTimeFormatBasedOnDuration","live","liveCssClass","liveEdgeCssClass","liveClickHandler","timeShift","updateLiveTimeshiftState","isTimeshifted","isTimeshiftAvailable","getTimeShift","getMaxTimeShift","isPaused","liveStreamDetector","PlayerUtils","LiveStreamDetector","playbackTimeHandler","onLiveChanged","isLive","hideInLivePlayback","unsubscribe","detect","getDuration","Infinity","setTime","getCurrentTimeRelativeToSeekableRange","timeFormat","abs","FORMAT_HHMMSS","FORMAT_MMSS","Ready","playbackSeconds","durationSeconds","currentTime","secondsToTime","totalTime","timeLabelMode","CurrentTime","TotalTime","CurrentAndTotalTime","RemainingTime","remainingTime","setTimeFormat","handleClickEvent","playbackStateHandler","isSeeking","updateLiveState","isTimeShiftAvailable","CLASS_STOPTOGGLE","timeShiftDetector","PlaybackFinished","TimeShiftAvailabilityDetector","onTimeShiftAvailabilityChanged","onSeek","onSeeked","onAriaLabel","offAriaLabel","hugeplaybacktogglebutton_1","PlaybackToggleOverlay","playbackToggleButton","QuickSeekButton","switchVisibility","hasTimeShift","timeShiftAvailable","newSeekTime","clampedValue","seekSeconds","currentSeekTarget","clampValueToRange","seek","onSeekedOrTimeShifted","onTimeShift","seekDirection","seekTarget","position","hugereplaybutton_1","RecommendationOverlay","setupRecommendations","clearRecommendations","recommendations","recommendations_1","RecommendationItem","itemConfig","replayButton","itemElement","href","background-image","thumbnail","bgElement","titleElement","timeElement","ReplayButton","hasEnded","groupplaybackapi_1","seekbarcontroller_1","timelinemarkershandler_1","seekbarbufferlevel_1","SeekBar","hasLabel","getLabel","setAriaSliderMinMax","min","setAriaSliderValues","ariaValueText","seekBarType","SeekBarType","Live","timeshiftValue","ceil","Vod","secondsToText","floor","getPlaybackPositionPercentage","getRelativeCurrentTime","updateBufferLevel","playbackPositionPercentage","bufferLoadedPercentageLevel","getMinBufferLevel","setBufferPosition","configureSeek","scrubbing","isPlayerSeeking","suspension","playbackPositionHandler","isGroupPlaybackAPIAvailable","setPosition","seekBarBackdrop","SeekBarController","keyStepIncrements","volumeController","setSeekBarControls","forceUpdate","isUserSeeking","SegmentRequestFinished","setPlaybackPosition","isInInitialStartupState","smoothPlaybackPositionUpdateIntervalMs","SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED","isNeitherPausedNorPlaying","configureLivePausedTimeshiftUpdater","onPlayerSeek","setSeeking","onPlayerSeeked","groupPlayback","hasJoined","beginSuspension","GroupPlaybackSuspensionReason","UserIsScrubbing","onSeekPreview","enableSeekPreview","subscribeRateLimited","seekWhileScrubbing","percentage","proposedPlaybackTime","getTargetSeekPosition","endSuspension","refreshPlaybackPosition","smoothPlaybackPositionUpdater","PlayerResized","onConfigured","seekbarSnappingRange","snappingRange","seekbarSnappingEnabled","snappingEnabled","setSeekPosition","configureSmoothPlaybackPositionUpdater","initializeTimelineMarkers","Volume","timelineMarkerConfig","timelineMarkersHandler","TimelineMarkersHandler","seekBar","seekBarMarkersContainer","pausedTimeshiftUpdater","startSmoothPlaybackPositionUpdater","currentTimeSeekBar","stopSmoothPlaybackPositionUpdater","currentTimePlayer","updateIntervalMs","PlayerAPINotAvailableError","currentTimeDelta","seekBarContainer","vertical","seekBarBufferLevel","seekBarPlaybackPosition","seekBarBufferPosition","seekBarPlaybackPositionMarker","seekBarSeekPosition","seekBarChapterMarkersContainer","seeking","mouseTouchMoveHandler","preventDefault","vr","stopPropagation","targetPercentage","getOffset","onSeekPreviewEvent","mouseTouchUpHandler","document","matchingMarker","getMarkerAtPosition","onSeekedEvent","isTouchEvent","onSeekEvent","getHorizontalOffset","eventPageX","elementOffsetPx","offset","left","widthPx","sanitizeOffset","getVerticalOffset","eventPageY","top","changedTouches","touches","pageY","pageX","MouseEvent","warn","percent","px","style","transform","-ms-transform","-webkit-transform","scale","CLASS_SEEKING","seekBarEvents","snappedMarker","seekPositionPercentage","marker","TouchEvent","seekableRangeStart","maxTimeShift","getSeekableRangeStart","targetPlaybackPosition","leftRight","upDown","playerDuration","videoBufferLength","getVideoBufferLength","audioBufferLength","getAudioBufferLength","bufferLength","Number","MAX_VALUE","coerceValueIntoRange","range","cb","arrowKeyControls","currentValue","valueUpdate","controlValue","right","up","down","home","end","seekBarControls","volumeTransition","startTransition","getVolume","finish","bind","domElement","controls","keyCode","KeyCode","LeftArrow","RightArrow","UpArrow","DownArrow","Home","End","Space","imageloader_1","SeekBarLabel","setTitleText","setThumbnail","uiManager","handleSeekPreview","timeLabel","seconds","titleLabel","thumbnailElement","thumbnailImageLoader","load","x","thumbnailCssSprite","thumbnailCssSingleImage","sizeX","sizeY","offsetX","offsetY","y","aspectRatio","padding-bottom","background-size","background-position","appliedMarkerCssClasses","targetTimeShift","currentTimeShift","timeShiftPreview","wallClockTime","getThumbnail","time","ImageLoader","DocumentDropdownClosedEvents","SelectDropdownClosedEvents","DropdownOpenedEvents","selectElement","closeDropdown","addDropdownOpenedListeners","onChange","uiContainer","getUI","onPlayerStateChange","getSelectElement","get","optionElement","addDropdownCloseListeners","removeDropdownCloseListeners","clearTimeout","dropdownCloseListenerTimeoutId","addEventListener","onDropdownClosed","removeEventListener","removeListenerFunctions","removeDropdownOpenedListeners","event_1","listener","onDropdownOpened","DropdownOpenedEvents_1","removeListenerFunctions_1","val","select","blur","state","PlayerState","Idle","Finished","NavigationDirection","settingspanelpage_1","hideHoveredSelectBoxes","hideTimeout","reset","activePage","onInactiveEvent","resetNavigation","onActiveEvent","getRootPage","onSettingsStateChanged","onSettingsStateChangedEvent","updateActivePageClass","getActivePage","setActivePageIndex","setActivePage","getPages","targetPage","navigateToPage","Forwards","pageTransitionAnimation","popToRootSettingsPanelPage","popSettingsPanelPage","navigationStack","Backwards","rootPageHasActiveSettings","hasActiveSettings","SettingsPanelPage","settingsPanelEvents","suspend","resume","page","CLASS_ACTIVE_PAGE","resetNavigationOnShow","sourcePage","rootPage","animateNavigation","direction","skipAnimation","pop","settingsPanelDomElement","settingsPanelWidth","settingsPanelHeight","clone","targetSettingsPanelHeight","settingsPanelHTMLElement","scrollWidth","scrollHeight","targetPageHtmlElement","cloneNode","parentNode","appendChild","targetSettingsPanelWidth","parentElement","removeChild","forceBrowserReflow","offsetLeft","getComputedItems","selectBox","allItems","apply","videoqualityselectbox_1","audioqualityselectbox_1","playbackspeedselectbox_1","handleConfigItemChanged","setting","minItemsToDisplay","VideoQualitySelectBox","hasAutoItem","playbackSpeedSelectionEnabled","onActiveChangedEvent","settingsPanelItemEvents","onActiveChanged","settingsStateChangedHandler","lastShownItem","CLASS_LAST","settingsPanelPageEvents","activeItems","onActive","isIOS","isMacIntel","focusToFirstInput","onInactive","settingspanelpagenavigatorbutton_1","SettingsPanelPageBackButton","SettingsPanelPageNavigatorButton","popPage","container","pushTargetPage","SettingsPanelPageOpenButton","SettingsToggleButton","settingsPanel","visibleSettingsPanels","autoHideWhenNoActiveSettings","settingsPanelItemsChangedHandler","subtitleutils_1","SubtitleListBox","SubtitleSwitchHandler","controlbar_1","vttutils_1","SubtitleOverlay","subtitleClearHandler","subtitleContainerManager","subtitleManager","clearInactiveCues","toRemove","removeLabel","ActiveSubtitleManager","SubtitleRegionContainerManager","CueEnter","generateLabel","cueEnter","preprocessLabelEventCallback","previewSubtitleActive","previewSubtitle","addLabel","size","forceSubtitlesIntoViewContainer","handleSubtitleCropping","CueUpdate","labelToReplace","cueUpdate","replaceLabel","CueExit","labelToRemove","cueExit","hasCues","SubtitleDisabled","CLASS_CONTROLBAR_VISIBLE","configureCea608Captions","detectCroppedSubtitleLabel","parent","childRect","getBoundingClientRect","parentRect","bottom","labelDomElement","cropDetection","removeCss","row","column","SubtitleLabel","generateImageTagText","image","vtt","region","regionStyle","updateCEA608FontSize","dummyLabel","font-size","line-height","visibility","dummyLabelCharWidth","dummyLabelCharHeight","fontSizeRatio","subtitleOverlayWidth","subtitleOverlayHeight","fontLetterSpacing","CEA608_NUM_COLUMNS","CEA608_NUM_ROWS","fontSize","letter-spacing","CLASS_CEA_608","fontSizeCalculationRequired","CEA608_COLUMN_OFFSET","CEA608_ROW_OFFSET","SubtitleEnabled","enablePreviewSubtitleLabel","removePreviewSubtitleLabel","calculateId","addCueToMap","popCueFromMap","activeSubtitleCueMap","activeSubtitleCueCount","activeSubtitleCues","activeSubtitleCue","removedCues","cue","imageData","imgTag","src","outerHTML","getCues","cueCount","getRegion","regionContainerId","regionName","overlaySize","subtitleRegionContainers","regionContainerId_1","regionContainer","SubtitleRegionContainer","subtitleOverlay","previousLabel","newLabel","labelToAdd","labelCount","VttUtils","setVttRegionStyles","setVttCueBoxStyles","SubtitleSelectBox","subtitlesettingselectbox_1","BackgroundColorSelectBox","SubtitleSettingSelectBox","setColorAndOpacity","settingsManager","backgroundColor","isSet","backgroundOpacity","toggleOverlayClass","onChanged","property","BackgroundOpacitySelectBox","CharacterEdgeSelectBox","characterEdge","FontColorSelectBox","fontColor","fontOpacity","FontFamilySelectBox","fontFamily","FontOpacitySelectBox","FontSizeSelectBox","currentCssClass","overlay","getSubtitleSettingsManager","SubtitleSettingsLabel","opener","storageutils_1","SubtitleSettingsManager","_properties","SubtitleSettingsProperty","windowColor","windowOpacity","userSettings","localStorageKey","DummyComponent","instance","propertyName","save","StorageUtils","setObject","getObject","_instance","_value","onChangedEvent","_onChanged","_manager","manager","fontsizeselectbox_1","fontfamilyselectbox_1","fontcolorselectbox_1","fontopacityselectbox_1","characteredgeselectbox_1","backgroundcolorselectbox_1","backgroundopacityselectbox_1","windowcolorselectbox_1","windowopacityselectbox_1","subtitlesettingsresetbutton_1","settingspanelpagebackbutton_1","SubtitleSettingsPanelPage","WindowColorSelectBox","WindowOpacitySelectBox","SubtitleSettingsResetButton","getSeekBarWidth","markersContainer","timelineMarkers","configureMarkers","clearMarkers","AdBreakStarted","AdBreakFinished","updateMarkers","updateMarkersDOM","onRelease","intervalMarkerMatch","positionMarkerMatch","removeMarkerFromConfig","markers","_marker","filterRemovedMarkers","seekbarMarker","removeMarkerFromDOM","shouldProcessMarkers","validToProcess","hasMarkers","markerPosition","markerDuration","getSeekableRangeRespectingLive","isNaN","updateMarkerDOM","newMarker","createMarkerDOM","getMarkerCssProperties","seekBarWidthPx","positionInPx","cssProperties","markerWidthPx","round","imageElement_1","markerClasses","markerElement","data-marker-time","data-marker-title","imageUrl","handler","Destroy","metadatalabel_1","TitleBar","shouldBeShown","hasMetadataText","checkMetadataTextAndUpdateVisibility","keepHiddenWithoutMetadata","isOff","onState","onToggleEvent","onToggleOnEvent","isOn","onToggleOffEvent","toggleButtonEvents","canvas","canvasElement","canvasContext","getContext","noiseAnimationWindowPos","canvasHeight","lastFrameUpdate","canvasWidth","renderFrame","useAnimationFrame","cancelAnimationFrame","frameUpdateHandlerId","frameInterval","getTime","currentPixelOffset","noiseImage","createImageData","random","interferenceHeight","putImageData","scheduleNextRender","requestAnimationFrame","userInteractionEventSource","configureUIShowHide","configurePlayerStates","isFirstTouch","playerState","hidingPrevented","hidePlayerStateExceptions","uiHideTimeout","hideUi","previewHideEventArgs","userInteractionEvents","shouldPreventDefault","findButtonComponent","buttonComponent","hideImmediatelyOnMouseLeave","playerStateChange","enumName","stateClassNames","STATE_PREFIX","updateState","removeStates","updateLayoutSizeClasses","Prepared","getState","FULLSCREEN","BUFFERING","REMOTE_CONTROL","CONTROLS_HIDDEN","CONTROLS_SHOWN","substring","getContainer","createElement","flex","updateVideoQualities","videoQualities","hasAuto","getStreamType","videoQualities_1","videoQuality","selectCurrentVideoQuality","getVideoQuality","VideoQualityAdded","VideoQualityRemoved","volumeslider_1","volumetogglebutton_1","VolumeControlButton","volumeToggleButton","getVolumeToggleButton","volumeSlider","getVolumeSlider","volumeSliderHovered","volumeSliderHideTimeout","VolumeToggleButton","VolumeSlider","seekbar_1","setVolumeAriaSliderValues","hideIfVolumeControlProhibited","detectVolumeControlAvailability","muted","volume","updateVolumeWhileScrubbing","dummyVideoElement","update","volumeLevelTens","toggleMuted","VRToggleButton","vrStateHandler","ev","VR_RENDERING_ERROR","isVRConfigured","isVRStereoAvailable","getStereo","vrButtonVisibilityHandler","source","VRStereoChanged","setStereo","Watermark","vrtogglebutton_1","settingstogglebutton_1","playbacktimelabel_1","airplaytogglebutton_1","errormessageoverlay_1","casttogglebutton_1","fullscreentogglebutton_1","recommendationoverlay_1","caststatusoverlay_1","subtitleoverlay_1","seekbarlabel_1","playbacktoggleoverlay_1","pictureinpicturetogglebutton_1","uimanager_1","titlebar_1","bufferingoverlay_1","subtitlelistbox_1","audiotracklistbox_1","uifactory_1","main_1","DemoFactory","buildDemoWithSeparateAudioSubtitlesButtons","subtitleListBox","audioTrackListBox","UIManager","ui","UIFactory","modernSmallScreenAdsUI","condition","context","documentWidth","isAd","adRequiresUi","modernAdsUI","modernSmallScreenUI","radioModeAvailable","subtitleSettingsPanel","audioTrackSettingsPanel","controlBar","something","attributes","Array","HTMLElement","elements","Document","attributeName","attributeValue","setAttribute","findChildElements","findChildElementsOfElement","selector","childElements","querySelectorAll","allChildElements","inputElements","focus","scrollTo","arguments","setHtml","getHtml","innerHTML","HTMLSelectElement","HTMLInputElement","attribute","setAttr","getAttr","removeAttr","removeAttribute","getAttribute","dataAttribute","setData","getData","childElement","elementRect","htmlRect","body","offsetWidth","offsetHeight","eventName","eventHandler","options","split","className","classNames","classList","add","replace","RegExp","contains","propertyNameOrCollection","setCss","getCss","setCssCollection","elementIndex","removeProperty","getComputedStyle","ruleValueCollection","defaultErrorMessages","1000","1001","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1300","1301","1302","1303","1304","1400","1401","1402","1403","1404","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2100","2101","3000","3001","3002","3003","3004","3100","listeners","EventListenerWrapper","rateMs","RateLimitedEventListenerWrapper","subscribedListener","unsubscribeAll","listenersToRemove","listeners_1","fire","isOnce","listenersToRemove_1","eventListener","once","shouldFireEvent","rateLimitTimout","fireSuper","rateLimitingEventListener","startRateLimiting","lastSeenEvent","FocusVisibleCssClassName","FocusVisibilityTracker","bitmovinUiPrefix","lastInteractionWasKeyboard","onKeyDown","metaKey","altKey","ctrlKey","onMouseOrPointerOrTouch","onFocus","isHtmlElement","onBlur","eventHandlerMap","mousedown","pointerdown","touchstart","keydown","registerEventListeners","DOMTokenList","unregisterEventListeners","event_2","guid","loadedCallback","state_1","loaded","callLoadedCallback","de_json_1","__importDefault","en_json_1","es_json_1","nl_json_1","defaultLocalizationConfig","defaultVocabularies","en","default","de","es","nl","language","vocabularies","I18n","mergedConfig","detectBrowserLanguage","mergeVocabulariesWithDefaultVocabularies","initializeLanguage","initializeVocabulary","containsLanguage","hasOwnProperty","rawVocabularies","reduce","mergedVocabularies","vocabulary","browserLanguageDetectionEnabled","userLanguage","shortenedUserLanguage","vocab","lang","replaceVariableWithPlaceholderIfExists","matches","match","m","str","vocabularyString","settings.video.quality","settings.audio.quality","settings.audio.track","playPause","close","settings.audio.mute","settings.audio.volume","pictureInPicture","appleAirplay","googleCast","settings","fullscreen","settings.subtitles","settings.subtitles.font.size","settings.subtitles.font.family","settings.subtitles.font.color","settings.subtitles.font.opacity","settings.subtitles.characterEdge","settings.subtitles.background.color","settings.subtitles.background.opacity","settings.subtitles.window.color","settings.subtitles.window.opacity","settings.time.hours","settings.time.minutes","settings.time.seconds","back","replay","ads.remainingTime","colors.white","colors.black","colors.red","colors.green","colors.blue","colors.yellow","subtitle.example","subtitle.select","playingOn","connectingTo","watermarkLink","seekBar.value","seekBar.timeshift","seekBar.durationText","quickseek.forward","quickseek.rewind","ecoMode","ecoMode.title","colors.cyan","colors.magenta","settings.subtitles.characterEdge.raised","settings.subtitles.characterEdge.depressed","settings.subtitles.characterEdge.uniform","settings.subtitles.characterEdge.dropshadowed","settings.subtitles.font.family.monospacedserif","settings.subtitles.font.family.proportionalserif","settings.subtitles.font.family.monospacedsansserif","settings.subtitles.font.family.proportionalsansserif","settings.subtitles.font.family.casual","settings.subtitles.font.family.cursive","settings.subtitles.font.family.smallcapital","auto","normal","version","__exportStar","demofactory_1","enumerable","spatialnavigation_1","navigationgroup_1","SpatialNavigation","rootnavigationgroup_1","NavigationGroup","ListNavigationGroup_1","RootNavigationGroup","ListNavigationGroup","ListOrientation","itemselectionlist_1","watermark_1","audiotrackselectbox_1","subtitleselectbox_1","volumecontrolbutton_1","adskipbutton_1","admessagelabel_1","adclickoverlay_1","castuicontainer_1","closebutton_1","subtitlesettingslabel_1","settingspanelpageopenbutton_1","subtitlesettingspanelpage_1","replaybutton_1","quickseekbutton_1","isRadioModeAvailable","set","CustomEvent","detail","dispatchEvent","TypeError","timeShiftAvailabilityChangedEvent","liveDetector","liveChangedEvent","isAndroid","isChrome","DurationChanged","defaultValue","getSeekableRange","currentTimeshift","maxTimeshift","timeShiftAvailableNow","liveNow","boundary1","boundary2","lowerBoundary","upperBoundary","types_1","handleAction","action","Action","SELECT","BACK","handleNavigation","listNavigationDirections","orientation","__spreadArray","Vertical","Direction","UP","DOWN","Horizontal","LEFT","RIGHT","typeguards_1","getHtmlElementsFromComponents","htmlElements","resolveAllComponents","childComponents","containerOrComponent","isContainer","isComponent","isListBox","children","TizenKeyMap","isApplicable","isTizen","keyCodes","38","40","37","39","13","10009","WebOsKeyMap","isWebOs","461","PlayStationKeyMap","isPlayStation","27","AndroidKeyMap","HisenseKeyMap","8","DefaultKeyMap","getKeyMapForPlatform","applicableKeyMap","keyMap","vector","sqrt","pow","getElementVector","boundingRect","getBoundingRectFromElement","calculateAngle","directionVector","len","elementVector","angleCos","acos","PI","getElementInDirection","activeElement","activeElemVector","elem","dist","angle","angleA","distA","navigationalgorithm_1","gethtmlelementsfromcomponents_1","nodeeventsubscriber_1","removeElementHoverEventListeners","eventSubscriber","NodeEventSubscriber","getActiveElement","focusElement","blurActiveElement","focusFirstElement","defaultNavigationHandler","targetElement","defaultActionHandler","click","handleInput","defaultHandler","userHandler","handleDefault","onNavigation","activeElementBeforeDisable","onAction","isSettingsPanel","trackElementHover","removeEventListenerFunctions","htmlElem","exitListener","enterListener","fn","attachedListeners","Map","getEventListenersOfType","has","node","listenersOfType","listenerIndex","otherNode","otherListener","otherOptions","SeekBarHandler","rootNavigationGroup","cursorPosition","isScrubbing","scrubSpeedPercentage","isSeekBarWrapper","stopSeeking","getSeekBar","initializeOrUpdateCursorPosition","dispatchMouseMoveEvent","dispatchMouseClickEvent","from","seekBarWrapper","updateScrubSpeedPercentage","scrubSpeedResetTimeout","getIncrement","increment","resetCursorPosition","updateCursorPosition","initializeCursorPosition","playbackPositionMarker","querySelector","rect","startX","startY","getCursorPositionMouseEventInit","clientX","clientY","mouseDownHandler","mouseEventInit","dispatchMouseLeaveEvent","seekbarhandler_1","keymap_1","navigationGroups","group","activeNavigationGroups","updateEnabledNavigationGroup","groupIndex","other","handleKeyEvent","getActiveNavigationGroup","isDirection","isAction","seekBarHandler","unsubscribeVisibilityChangesFns","subscribeToNavigationGroupVisibilityChanges","attachKeyEventHandler","enableDefaultNavigationGroup","onShowHandler","onHideHandler","unsubscribeFromNavigationGroupVisibilityChanges","unsub","groupToEnable","idx","obj","values","disableStorageApi","shouldUseLocalStorage","localStorage","getItem","setItem","debug","setStorageApiDisabled","json","parse","totalSeconds","format","isNegative","hours","minutes","leftPadWithZeros","num","substr","adMessage","adMessagePlaceholderRegex","formatString","isLinearAdActive","indexOfActiveAd","getActiveAdBreak","getActiveAd","total","isLinear","leadingZeroes","numDecimalPlaces","leadingZeroesMatches","decimalPlacesMatches","timeString","currentSubtitle","SUBTITLES_OFF_KEY","subtitles","list","subtitle","SubtitleAdded","addSubtitle","selectCurrentSubtitle","SubtitleRemoved","removeSubtitle","clearSubtitles","refreshSubtitles","offListItem","delay","repeat","timeoutOrIntervalId","suspended","clearInternal","setInterval","clearInterval","radiomodetogglebutton_1","quanteecconsumptions_1","ecomodecontainer_1","modernUI","ecoModeContainer","unshift","mainSettingsPanelPage","subtitleSettingsPanelPage","subtitleSelectBox","subtitleSettingsOpenButton","containerComponents","titleBarComponents","isBrowser","modernCastReceiverUI","modernTvUI","subtitleListPanel","audioTrackListPanel","playbackToggleOverlay","subtitleToggleButton","audioToggleButton","spatialNavigation","modernRadioModeUI","buildDefaultUI","buildModernUI","buildDefaultSmallScreenUI","buildModernSmallScreenUI","buildDefaultCastReceiverUI","buildModernCastReceiverUI","buildDefaultTvUI","buildModernTvUI","buildModernRadioModeUI","volumecontroller_1","focusvisibilitytracker_1","subtitlesettingsmanager_1","playerUiOrUiVariants","onUiVariantResolve","onActiveUiChanged","handleIsRadioModeActiveChange","handleIsRadioModeAvailableChange","uiVariants","subtitleSettingsManager","managerPlayerWrapper","PlayerWrapper","autoUiVariantResolve","VolumeController","getPlayer","available","resolveUiVariant","updateConfig","playerSourceConfig","playerSourceUiConfig","updateSource","wrappedPlayer","uiVariantsWithoutCondition","PlaylistTransition","uiContainerElement","uiInstanceManagers","uiVariant","InternalUIInstanceManager","adStartedEvent","requestsUi","currentUi","getWrappedPlayer","fireEventInUI","focusVisibilityTracker","localize","setLocalizationConfig","localizationConfig","getUiVariants","switchToUiVariant","uiVariantIndex","previousUi","nextUi","isConfigured","addUi","defaultContext","isFullscreen","clientWidth","switchingContext","nextUiVariant","matchesCondition","dom","configureControls","releaseUi","releaseControls","clearEventHandlers","uiInstanceManager","getTimelineMarkers","addTimelineMarker","timelineMarker","removeTimelineMarker","destroy","UIInstanceManager","playerWrapper","configureControlsTree","configured","configuredComponents","configuredComponents_1","constructor","releaseControlsTree","released","isReleased","childComponent","wrapper","eventHandlers","eventType","objectProtoPropertyNames","getOwnPropertyNames","getPrototypeOf","namesToIgnore","methods","properties","members_1","names","newNames","member","methods_1","method","properties_1","propertyDescriptor","propertyDescriptor_1","getOwnPropertyDescriptor","playerEventData","timestamp","uiSourced","visit","recursiveTreeWalker","setVolume","issuerName","setMuted","mute","unmute","isMuted","recallVolume","storeVolume","storedVolume","VolumeTransition","playerMuted","playerVolume","uiMuted","uiVolume","VolumeChanged","Muted","Unmuted","controller","setCueBoxPositionForVerticalWriting","cueContainerDom","subtitleOverlaySize","writingMode","Right","Top","setVttLine","setVttPositionAlign","positionAlign","DirectionPair","VttVerticalWriting","defaultLineNumber","Bottom","Left","setVttLineAlign","relativeCueBoxPosition","lineAlign","setCssForCenterLineAlign","subtitleOverLaySize","targetLine","relativeLinePosition","overlayReferenceEdge","line","snapToLines","cueContainer","GrowingRight","GrowingLeft","textAlign","align","containerSize","regionContainerDom","regionPositionX","viewportAnchorX","regionAnchorX","regionPositionY","viewportAnchorY","lines","regionAnchorY"],"mappings":"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","file":"bitmovinplayer-ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { PlayerAPI, PlayerEvent } from 'bitmovin-player';\nimport { Button, ButtonConfig } from '../../../ts/components/button';\nimport { UIInstanceManager } from '../../../ts/uimanager';\n\ndeclare const window: any;\n\ninterface GoBackButtonConfig extends ButtonConfig {\n  error?: boolean;\n}\n\nexport class GoBackButton extends Button<ButtonConfig> {\n  constructor(config: GoBackButtonConfig = { error: false }) {\n    super(config);\n\n    const defaultConfig: ButtonConfig = {\n      cssClasses: config.error ? ['ui-gobackbutton', 'ui-gobackbutton-error'] : ['ui-gobackbutton'],\n      text: 'Go Back',\n      ariaLabel: 'Go Back',\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      window.bitmovin.customMessageHandler.sendAsynchronous('goBack');\n    });\n\n    player.on(player.exports.PlayerEvent.ViewModeChanged, () => {\n      player.getViewMode() === 'fullscreen' ? this.hide() : this.show();\n    });\n  }\n}\n","import { PlayerAPI, PlayerEvent } from 'bitmovin-player';\nimport { Button, ButtonConfig } from '../../../ts/components/button';\nimport { UIInstanceManager } from '../../../ts/uimanager';\n\ndeclare const window: any;\n\ninterface QuanteecConsumptionsConfig extends ButtonConfig {\n}\n\nexport class QuanteecConsumptions extends Button<ButtonConfig> {\n  constructor(config: QuanteecConsumptionsConfig = {}) {\n    super(config);\n\n    const defaultConfig: ButtonConfig = {\n      cssClass: 'ui-quanteecconsumptions',\n      text: 'Get Quanteec consumptions',\n      ariaLabel: 'Get Quanteec consumptions',\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      // web handle\n      window.isQuanteecDisplayed = !window.isQuanteecDisplayed;\n    });\n  }\n}\n","import { PlayerAPI } from 'bitmovin-player';\nimport { ToggleButton, ToggleButtonConfig } from '../../../../ts/components/togglebutton';\nimport { UIInstanceManager } from '../../../../ts/uimanager';\n\ndeclare const window: any;\n\nexport interface RadioModeToggleButtonConfig extends ToggleButtonConfig {\n  /**\n   * Decides the initial state of the toggle button\n   * Default: false\n   */\n  active: boolean;\n}\n\nexport class RadioModeToggleButton extends ToggleButton<RadioModeToggleButtonConfig> {\n  constructor(config: RadioModeToggleButtonConfig) {\n    super(config);\n\n    const defaultConfig: RadioModeToggleButtonConfig = {\n      cssClass: config.active ? 'ui-closebutton' : 'ui-radiomodetogglebutton',\n      text: 'Radio Mode',\n      ariaLabel: 'Radio Mode',\n      active: false,\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      // Mobile\n      const initialState = this.config.active;\n      if (window.bitmovin.customMessageHandler) {\n        window.bitmovin.customMessageHandler.sendAsynchronous(\n          'radioModeChanged',\n          JSON.stringify({\n            initialState,\n            activated: !this.config.active,\n          }),\n        );\n      }\n\n      // Web\n      window.isRadioModeActive = !window.isRadioModeActive;\n    });\n  }\n}\n","/**\n * @category Utils\n */\nexport namespace ArrayUtils {\n  /**\n   * Removes an item from an array.\n   * @param array the array that may contain the item to remove\n   * @param item the item to remove from the array\n   * @returns {any} the removed item or null if it wasn't part of the array\n   */\n  export function remove<T>(array: T[], item: T): T | null {\n    let index = array.indexOf(item);\n\n    if (index > -1) {\n      return array.splice(index, 1)[0];\n    } else {\n      return null;\n    }\n  }\n}\n","import { ListItem, ListSelector, ListSelectorConfig } from './components/listselector';\nimport { UIInstanceManager } from './uimanager';\nimport { AudioTrackEvent, PlayerAPI, AudioTrack } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\n\n/**\n * Helper class to handle all audio tracks related events\n *\n * This class listens to player events as well as the `ListSelector` event if selection changed\n *\n * @category Utils\n */\nexport class AudioTrackSwitchHandler {\n\n  private player: PlayerAPI;\n  private listElement: ListSelector<ListSelectorConfig>;\n  private uimanager: UIInstanceManager;\n\n  constructor(player: PlayerAPI, element: ListSelector<ListSelectorConfig>, uimanager: UIInstanceManager) {\n    this.player = player;\n    this.listElement = element;\n    this.uimanager = uimanager;\n\n    this.bindSelectionEvent();\n    this.bindPlayerEvents();\n    this.refreshAudioTracks();\n  }\n\n  private bindSelectionEvent(): void {\n    this.listElement.onItemSelected.subscribe((_, value: string) => {\n      this.player.setAudio(value);\n    });\n  }\n\n  private bindPlayerEvents(): void {\n    // Update selection when selected track has changed\n    this.player.on(this.player.exports.PlayerEvent.AudioChanged, this.selectCurrentAudioTrack);\n    // Update tracks when source goes away\n    this.player.on(this.player.exports.PlayerEvent.SourceUnloaded, this.refreshAudioTracks);\n    // Update tracks when the period within a source changes\n    this.player.on(this.player.exports.PlayerEvent.PeriodSwitched, this.refreshAudioTracks);\n    // Update tracks when a track is added or removed\n    this.player.on(this.player.exports.PlayerEvent.AudioAdded, this.addAudioTrack);\n    this.player.on(this.player.exports.PlayerEvent.AudioRemoved, this.removeAudioTrack);\n    this.uimanager.getConfig().events.onUpdated.subscribe(this.refreshAudioTracks);\n  }\n\n  private addAudioTrack = (event: AudioTrackEvent) => {\n    const audioTrack = event.track;\n    if (!this.listElement.hasItem(audioTrack.id)) {\n      this.listElement.addItem(audioTrack.id, i18n.getLocalizer(audioTrack.label), true);\n    }\n  };\n\n  private removeAudioTrack = (event: AudioTrackEvent) => {\n    const audioTrack = event.track;\n    if (this.listElement.hasItem(audioTrack.id)) {\n      this.listElement.removeItem(audioTrack.id);\n    }\n  };\n\n  private selectCurrentAudioTrack = () => {\n    let currentAudioTrack = this.player.getAudio();\n\n    // HLS streams don't always provide this, so we have to check\n    if (currentAudioTrack) {\n      this.listElement.selectItem(currentAudioTrack.id);\n    }\n  };\n\n  private refreshAudioTracks = () => {\n    const audioTracks = this.player.getAvailableAudio();\n    const audioTrackToListItem = (audioTrack: AudioTrack): ListItem => {\n      return { key: audioTrack.id, label: audioTrack.label };\n    };\n\n    this.listElement.synchronizeItems(audioTracks.map(audioTrackToListItem));\n    this.selectCurrentAudioTrack();\n  };\n}\n","declare global {\n  interface Navigator {\n    msMaxTouchPoints?: number;\n  }\n}\n\n/**\n * @category Utils\n */\nexport class BrowserUtils {\n  // isMobile only needs to be evaluated once (it cannot change during a browser session)\n  // Mobile detection according to Mozilla recommendation: \"In summary, we recommend looking for the string “Mobi”\n  // anywhere in the User Agent to detect a mobile device.\"\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n  static get isMobile(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Mobi/.test(navigator.userAgent);\n  }\n\n  static get isChrome(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Chrome/.test(navigator.userAgent);\n  }\n\n  static get isAndroid(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Android/.test(navigator.userAgent) && !this.isHisense;\n  }\n\n  static get isIOS(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  }\n\n  static get isMacIntel(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && navigator.platform === 'MacIntel';\n  }\n\n  static get isHisense(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Hisense/.test(navigator.userAgent);\n  }\n\n  static get isPlayStation(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /PlayStation/i.test(navigator.userAgent);\n  }\n\n  static get isWebOs(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return (\n      navigator &&\n      navigator.userAgent &&\n      (navigator.userAgent.includes('Web0S') || navigator.userAgent.includes('NetCast'))\n    );\n  }\n\n  static get isTizen(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Tizen/.test(navigator.userAgent);\n  }\n\n  // https://hacks.mozilla.org/2013/04/detecting-touch-its-the-why-not-the-how/\n  static get isTouchSupported() {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return 'ontouchstart' in window || navigator && navigator.userAgent && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0);\n  }\n\n  private static windowExists(): boolean {\n    return typeof window !== 'undefined';\n  }\n}\n","import { ClickOverlay, ClickOverlayConfig } from './clickoverlay';\nimport { UIInstanceManager } from '../uimanager';\nimport { Ad, AdEvent, PlayerAPI } from 'bitmovin-player';\n\n/**\n * A simple click capture overlay for clickThroughUrls of ads.\n *\n * @category Components\n */\nexport class AdClickOverlay extends ClickOverlay {\n  constructor(config: ClickOverlayConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      acceptsTouchWithUiHidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let clickThroughCallback: () => void = null;\n\n    player.on(player.exports.PlayerEvent.AdStarted, (event: AdEvent) => {\n      let ad = event.ad;\n      this.setUrl(ad.clickThroughUrl);\n      clickThroughCallback = ad.clickThroughUrlOpened;\n    });\n\n    // Clear click-through URL when ad has finished\n    let adFinishedHandler = () => {\n      this.setUrl(null);\n    };\n\n    player.on(player.exports.PlayerEvent.AdFinished, adFinishedHandler);\n    player.on(player.exports.PlayerEvent.AdSkipped, adFinishedHandler);\n    player.on(player.exports.PlayerEvent.AdError, adFinishedHandler);\n\n    this.onClick.subscribe(() => {\n      // Pause the ad when overlay is clicked\n      player.pause('ui-ad-click-overlay');\n\n      if (clickThroughCallback) {\n        clickThroughCallback();\n      }\n    });\n  }\n}\n","import {Label, LabelConfig} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport {StringUtils} from '../stringutils';\nimport { AdEvent, LinearAd, PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A label that displays a message about a running ad, optionally with a countdown.\n *\n * @category Components\n */\nexport class AdMessageLabel extends Label<LabelConfig> {\n\n  constructor(config: LabelConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-label-ad-message',\n      text: i18n.getLocalizer('ads.remainingTime') ,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let text = config.text;\n\n    let updateMessageHandler = () => {\n      this.setText(StringUtils.replaceAdMessagePlaceholders(i18n.performLocalization(text), null, player));\n    };\n\n    let adStartHandler = (event: AdEvent) => {\n      let uiConfig = (event.ad as LinearAd).uiConfig;\n      text = uiConfig && uiConfig.message || config.text;\n\n      updateMessageHandler();\n\n      player.on(player.exports.PlayerEvent.TimeChanged, updateMessageHandler);\n    };\n\n    let adEndHandler = () => {\n      player.off(player.exports.PlayerEvent.TimeChanged, updateMessageHandler);\n    };\n\n    player.on(player.exports.PlayerEvent.AdStarted, adStartHandler);\n    player.on(player.exports.PlayerEvent.AdSkipped, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdError, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdFinished, adEndHandler);\n  }\n}","import { ButtonConfig, Button } from './button';\nimport { UIInstanceManager } from '../uimanager';\nimport { StringUtils } from '../stringutils';\nimport { AdEvent, LinearAd, PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for the {@link AdSkipButton}.\n *\n * @category Configs\n */\nexport interface AdSkipButtonConfig extends ButtonConfig {\n  /**\n   * Message which gets displayed during the countdown is active.\n   * Supported placeholders: look at {@link StringUtils.replaceAdMessagePlaceholders}\n   */\n  untilSkippableMessage?: string;\n  /**\n   * Message displayed when the ad is skippable.\n   * Supported placeholders: look at {@link StringUtils.replaceAdMessagePlaceholders}\n   */\n  skippableMessage?: string;\n}\n\n/**\n * A button that is displayed during ads and can be used to skip the ad.\n *\n * @category Buttons\n */\nexport class AdSkipButton extends Button<AdSkipButtonConfig> {\n\n  constructor(config: AdSkipButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <AdSkipButtonConfig>{\n      cssClass: 'ui-button-ad-skip',\n      untilSkippableMessage: 'Skip ad in {remainingTime}',\n      skippableMessage: 'Skip ad',\n      acceptsTouchWithUiHidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let untilSkippableMessage = config.untilSkippableMessage;\n    let skippableMessage = config.skippableMessage;\n    let skipOffset = -1;\n\n    let updateSkipMessageHandler = () => {\n      this.show();\n\n      // Update the skip message on the button\n      if (player.getCurrentTime() < skipOffset) {\n        this.setText(StringUtils.replaceAdMessagePlaceholders(untilSkippableMessage, skipOffset, player));\n        this.disable();\n      } else {\n        this.setText(skippableMessage);\n        this.enable();\n      }\n    };\n\n    let adStartHandler = (event: AdEvent) => {\n      let ad = event.ad as LinearAd;\n      skipOffset = ad.skippableAfter;\n      untilSkippableMessage = ad.uiConfig && ad.uiConfig.untilSkippableMessage || config.untilSkippableMessage;\n      skippableMessage = ad.uiConfig && ad.uiConfig.skippableMessage || config.skippableMessage;\n\n      // Display this button only if ad is skippable.\n      // Non-skippable ads will return -1 for skippableAfter for player version < v8.3.0.\n      if (typeof skipOffset === 'number' && skipOffset >= 0) {\n        updateSkipMessageHandler();\n        player.on(player.exports.PlayerEvent.TimeChanged, updateSkipMessageHandler);\n      } else {\n        this.hide();\n      }\n    };\n\n    let adEndHandler = () => {\n      player.off(player.exports.PlayerEvent.TimeChanged, updateSkipMessageHandler);\n    };\n\n    player.on(player.exports.PlayerEvent.AdStarted, adStartHandler);\n    player.on(player.exports.PlayerEvent.AdSkipped, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdError, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdFinished, adEndHandler);\n\n    this.onClick.subscribe(() => {\n      // Try to skip the ad (this only works if it is skippable so we don't need to take extra care of that here)\n      player.ads.skip();\n    });\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles Apple AirPlay.\n *\n * @category Buttons\n */\nexport class AirPlayToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-airplaytogglebutton',\n      text: i18n.getLocalizer('appleAirplay'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    if (!player.isAirplayAvailable) {\n      // If the player does not support Airplay (player 7.0), we just hide this component and skip configuration\n      this.hide();\n      return;\n    }\n\n    this.onClick.subscribe(() => {\n      if (player.isAirplayAvailable()) {\n        player.showAirplayTargetPicker();\n      } else {\n        if (console) {\n          console.log('AirPlay unavailable');\n        }\n      }\n    });\n\n    const airPlayAvailableHandler = () => {\n      if (player.isAirplayAvailable()) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    const airPlayChangedHandler = () => {\n      if (player.isAirplayActive()) {\n        this.on();\n      } else {\n        this.off();\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.AirplayAvailable, airPlayAvailableHandler);\n    player.on(player.exports.PlayerEvent.AirplayChanged, airPlayChangedHandler);\n\n    // Startup init\n    airPlayAvailableHandler(); // Hide button if AirPlay is not available\n    airPlayChangedHandler();\n  }\n}","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection between 'auto' and the available audio qualities.\n *\n * @category Components\n */\nexport class AudioQualitySelectBox extends SelectBox {\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-audioqualityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let selectCurrentAudioQuality = () => {\n      this.selectItem(player.getAudioQuality().id);\n    };\n\n    let updateAudioQualities = () => {\n      let audioQualities = player.getAvailableAudioQualities();\n\n      this.clearItems();\n\n      // Add entry for automatic quality switching (default setting)\n      this.addItem('auto', i18n.getLocalizer('auto'));\n\n      // Add audio qualities\n      for (let audioQuality of audioQualities) {\n        this.addItem(audioQuality.id, audioQuality.label);\n      }\n\n      // Select initial quality\n      selectCurrentAudioQuality();\n    };\n\n    this.onItemSelected.subscribe((sender: AudioQualitySelectBox, value: string) => {\n      player.setAudioQuality(value);\n    });\n\n    // Update qualities when audio track has changed\n    player.on(player.exports.PlayerEvent.AudioChanged, updateAudioQualities);\n    // Update qualities when source goes away\n    player.on(player.exports.PlayerEvent.SourceUnloaded, updateAudioQualities);\n    // Update qualities when the period within a source changes\n    player.on(player.exports.PlayerEvent.PeriodSwitched, updateAudioQualities);\n    // Update quality selection when quality is changed (from outside)\n    player.on(player.exports.PlayerEvent.AudioQualityChanged, selectCurrentAudioQuality);\n    if ((player.exports.PlayerEvent as any).AudioQualityAdded) {\n      // Update qualities when their availability changed\n      // TODO: remove any cast after next player release\n      player.on((player.exports.PlayerEvent as any).AudioQualityAdded, updateAudioQualities);\n      player.on((player.exports.PlayerEvent as any).AudioQualityRemoved, updateAudioQualities);\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(updateAudioQualities);\n  }\n}","import {ListBox} from './listbox';\nimport {UIInstanceManager} from '../uimanager';\nimport {AudioTrackSwitchHandler} from '../audiotrackutils';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * A element that is similar to a select box where the user can select a subtitle\n *\n * @category Components\n */\nexport class AudioTrackListBox extends ListBox {\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    new AudioTrackSwitchHandler(player, this, uimanager);\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport {AudioTrackSwitchHandler} from '../audiotrackutils';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * A select box providing a selection between available audio tracks (e.g. different languages).\n *\n * @category Components\n */\nexport class AudioTrackSelectBox extends SelectBox {\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-audiotrackselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    new AudioTrackSwitchHandler(player, this, uimanager);\n  }\n}","import {ContainerConfig, Container} from './container';\nimport {UIInstanceManager} from '../uimanager';\nimport {Component, ComponentConfig} from './component';\nimport {Timeout} from '../timeout';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for the {@link BufferingOverlay} component.\n *\n * @category Configs\n */\nexport interface BufferingOverlayConfig extends ContainerConfig {\n  /**\n   * Delay in milliseconds after which the buffering overlay will be displayed. Useful to bypass short stalls without\n   * displaying the overlay. Set to 0 to display the overlay instantly.\n   * Default: 1000ms (1 second)\n   */\n  showDelayMs?: number;\n}\n\n/**\n * Overlays the player and displays a buffering indicator.\n *\n * @category Components\n */\nexport class BufferingOverlay extends Container<BufferingOverlayConfig> {\n\n  private indicators: Component<ComponentConfig>[];\n\n  constructor(config: BufferingOverlayConfig = {}) {\n    super(config);\n\n    this.indicators = [\n      new Component<ComponentConfig>({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator', role: 'img' }),\n      new Component<ComponentConfig>({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator', role: 'img' }),\n      new Component<ComponentConfig>({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator', role: 'img' }),\n    ];\n\n    this.config = this.mergeConfig(config, <BufferingOverlayConfig>{\n      cssClass: 'ui-buffering-overlay',\n      hidden: true,\n      components: this.indicators,\n      showDelayMs: 1000,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    let overlayShowTimeout = new Timeout(config.showDelayMs, () => {\n      this.show();\n    });\n\n    let showOverlay = () => {\n      overlayShowTimeout.start();\n    };\n\n    let hideOverlay = () => {\n      overlayShowTimeout.clear();\n      this.hide();\n    };\n\n    player.on(player.exports.PlayerEvent.StallStarted, showOverlay);\n    player.on(player.exports.PlayerEvent.StallEnded, hideOverlay);\n    player.on(player.exports.PlayerEvent.Play, showOverlay);\n    player.on(player.exports.PlayerEvent.Playing, hideOverlay);\n    player.on(player.exports.PlayerEvent.Paused, hideOverlay);\n    player.on(player.exports.PlayerEvent.Seek, showOverlay);\n    player.on(player.exports.PlayerEvent.Seeked, hideOverlay);\n    player.on(player.exports.PlayerEvent.TimeShift, showOverlay);\n    player.on(player.exports.PlayerEvent.TimeShifted, hideOverlay);\n    player.on(player.exports.PlayerEvent.SourceUnloaded, hideOverlay);\n\n    // Show overlay if player is already stalled at init\n    if (player.isStalled()) {\n      this.show();\n    }\n  }\n}\n","import {ComponentConfig, Component} from './component';\nimport {DOM} from '../dom';\nimport {EventDispatcher, NoArgs, Event} from '../eventdispatcher';\nimport { LocalizableText , i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link Button} component.\n *\n * @category Configs\n */\nexport interface ButtonConfig extends ComponentConfig {\n  /**\n   * The text as string or localize callback on the button.\n   */\n  text?: LocalizableText;\n  /**\n   * WCAG20 standard for defining info about the component (usually the name)\n   */\n  ariaLabel?: LocalizableText;\n\n  /**\n   * Specifies whether the first touch event received by the {@link UIContainer} should be prevented or not.\n   *\n   * Default: false\n   */\n  acceptsTouchWithUiHidden?: boolean;\n}\n\n/**\n * A simple clickable button.\n *\n * @category Components\n */\nexport class Button<Config extends ButtonConfig> extends Component<Config> {\n\n  private buttonEvents = {\n    onClick: new EventDispatcher<Button<Config>, NoArgs>(),\n  };\n\n  constructor(config: Config) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-button',\n      role: 'button',\n      tabIndex: 0,\n      acceptsTouchWithUiHidden: false,\n    } as Config, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    const buttonElementAttributes: { [name: string]: string } = {\n      'id': this.config.id,\n      'aria-label': i18n.performLocalization(this.config.ariaLabel || this.config.text),\n      'class': this.getCssClasses(),\n      'type' : 'button',\n      /**\n      * WCAG20 standard to display if a button is pressed or not\n      */\n      'aria-pressed': 'false',\n      'tabindex': this.config.tabIndex.toString(),\n    };\n\n    if (this.config.role != null) {\n      buttonElementAttributes['role'] = this.config.role;\n    }\n\n    // Create the button element with the text label\n    let buttonElement = new DOM('button', buttonElementAttributes, this).append(new DOM('span', {\n      'class': this.prefixCss('label'),\n    }).html(i18n.performLocalization(this.config.text)));\n\n    // Listen for the click event on the button element and trigger the corresponding event on the button component\n    buttonElement.on('click', () => {\n      this.onClickEvent();\n    });\n\n    return buttonElement;\n  }\n\n  /**\n   * Sets text on the label of the button.\n   * @param text the text to put into the label of the button\n   */\n  setText(text: LocalizableText): void {\n    this.getDomElement().find('.' + this.prefixCss('label')).html(i18n.performLocalization(text));\n  }\n\n  protected onClickEvent() {\n    this.buttonEvents.onClick.dispatch(this);\n  }\n\n  /**\n   * Gets the event that is fired when the button is clicked.\n   * @returns {Event<Button<Config>, NoArgs>}\n   */\n  get onClick(): Event<Button<Config>, NoArgs> {\n    return this.buttonEvents.onClick.getEvent();\n  }\n}\n","import {ContainerConfig, Container} from './container';\nimport {Label, LabelConfig} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport { CastStartedEvent, CastWaitingForDeviceEvent, PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Overlays the player and displays the status of a Cast session.\n *\n * @category Components\n */\nexport class CastStatusOverlay extends Container<ContainerConfig> {\n\n  private statusLabel: Label<LabelConfig>;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.statusLabel = new Label<LabelConfig>({ cssClass: 'ui-cast-status-label' });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-cast-status-overlay',\n      components: [this.statusLabel],\n      hidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    player.on(player.exports.PlayerEvent.CastWaitingForDevice,\n      (event: CastWaitingForDeviceEvent) => {\n        this.show();\n        // Get device name and update status text while connecting\n        let castDeviceName = event.castPayload.deviceName;\n        this.statusLabel.setText(i18n.getLocalizer('connectingTo', { castDeviceName }));\n      });\n    player.on(player.exports.PlayerEvent.CastStarted, (event: CastStartedEvent) => {\n      // Session is started or resumed\n      // For cases when a session is resumed, we do not receive the previous events and therefore show the status panel\n      // here too\n      this.show();\n      let castDeviceName = event.deviceName;\n      this.statusLabel.setText(i18n.getLocalizer('playingOn', { castDeviceName }));\n    });\n    player.on(player.exports.PlayerEvent.CastStopped, (event) => {\n      // Cast session gone, hide the status panel\n      this.hide();\n    });\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles casting to a Cast receiver.\n *\n * @category Buttons\n */\nexport class CastToggleButton extends ToggleButton<ToggleButtonConfig> {\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(\n      config,\n      {\n        cssClass: 'ui-casttogglebutton',\n        text: i18n.getLocalizer('googleCast'),\n      },\n      this.config,\n    );\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      if (!player.isCastAvailable()) {\n        player.castVideo();\n        if (console) {\n          console.log('Cast unavailable');\n        }\n        return;\n      }\n\n      if (player.isCasting()) {\n        player.castStop();\n      } else {\n        player.castVideo();\n      }\n    });\n\n    // Toggle button 'on' state\n    player.on(player.exports.PlayerEvent.CastWaitingForDevice, () => {\n      this.on();\n    });\n    player.on(player.exports.PlayerEvent.CastStarted, () => {\n      // When a session is resumed, there is no CastStart event, so we also need to toggle here for such cases\n      this.on();\n    });\n    player.on(player.exports.PlayerEvent.CastStopped, () => {\n      this.off();\n    });\n\n    // Startup init\n    if (player.isCasting()) {\n      this.on();\n    }\n  }\n}\n","import {UIContainer, UIContainerConfig} from './uicontainer';\nimport {UIInstanceManager} from '../uimanager';\nimport {Timeout} from '../timeout';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * The base container for Cast receivers that contains all of the UI and takes care that the UI is shown on\n * certain playback events.\n *\n * @category Containers\n */\nexport class CastUIContainer extends UIContainer {\n\n  private castUiHideTimeout: Timeout;\n\n  constructor(config: UIContainerConfig) {\n    super(config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    /*\n     * Show UI on Cast devices at certain playback events\n     *\n     * Since a Cast receiver does not have a direct HCI, we show the UI on certain playback events to give the user\n     * a chance to see on the screen what's going on, e.g. on play/pause or a seek the UI is shown and the user can\n     * see the current time and position on the seek bar.\n     * The UI is shown permanently while playback is paused, otherwise hides automatically after the configured\n     * hide delay time.\n     */\n\n    let isUiShown = false;\n\n    let hideUi = () => {\n      uimanager.onControlsHide.dispatch(this);\n      isUiShown = false;\n    };\n\n    this.castUiHideTimeout = new Timeout(config.hideDelay, hideUi);\n\n    let showUi = () => {\n      if (!isUiShown) {\n        uimanager.onControlsShow.dispatch(this);\n        isUiShown = true;\n      }\n    };\n\n    let showUiPermanently = () => {\n      showUi();\n      this.castUiHideTimeout.clear();\n    };\n\n    let showUiWithTimeout = () => {\n      showUi();\n      this.castUiHideTimeout.start();\n    };\n\n    let showUiAfterSeek = () => {\n      if (player.isPlaying()) {\n        showUiWithTimeout();\n      } else {\n        showUiPermanently();\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.Play, showUiWithTimeout);\n    player.on(player.exports.PlayerEvent.Paused, showUiPermanently);\n    player.on(player.exports.PlayerEvent.Seek, showUiPermanently);\n    player.on(player.exports.PlayerEvent.Seeked, showUiAfterSeek);\n\n    uimanager.getConfig().events.onUpdated.subscribe(showUiWithTimeout);\n  }\n\n  release(): void {\n    super.release();\n    this.castUiHideTimeout.clear();\n  }\n}","import {Button, ButtonConfig} from './button';\n\n/**\n * Configuration interface for a {@link ClickOverlay}.\n *\n * @category Configs\n */\nexport interface ClickOverlayConfig extends ButtonConfig {\n  /**\n   * The url to open when the overlay is clicked. Set to null to disable the click handler.\n   */\n  url?: string;\n}\n\n/**\n * A click overlay that opens an url in a new tab if clicked.\n *\n * @category Components\n */\nexport class ClickOverlay extends Button<ClickOverlayConfig> {\n\n  constructor(config: ClickOverlayConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-clickoverlay',\n      role: this.config.role,\n    }, <ClickOverlayConfig>this.config);\n  }\n\n  initialize(): void {\n    super.initialize();\n\n    this.setUrl((<ClickOverlayConfig>this.config).url);\n    let element = this.getDomElement();\n    element.on('click', () => {\n      if (element.data('url')) {\n        window.open(element.data('url'), '_blank');\n      }\n    });\n  }\n\n  /**\n   * Gets the URL that should be followed when the watermark is clicked.\n   * @returns {string} the watermark URL\n   */\n  getUrl(): string {\n    return this.getDomElement().data('url');\n  }\n\n  setUrl(url: string): void {\n    if (url === undefined || url == null) {\n      url = '';\n    }\n    this.getDomElement().data('url', url);\n  }\n}","import {ButtonConfig, Button} from './button';\nimport {UIInstanceManager} from '../uimanager';\nimport {Component, ComponentConfig} from './component';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for the {@link CloseButton}.\n *\n * @category Configs\n */\nexport interface CloseButtonConfig extends ButtonConfig {\n  /**\n   * The component that should be closed when the button is clicked.\n   */\n  target: Component<ComponentConfig>;\n}\n\n/**\n * A button that closes (hides) a configured component.\n *\n * @category Buttons\n */\nexport class CloseButton extends Button<CloseButtonConfig> {\n\n  constructor(config: CloseButtonConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-closebutton',\n      text: i18n.getLocalizer('close'),\n    } as CloseButtonConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    this.onClick.subscribe(() => {\n      config.target.hide();\n    });\n  }\n}","import {Guid} from '../guid';\nimport {DOM} from '../dom';\nimport {EventDispatcher, NoArgs, Event} from '../eventdispatcher';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n, LocalizableText } from '../localization/i18n';\n\n/**\n * Base configuration interface for a component.\n * Should be extended by components that want to add additional configuration options.\n *\n * @category Configs\n */\nexport interface ComponentConfig {\n  /**\n   * The HTML tag name of the component.\n   * Default: 'div'\n   */\n  tag?: string;\n  /**\n   * The HTML ID of the component.\n   * Default: automatically generated with pattern 'ui-id-{guid}'.\n   */\n  id?: string;\n\n  /**\n   * A prefix to prepend all CSS classes with.\n   */\n  cssPrefix?: string;\n\n  /**\n   * The CSS classes of the component. This is usually the class from where the component takes its styling.\n   */\n  cssClass?: string; // 'class' is a reserved keyword, so we need to make the name more complicated\n\n  /**\n   * Additional CSS classes of the component.\n   */\n  cssClasses?: string[];\n\n  /**\n   * Specifies if the component should be hidden at startup.\n   * Default: false\n   */\n  hidden?: boolean;\n\n  /**\n   * Specifies if the component is enabled (interactive) or not.\n   * Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Specifies the component role for WCAG20 standard\n   */\n  role?: string;\n\n  /**\n   * WCAG20 requirement for screen reader navigation\n   */\n  tabIndex?: number;\n\n  /**\n   * WCAG20 standard for defining info about the component (usually the name)\n   */\n  ariaLabel?: LocalizableText;\n}\n\nexport interface ComponentHoverChangedEventArgs extends NoArgs {\n  /**\n   * True is the component is hovered, else false.\n   */\n  hovered: boolean;\n}\n\nexport enum ViewMode {\n  /**\n   * Indicates that the component has entered a view mode where it must stay visible. Auto-hiding of this component\n   * must be disabled as long as it resides in this state.\n   */\n  Persistent = 'persistent',\n\n  /**\n   * The control can be hidden at any time.\n   */\n  Temporary = 'temporary',\n}\n\nexport interface ViewModeChangedEventArgs extends NoArgs {\n  /**\n   * The `ViewMode` the control is currently in.\n   */\n  mode: ViewMode;\n}\n\n/**\n * The base class of the UI framework.\n * Each component must extend this class and optionally the config interface.\n *\n * @category Components\n */\nexport class Component<Config extends ComponentConfig> {\n\n  /**\n   * The classname that is attached to the element when it is in the hidden state.\n   * @type {string}\n   */\n  private static readonly CLASS_HIDDEN = 'hidden';\n\n  /**\n   * The classname that is attached to the element when it is in the disabled state.\n   * @type {string}\n   */\n  private static readonly CLASS_DISABLED = 'disabled';\n\n  /**\n   * Configuration object of this component.\n   */\n  protected config: Config;\n\n  /**\n   * The component's DOM element.\n   */\n  private element: DOM;\n\n  /**\n   * Flag that keeps track of the hidden state.\n   */\n  private hidden: boolean;\n\n  /**\n   * Flat that keeps track of the disabled state.\n   */\n  private disabled: boolean;\n\n  /**\n   * Flag that keeps track of the hover state.\n   */\n  private hovered: boolean;\n\n  /**\n   * The current view mode of the component.\n   */\n  private viewMode: ViewMode;\n\n  /**\n   * The list of events that this component offers. These events should always be private and only directly\n   * accessed from within the implementing component.\n   *\n   * Because TypeScript does not support private properties with the same name on different class hierarchy levels\n   * (i.e. superclass and subclass cannot contain a private property with the same name), the default naming\n   * convention for the event list of a component that should be followed by subclasses is the concatenation of the\n   * camel-cased class name + 'Events' (e.g. SubClass extends Component => subClassEvents).\n   * See {@link #componentEvents} for an example.\n   *\n   * Event properties should be named in camel case with an 'on' prefix and in the present tense. Async events may\n   * have a start event (when the operation starts) in the present tense, and must have an end event (when the\n   * operation ends) in the past tense (or present tense in special cases (e.g. onStart/onStarted or onPlay/onPlaying).\n   * See {@link #componentEvents#onShow} for an example.\n   *\n   * Each event should be accompanied with a protected method named by the convention eventName + 'Event'\n   * (e.g. onStartEvent), that actually triggers the event by calling {@link EventDispatcher#dispatch dispatch} and\n   * passing a reference to the component as first parameter. Components should always trigger their events with these\n   * methods. Implementing this pattern gives subclasses means to directly listen to the events by overriding the\n   * method (and saving the overhead of passing a handler to the event dispatcher) and more importantly to trigger\n   * these events without having access to the private event list.\n   * See {@link #onShow} for an example.\n   *\n   * To provide external code the possibility to listen to this component's events (subscribe, unsubscribe, etc.),\n   * each event should also be accompanied by a public getter function with the same name as the event's property,\n   * that returns the {@link Event} obtained from the event dispatcher by calling {@link EventDispatcher#getEvent}.\n   * See {@link #onShow} for an example.\n   *\n   * Full example for an event representing an example action in a example component:\n   *\n   * <code>\n   * // Define an example component class with an example event\n   * class ExampleComponent extends Component<ComponentConfig> {\n     *\n     *     private exampleComponentEvents = {\n     *         onExampleAction: new EventDispatcher<ExampleComponent, NoArgs>()\n     *     }\n     *\n     *     // constructor and other stuff...\n     *\n     *     protected onExampleActionEvent() {\n     *        this.exampleComponentEvents.onExampleAction.dispatch(this);\n     *    }\n     *\n     *    get onExampleAction(): Event<ExampleComponent, NoArgs> {\n     *        return this.exampleComponentEvents.onExampleAction.getEvent();\n     *    }\n     * }\n   *\n   * // Create an instance of the component somewhere\n   * var exampleComponentInstance = new ExampleComponent();\n   *\n   * // Subscribe to the example event on the component\n   * exampleComponentInstance.onExampleAction.subscribe(function (sender: ExampleComponent) {\n     *     console.log('onExampleAction of ' + sender + ' has fired!');\n     * });\n   * </code>\n   */\n  private componentEvents = {\n    onShow: new EventDispatcher<Component<Config>, NoArgs>(),\n    onHide: new EventDispatcher<Component<Config>, NoArgs>(),\n    onViewModeChanged: new EventDispatcher<Component<Config>, ViewModeChangedEventArgs>(),\n    onHoverChanged: new EventDispatcher<Component<Config>, ComponentHoverChangedEventArgs>(),\n    onEnabled: new EventDispatcher<Component<Config>, NoArgs>(),\n    onDisabled: new EventDispatcher<Component<Config>, NoArgs>(),\n  };\n\n  /**\n   * Constructs a component with an optionally supplied config. All subclasses must call the constructor of their\n   * superclass and then merge their configuration into the component's configuration.\n   * @param config the configuration for the component\n   */\n  constructor(config: ComponentConfig = {}) {\n    // Create the configuration for this component\n    this.config = <Config>this.mergeConfig(config, {\n      tag: 'div',\n      id: '{{PREFIX}}-id-' + Guid.next(),\n      cssPrefix: '{{PREFIX}}',\n      cssClass: 'ui-component',\n      cssClasses: [],\n      hidden: false,\n      disabled: false,\n    }, {});\n    this.viewMode = ViewMode.Temporary;\n  }\n\n  /**\n   * Initializes the component, e.g. by applying config settings.\n   * This method must not be called from outside the UI framework.\n   *\n   * This method is automatically called by the {@link UIInstanceManager}. If the component is an inner component of\n   * some component, and thus encapsulated abd managed internally and never directly exposed to the UIManager,\n   * this method must be called from the managing component's {@link #initialize} method.\n   */\n  initialize(): void {\n    this.hidden = this.config.hidden;\n    this.disabled = this.config.disabled;\n\n    // Hide the component at initialization if it is configured to be hidden\n    if (this.isHidden()) {\n      this.hidden = false; // Set flag to false for the following hide() call to work (hide() checks the flag)\n      this.hide();\n    }\n\n    // Disable the component at initialization if it is configured to be disabled\n    if (this.isDisabled()) {\n      this.disabled = false; // Set flag to false for the following disable() call to work (disable() checks the flag)\n      this.disable();\n    }\n  }\n\n  /**\n   * Configures the component for the supplied Player and UIInstanceManager. This is the place where all the magic\n   * happens, where components typically subscribe and react to events (on their DOM element, the Player, or the\n   * UIInstanceManager), and basically everything that makes them interactive.\n   * This method is called only once, when the UIManager initializes the UI.\n   *\n   * Subclasses usually overwrite this method to add their own functionality.\n   *\n   * @param player the player which this component controls\n   * @param uimanager the UIInstanceManager that manages this component\n   */\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    this.onShow.subscribe(() => uimanager.onComponentShow.dispatch(this));\n    this.onHide.subscribe(() => uimanager.onComponentHide.dispatch(this));\n    this.onViewModeChanged.subscribe((_, args) => uimanager.onComponentViewModeChanged.dispatch(this, args));\n\n    // Track the hovered state of the element\n    this.getDomElement().on('mouseenter', () => this.onHoverChangedEvent(true));\n    this.getDomElement().on('mouseleave', () => this.onHoverChangedEvent(false));\n  }\n\n  /**\n   * Releases all resources and dependencies that the component holds. Player, DOM, and UIManager events are\n   * automatically removed during release and do not explicitly need to be removed here.\n   * This method is called by the UIManager when it releases the UI.\n   *\n   * Subclasses that need to release resources should override this method and call super.release().\n   */\n  release(): void {\n    // Nothing to do here, override where necessary\n  }\n\n  /**\n   * Generate the DOM element for this component.\n   *\n   * Subclasses usually overwrite this method to extend or replace the DOM element with their own design.\n   */\n  protected toDomElement(): DOM {\n    let element = new DOM(this.config.tag, {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'role': this.config.role,\n    }, this);\n\n    return element;\n  }\n\n  /**\n   * Returns the DOM element of this component. Creates the DOM element if it does not yet exist.\n   *\n   * Should not be overwritten by subclasses.\n   *\n   * @returns {DOM}\n   */\n  getDomElement(): DOM {\n    if (!this.element) {\n      this.element = this.toDomElement();\n    }\n\n    return this.element;\n  }\n\n  /**\n   * Checks if this component has a DOM element.\n   */\n  hasDomElement(): boolean {\n    return Boolean(this.element);\n  }\n\n  setAriaLabel(label: LocalizableText): void {\n    this.setAriaAttr('label', i18n.performLocalization(label));\n  }\n\n  setAriaAttr(name: string, value: string) {\n    this.getDomElement().attr(`aria-${name}`, value);\n  }\n\n  /**\n   * Merges a configuration with a default configuration and a base configuration from the superclass.\n   *\n   * @param config the configuration settings for the components, as usually passed to the constructor\n   * @param defaults a default configuration for settings that are not passed with the configuration\n   * @param base configuration inherited from a superclass\n   * @returns {Config}\n   */\n  protected mergeConfig<Config>(config: Config, defaults: Config, base: Config): Config {\n    // Extend default config with supplied config\n    let merged = Object.assign({}, base, defaults, config);\n\n    // Return the extended config\n    return merged;\n  }\n\n  /**\n   * Helper method that returns a string of all CSS classes of the component.\n   *\n   * @returns {string}\n   */\n  protected getCssClasses(): string {\n    // Merge all CSS classes into single array\n    let flattenedArray = [this.config.cssClass].concat(this.config.cssClasses);\n    // Prefix classes\n    flattenedArray = flattenedArray.map((css) => {\n      return this.prefixCss(css);\n    });\n    // Join array values into a string\n    let flattenedString = flattenedArray.join(' ');\n    // Return trimmed string to prevent whitespace at the end from the join operation\n    return flattenedString.trim();\n  }\n\n  protected prefixCss(cssClassOrId: string): string {\n    return this.config.cssPrefix + '-' + cssClassOrId;\n  }\n\n  /**\n   * Returns the configuration object of the component.\n   * @returns {Config}\n   */\n  public getConfig(): Config {\n    return this.config;\n  }\n\n  /**\n   * Hides the component if shown.\n   * This method basically transfers the component into the hidden state. Actual hiding is done via CSS.\n   */\n  hide() {\n    if (!this.hidden) {\n      this.hidden = true;\n      this.getDomElement().addClass(this.prefixCss(Component.CLASS_HIDDEN));\n      this.onHideEvent();\n    }\n  }\n\n  /**\n   * Shows the component if hidden.\n   */\n  show() {\n    if (this.hidden) {\n      this.getDomElement().removeClass(this.prefixCss(Component.CLASS_HIDDEN));\n      this.hidden = false;\n      this.onShowEvent();\n    }\n  }\n\n  /**\n   * Determines if the component is hidden.\n   * @returns {boolean} true if the component is hidden, else false\n   */\n  isHidden(): boolean {\n    return this.hidden;\n  }\n\n  /**\n   * Determines if the component is shown.\n   * @returns {boolean} true if the component is visible, else false\n   */\n  isShown(): boolean {\n    return !this.isHidden();\n  }\n\n  /**\n   * Toggles the hidden state by hiding the component if it is shown, or showing it if hidden.\n   */\n  toggleHidden() {\n    if (this.isHidden()) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Disables the component.\n   * This method basically transfers the component into the disabled state. Actual disabling is done via CSS or child\n   * components. (e.g. Button needs to unsubscribe click listeners)\n   */\n  disable(): void {\n    if (!this.disabled) {\n      this.disabled = true;\n      this.getDomElement().addClass(this.prefixCss(Component.CLASS_DISABLED));\n      this.onDisabledEvent();\n    }\n  }\n\n  /**\n   * Enables the component.\n   * This method basically transfers the component into the enabled state. Actual enabling is done via CSS or child\n   * components. (e.g. Button needs to subscribe click listeners)\n   */\n  enable(): void {\n    if (this.disabled) {\n      this.getDomElement().removeClass(this.prefixCss(Component.CLASS_DISABLED));\n      this.disabled = false;\n      this.onEnabledEvent();\n    }\n  }\n\n  /**\n   * Determines if the component is disabled.\n   * @returns {boolean} true if the component is disabled, else false\n   */\n  isDisabled(): boolean {\n    return this.disabled;\n  }\n\n  /**\n   * Determines if the component is enabled.\n   * @returns {boolean} true if the component is enabled, else false\n   */\n  isEnabled(): boolean {\n    return !this.isDisabled();\n  }\n\n  /**\n   * Determines if the component is currently hovered.\n   * @returns {boolean} true if the component is hovered, else false\n   */\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  /**\n   * Fires the onShow event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onShowEvent(): void {\n    this.componentEvents.onShow.dispatch(this);\n  }\n\n  /**\n   * Fires the onHide event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onHideEvent(): void {\n    this.componentEvents.onHide.dispatch(this);\n  }\n\n  /**\n   * Fires the onEnabled event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onEnabledEvent(): void {\n    this.componentEvents.onEnabled.dispatch(this);\n  }\n\n  /**\n   * Fires the onDisabled event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onDisabledEvent(): void {\n    this.componentEvents.onDisabled.dispatch(this);\n  }\n\n  /**\n   * Fires the onViewModeChanged event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onViewModeChangedEvent(mode: ViewMode): void {\n    if (this.viewMode === mode) {\n      return;\n    }\n\n    this.viewMode = mode;\n    this.componentEvents.onViewModeChanged.dispatch(this, { mode });\n  }\n\n  /**\n   * Fires the onHoverChanged event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onHoverChangedEvent(hovered: boolean): void {\n    this.hovered = hovered;\n    this.componentEvents.onHoverChanged.dispatch(this, { hovered: hovered });\n  }\n\n  /**\n   * Gets the event that is fired when the component is showing.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onShow(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onShow.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component is hiding.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onHide(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onHide.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component is enabling.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onEnabled(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onEnabled.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component is disabling.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onDisabled(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onDisabled.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component's hover-state is changing.\n   * @returns {Event<Component<Config>, ComponentHoverChangedEventArgs>}\n   */\n  get onHoverChanged(): Event<Component<Config>, ComponentHoverChangedEventArgs> {\n    return this.componentEvents.onHoverChanged.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the `ViewMode` of this component has changed.\n   * @returns {Event<Component<Config>, ViewModeChangedEventArgs>}\n   */\n  get onViewModeChanged(): Event<Component<Config>, ViewModeChangedEventArgs> {\n    return this.componentEvents.onViewModeChanged.getEvent();\n  }\n}","import { ComponentConfig, Component, ViewModeChangedEventArgs, ViewMode } from './component';\nimport {DOM} from '../dom';\nimport {ArrayUtils} from '../arrayutils';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link Container}.\n *\n * @category Configs\n */\nexport interface ContainerConfig extends ComponentConfig {\n  /**\n   * Child components of the container.\n   */\n  components?: Component<ComponentConfig>[];\n}\n\n/**\n * A container component that can contain a collection of child components.\n * Components can be added at construction time through the {@link ContainerConfig#components} setting, or later\n * through the {@link Container#addComponent} method. The UIManager automatically takes care of all components, i.e. it\n * initializes and configures them automatically.\n *\n * In the DOM, the container consists of an outer <div> (that can be configured by the config) and an inner wrapper\n * <div> that contains the components. This double-<div>-structure is often required to achieve many advanced effects\n * in CSS and/or JS, e.g. animations and certain formatting with absolute positioning.\n *\n * DOM example:\n * <code>\n *     <div class='ui-container'>\n *         <div class='container-wrapper'>\n *             ... child components ...\n *         </div>\n *     </div>\n * </code>\n *\n * @category Components\n */\nexport class Container<Config extends ContainerConfig> extends Component<Config> {\n\n  /**\n   * A reference to the inner element that contains the components of the container.\n   */\n  private innerContainerElement: DOM;\n  private componentsToAdd: Component<ComponentConfig>[];\n  private componentsToRemove: Component<ComponentConfig>[];\n  private componentsInPersistentViewMode: number;\n\n  constructor(config: Config) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-container',\n      components: [],\n    } as Config, this.config);\n\n    this.componentsToAdd = [];\n    this.componentsToRemove = [];\n    this.componentsInPersistentViewMode = 0;\n  }\n\n  /**\n   * Adds a child component to the container.\n   * @param component the component to add\n   */\n  addComponent(component: Component<ComponentConfig>) {\n    this.config.components.push(component);\n    this.componentsToAdd.push(component);\n  }\n\n  /**\n   * Removes a child component from the container.\n   * @param component the component to remove\n   * @returns {boolean} true if the component has been removed, false if it is not contained in this container\n   */\n  removeComponent(component: Component<ComponentConfig>): boolean {\n    if (ArrayUtils.remove(this.config.components, component) != null) {\n      this.componentsToRemove.push(component);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Gets an array of all child components in this container.\n   * @returns {Component<ComponentConfig>[]}\n   */\n  getComponents(): Component<ComponentConfig>[] {\n    return this.config.components;\n  }\n\n  /**\n   * Removes all child components from the container.\n   */\n  removeComponents(): void {\n    for (let component of this.getComponents().slice()) {\n      this.removeComponent(component);\n    }\n  }\n\n  /**\n   * Updates the DOM of the container with the current components.\n   */\n  protected updateComponents(): void {\n    /* We cannot just clear the container to remove all elements and then re-add those that should stay, because\n     * IE looses the innerHTML of unattached elements, leading to empty elements within the container (e.g. missing\n     * subtitle text in SubtitleLabel).\n     * Instead, we keep a list of elements to add and remove, leaving remaining elements alone. By keeping them in\n     * the DOM, their content gets preserved in all browsers.\n     */\n    let component;\n\n    while (component = this.componentsToRemove.shift()) {\n      component.getDomElement().remove();\n    }\n\n    while (component = this.componentsToAdd.shift()) {\n      this.innerContainerElement.append(component.getDomElement());\n    }\n  }\n\n  protected toDomElement(): DOM {\n    // Create the container element (the outer <div>)\n    let containerElement = new DOM(this.config.tag, {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'role': this.config.role,\n      'aria-label': i18n.performLocalization(this.config.ariaLabel),\n    }, this);\n\n    // Create the inner container element (the inner <div>) that will contain the components\n    let innerContainer = new DOM(this.config.tag, {\n      'class': this.prefixCss('container-wrapper'),\n    });\n    this.innerContainerElement = innerContainer;\n\n    for (let initialComponent of this.config.components) {\n      this.componentsToAdd.push(initialComponent);\n    }\n    this.updateComponents();\n\n    containerElement.append(innerContainer);\n\n    return containerElement;\n  }\n\n  protected suspendHideTimeout(): void {\n    // to be implemented in subclass\n  }\n\n  protected resumeHideTimeout(): void {\n    // to be implemented in subclass\n  }\n\n  protected trackComponentViewMode(mode: ViewMode) {\n    if (mode === ViewMode.Persistent) {\n      this.componentsInPersistentViewMode++;\n    } else if (mode === ViewMode.Temporary) {\n      this.componentsInPersistentViewMode = Math.max(this.componentsInPersistentViewMode - 1, 0);\n    }\n\n    if (this.componentsInPersistentViewMode > 0) {\n      // There is at least one component that must not be hidden,\n      // therefore the hide timeout must be suspended\n      this.suspendHideTimeout();\n    } else {\n      this.resumeHideTimeout();\n    }\n  }\n}","import {ContainerConfig, Container} from './container';\nimport {UIInstanceManager} from '../uimanager';\nimport {UIUtils} from '../uiutils';\nimport {Spacer} from './spacer';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { BrowserUtils } from '../browserutils';\nimport {Component, ComponentConfig} from './component';\nimport {SettingsPanel} from './settingspanel';\n\n/**\n * Configuration interface for the {@link ControlBar}.\n *\n * @category Configs\n */\nexport interface ControlBarConfig extends ContainerConfig {\n  // nothing yet\n}\n\n/**\n * A container for main player control components, e.g. play toggle button, seek bar, volume control, fullscreen toggle\n * button.\n *\n * @category Components\n */\nexport class ControlBar extends Container<ControlBarConfig> {\n\n  constructor(config: ControlBarConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-controlbar',\n      hidden: true,\n      role: 'region',\n      ariaLabel: i18n.getLocalizer('controlBar'),\n    }, <ControlBarConfig>this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    // Counts how many components are hovered and block hiding of the control bar\n    let hoverStackCount = 0;\n    let isSettingsPanelShown = false;\n\n    // Only enabling this for platforms without touch input.\n    // Enabling this for touch devices causes the UI to not disappear after hideDelay seconds,\n    // because `mouseleave` event is not emitted.\n    // Instead, it will stay visible until another manual interaction is performed.\n    if (uimanager.getConfig().disableAutoHideWhenHovered && !BrowserUtils.isTouchSupported) {\n      // Track hover status of child components\n      UIUtils.traverseTree(this, (component) => {\n        // Do not track hover status of child containers or spacers, only of 'real' controls\n        if (component instanceof Container || component instanceof Spacer) {\n          return;\n        }\n\n        // Subscribe hover event and keep a count of the number of hovered children\n        component.onHoverChanged.subscribe((_, args) => {\n          if (args.hovered) {\n            hoverStackCount++;\n          } else {\n            hoverStackCount--;\n          }\n        });\n      });\n    }\n\n    if (BrowserUtils.isMobile) {\n      uimanager.onComponentShow.subscribe((component: Component<ComponentConfig>) => {\n        if (component instanceof SettingsPanel) {\n          isSettingsPanelShown = true;\n        }\n      });\n\n      uimanager.onComponentHide.subscribe((component: Component<ComponentConfig>) => {\n        if (component instanceof SettingsPanel) {\n          isSettingsPanelShown = false;\n        }\n      });\n    }\n\n    uimanager.onControlsShow.subscribe(() => {\n      this.show();\n    });\n\n    uimanager.onPreviewControlsHide.subscribe((sender, args) => {\n      // Cancel the hide event if hovered child components block hiding or if the settings panel is active on mobile.\n      args.cancel = args.cancel || (hoverStackCount > 0 || isSettingsPanelShown);\n    });\n\n    uimanager.onControlsHide.subscribe(() => {\n      this.hide();\n    });\n  }\n}\n","import { PlayerAPI, SegmentPlaybackEvent, VideoQuality } from 'bitmovin-player';\r\nimport { i18n } from '../localization/i18n';\r\nimport { Container, ContainerConfig } from './container';\r\nimport { EcoModeToggleButton } from './ecomodetogglebutton';\r\nimport { Label, LabelConfig } from './label';\r\nimport { SettingsPanelItem } from './settingspanelitem';\r\n\r\n/**\r\n * @category Containers\r\n */\r\nexport class EcoModeContainer extends Container<ContainerConfig> {\r\n  private ecoModeSavedEmissionsItem: SettingsPanelItem;\r\n  private ecoModeToggleButtonItem: SettingsPanelItem;\r\n  private emissionsSavedLabel: Label<LabelConfig>;\r\n  private savedEmissons = 0;\r\n  private currentEnergyEmission: number;\r\n\r\n  constructor(config: ContainerConfig = {}) {\r\n    super(config);\r\n\r\n    const ecoModeToggleButton = new EcoModeToggleButton();\r\n    const labelEcoMode = new Label({\r\n      text: i18n.getLocalizer('ecoMode.title'),\r\n      for: ecoModeToggleButton.getConfig().id,\r\n      id: 'ecomodelabel',\r\n    });\r\n    this.emissionsSavedLabel = new Label({\r\n      text: `${this.savedEmissons.toFixed(4)} gCO2`,\r\n      cssClass: 'ui-label-savedEnergy',\r\n    });\r\n\r\n    this.ecoModeToggleButtonItem = new SettingsPanelItem(labelEcoMode, ecoModeToggleButton);\r\n    this.ecoModeSavedEmissionsItem = new SettingsPanelItem('Saved Emissions', this.emissionsSavedLabel, {\r\n      hidden: true,\r\n    });\r\n\r\n    this.addComponent(this.ecoModeToggleButtonItem);\r\n    this.addComponent(this.ecoModeSavedEmissionsItem);\r\n\r\n    ecoModeToggleButton.onToggleOn.subscribe(() => {\r\n      this.ecoModeSavedEmissionsItem.show();\r\n      this.onToggleCallback();\r\n    });\r\n\r\n    ecoModeToggleButton.onToggleOff.subscribe(() => {\r\n      this.ecoModeSavedEmissionsItem.hide();\r\n      this.onToggleCallback();\r\n    });\r\n  }\r\n\r\n  private onToggleCallback: () => void;\r\n\r\n  public setOnToggleCallback(callback: () => void) {\r\n    this.onToggleCallback = callback;\r\n  }\r\n\r\n  configure(player: PlayerAPI): void {\r\n    player.on(player.exports.PlayerEvent.SegmentPlayback, (segment: SegmentPlaybackEvent) => {\r\n      if (!segment.mimeType.includes('video')) {\r\n        return;\r\n      }\r\n\r\n      const { height, width, bitrate, frameRate } = segment.mediaInfo;\r\n      const {\r\n        height: maxHeight,\r\n        bitrate: maxBitrate,\r\n        width: maxWidth,\r\n      } = this.getMaxQualityAvailable(player.getAvailableVideoQualities());\r\n\r\n      const currentEnergyKwh = this.calculateEnergyConsumption(frameRate, height, width, bitrate, segment.duration);\r\n\r\n      const maxEnergyKwh = this.calculateEnergyConsumption(\r\n        frameRate,\r\n        maxHeight,\r\n        maxWidth,\r\n        maxBitrate,\r\n        segment.duration,\r\n      );\r\n\r\n      if (this.ecoModeSavedEmissionsItem.isShown()) {\r\n        this.updateSavedEmissions(currentEnergyKwh, maxEnergyKwh, this.emissionsSavedLabel);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSavedEmissions(\r\n    currentEnergyConsuption: number,\r\n    maxEnergyConsuption: number,\r\n    emissionsSavedLabel: Label<LabelConfig>,\r\n  ) {\r\n    // 475 is the average carbon intensity of all countries in gCO2/kWh\r\n    const averageCarbonIntensity = 475;\r\n\r\n    this.currentEnergyEmission = currentEnergyConsuption * averageCarbonIntensity;\r\n    const maxEnergyEmisson = maxEnergyConsuption * averageCarbonIntensity;\r\n    this.savedEmissons += maxEnergyEmisson - this.currentEnergyEmission;\r\n    emissionsSavedLabel.setText(this.savedEmissons.toFixed(4) + ' gCO2');\r\n  }\r\n\r\n  /**\r\n   * The calculations are based on the following paper: https://arxiv.org/pdf/2210.05444.pdf\r\n   */\r\n  calculateEnergyConsumption(fps: number, height: number, width: number, bitrate: number, duration: number): number {\r\n    const fpsWeight = 0.035;\r\n    const pixeldWeight = 5.76e-9;\r\n    const birateWeight = 6.97e-6;\r\n    const constantOffset = 8.52;\r\n    const bitrateInternetWeight = 3.24e-5;\r\n    const internetConnectionOffset = 1.15;\r\n    const videoCodec = 4.16;\r\n\r\n    const energyConsumptionW =\r\n      fpsWeight * fps +\r\n      pixeldWeight * height * width +\r\n      (birateWeight + bitrateInternetWeight) * (bitrate / 1000) +\r\n      videoCodec +\r\n      constantOffset +\r\n      internetConnectionOffset;\r\n\r\n    // Convert energy consumption from Watts (W) to Kilowatt-hours (kWh) for the given time duration of the segment\r\n    const energyConsumptionKwh = (energyConsumptionW * duration) / 3.6e6;\r\n\r\n    return energyConsumptionKwh;\r\n  }\r\n  getMaxQualityAvailable(availableVideoQualities: VideoQuality[]) {\r\n    const sortedQualities = availableVideoQualities.sort((a, b) => a.bitrate - b.bitrate);\r\n    return sortedQualities[sortedQualities.length - 1];\r\n  }\r\n}\r\n","import { ToggleButton, ToggleButtonConfig } from './togglebutton';\r\nimport { UIInstanceManager } from '../uimanager';\r\nimport { DynamicAdaptationConfig, PlayerAPI, VideoQualityChangedEvent } from 'bitmovin-player';\r\nimport { i18n } from '../localization/i18n';\r\n\r\n/**\r\n * @category Buttons\r\n */\r\nexport class EcoModeToggleButton extends ToggleButton<ToggleButtonConfig> {\r\n  private adaptationConfig: DynamicAdaptationConfig;\r\n\r\n  constructor(config: ToggleButtonConfig = {}) {\r\n    super(config);\r\n\r\n    const defaultConfig: ToggleButtonConfig = {\r\n      text: i18n.getLocalizer('ecoMode'),\r\n      cssClass: 'ui-ecomodetogglebutton',\r\n      onClass: 'on',\r\n      offClass: 'off',\r\n      ariaLabel: i18n.getLocalizer('ecoMode'),\r\n    };\r\n\r\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\r\n  }\r\n\r\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\r\n    super.configure(player, uimanager);\r\n\r\n    if (this.areAdaptationApisAvailable(player)) {\r\n      this.onClick.subscribe(() => {\r\n        this.toggle();\r\n      });\r\n\r\n      this.onToggleOn.subscribe(() => {\r\n        this.enableEcoMode(player);\r\n        player.setVideoQuality('auto');\r\n      });\r\n\r\n      this.onToggleOff.subscribe(() => {\r\n        this.disableEcoMode(player);\r\n      });\r\n\r\n      player.on(player.exports.PlayerEvent.VideoQualityChanged, (quality: VideoQualityChangedEvent) => {\r\n        if (quality.targetQuality.id !== 'auto') {\r\n          this.off();\r\n          this.disableEcoMode(player);\r\n        }\r\n      });\r\n    } else {\r\n      super.disable();\r\n    }\r\n\r\n  }\r\n\r\n  private areAdaptationApisAvailable(player: PlayerAPI): boolean {\r\n    const isGetConfigAvailable = Boolean(player.adaptation.getConfig && typeof player.adaptation.getConfig === 'function');\r\n    const isSetConfigAvailable = Boolean(player.adaptation.setConfig && typeof player.adaptation.setConfig === 'function');\r\n\r\n    return Boolean(player.adaptation && isGetConfigAvailable && isSetConfigAvailable);\r\n  }\r\n\r\n  enableEcoMode(player: PlayerAPI): void {\r\n    this.adaptationConfig = player.adaptation.getConfig();\r\n    const codec = player.getAvailableVideoQualities()[0].codec;\r\n\r\n    if (codec.includes('avc')) {\r\n      player.adaptation.setConfig({\r\n        resolution: { maxSelectableVideoHeight: 720 },\r\n        limitToPlayerSize: true,\r\n      });\r\n    }\r\n    if (codec.includes('hvc') || codec.includes('hev')) {\r\n      player.adaptation.setConfig({\r\n        resolution: { maxSelectableVideoHeight: 1080 },\r\n        limitToPlayerSize: true,\r\n      });\r\n    }\r\n    if (codec.includes('av1') || codec.includes('av01')) {\r\n      player.adaptation.setConfig({\r\n        resolution: { maxSelectableVideoHeight: 1440 },\r\n        limitToPlayerSize: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  disableEcoMode(player: PlayerAPI): void {\r\n    player.adaptation.setConfig(this.adaptationConfig);\r\n  }\r\n}\r\n","import {ContainerConfig, Container} from './container';\nimport {Label, LabelConfig} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport {TvNoiseCanvas} from './tvnoisecanvas';\nimport { ErrorUtils } from '../errorutils';\nimport { ErrorEvent, PlayerAPI, PlayerEventBase } from 'bitmovin-player';\nimport {\n  isMobileV3PlayerAPI,\n  MobileV3PlayerAPI, MobileV3PlayerErrorEvent, MobileV3PlayerEvent, MobileV3SourceErrorEvent,\n} from '../mobilev3playerapi';\nimport { GoBackButton } from '../../custom/ts/components/gobackbutton';\n\nexport interface ErrorMessageTranslator {\n  (error: ErrorEvent | MobileV3PlayerErrorEvent): string;\n}\n\nexport interface ErrorMessageMap {\n  [code: number]: string | ErrorMessageTranslator;\n}\n\n/**\n * Configuration interface for the {@link ErrorMessageOverlay}.\n *\n * @category Configs\n */\nexport interface ErrorMessageOverlayConfig extends ContainerConfig {\n  /**\n   * Allows overwriting of the error messages displayed in the overlay for customization and localization.\n   * This is either a function that receives any {@link ErrorEvent} as parameter and translates error messages,\n   * or a map of error codes that overwrites specific error messages with a plain string or a function that\n   * receives the {@link ErrorEvent} as parameter and returns a customized string.\n   * The translation functions can be used to extract data (e.g. parameters) from the original error message.\n   *\n   * Example 1 (catch-all translation function):\n   * <code>\n   * errorMessageOverlayConfig = {\n   *   messages: function(error) {\n   *     switch (error.code) {\n   *       // Overwrite error 1000 'Unknown error'\n   *       case 1000:\n   *         return 'Houston, we have a problem'\n   *\n   *       // Transform error 1201 'The downloaded manifest is invalid' to uppercase\n   *       case 1201:\n   *         var description = ErrorUtils.defaultErrorMessages[error.code];\n   *         return description.toUpperCase();\n   *\n   *       // Customize error 1207 'The manifest could not be loaded'\n   *       case 1207:\n   *         var statusCode = error.data.statusCode;\n   *         return 'Manifest loading failed with HTTP error ' + statusCode;\n   *     }\n   *     // Return unmodified error message for all other errors\n   *     return error.message;\n   *   }\n   * };\n   * </code>\n   *\n   * Example 2 (translating specific errors):\n   * <code>\n   * errorMessageOverlayConfig = {\n   *   messages: {\n   *     // Overwrite error 1000 'Unknown error'\n   *     1000: 'Houston, we have a problem',\n   *\n   *     // Transform error 1201 'Unsupported manifest format' to uppercase\n   *     1201: function(error) {\n   *       var description = ErrorUtils.defaultErrorMessages[error.code];\n   *       return description.toUpperCase();\n   *     },\n   *\n   *     // Customize error 1207 'The manifest could not be loaded'\n   *     1207: function(error) {\n   *       var statusCode = error.data.statusCode;\n   *       return 'Manifest loading failed with HTTP error ' + statusCode;\n   *     }\n   *   }\n   * };\n   * </code>\n   */\n  messages?: ErrorMessageMap | ErrorMessageTranslator;\n}\n\n/**\n * Overlays the player and displays error messages.\n *\n * @category Components\n */\nexport class ErrorMessageOverlay extends Container<ErrorMessageOverlayConfig> {\n\n  private errorLabel: Label<LabelConfig>;\n  private tvNoiseBackground: TvNoiseCanvas;\n\n  constructor(config: ErrorMessageOverlayConfig = {}) {\n    super(config);\n\n    this.errorLabel = new Label<LabelConfig>({ cssClass: 'ui-errormessage-label' });\n    this.tvNoiseBackground = new TvNoiseCanvas();\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-errormessage-overlay',\n      components: [this.tvNoiseBackground, this.errorLabel, new GoBackButton({ error: true })],\n      hidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI | MobileV3PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    const handleErrorMessage = (\n      event: ErrorEvent | MobileV3SourceErrorEvent | MobileV3PlayerErrorEvent,\n      message: string,\n    ) => {\n      const customizedMessage = customizeErrorMessage(uimanager.getConfig().errorMessages || config.messages, event);\n      if (customizedMessage) {\n        message = customizedMessage;\n      }\n\n      this.display(message);\n    };\n\n    if (isMobileV3PlayerAPI(player)) {\n      const errorEventHandler = (event: MobileV3SourceErrorEvent | MobileV3PlayerErrorEvent) => {\n        const message = ErrorUtils.defaultMobileV3ErrorMessageTranslator(event);\n        handleErrorMessage(event, message);\n      };\n\n      player.on(MobileV3PlayerEvent.PlayerError, errorEventHandler);\n      player.on(MobileV3PlayerEvent.SourceError, errorEventHandler);\n    } else {\n      player.on(player.exports.PlayerEvent.Error, (event: ErrorEvent) => {\n        let message = ErrorUtils.defaultWebErrorMessageTranslator(event);\n        handleErrorMessage(event, message);\n      });\n    }\n\n    player.on(player.exports.PlayerEvent.SourceLoaded, (event: PlayerEventBase) => {\n      if (this.isShown()) {\n        this.tvNoiseBackground.stop();\n        this.hide();\n      }\n    });\n  }\n\n  display(errorMessage: string): void {\n    this.errorLabel.setText(errorMessage);\n    this.tvNoiseBackground.start();\n    this.show();\n  }\n\n  release(): void {\n    super.release();\n\n    // Canvas rendering must be explicitly stopped, else it just continues forever and hogs resources\n    this.tvNoiseBackground.stop();\n  }\n}\n\nfunction customizeErrorMessage(\n  errorMessages: ErrorMessageTranslator | ErrorMessageMap,\n  event: ErrorEvent | MobileV3PlayerErrorEvent | MobileV3SourceErrorEvent,\n): string | undefined {\n  if (!errorMessages) {\n    return undefined;\n  }\n\n  // Process message vocabularies\n  if (typeof errorMessages === 'function') {\n    // Translation function for all errors\n    return errorMessages(event);\n  }\n  if (errorMessages[event.code]) {\n    // It's not a translation function, so it must be a map of strings or translation functions\n    const customMessage = errorMessages[event.code];\n\n    return typeof customMessage === 'string' ? customMessage : customMessage(event);\n  }\n}\n","import { ToggleButton, ToggleButtonConfig } from './togglebutton';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles the player between windowed and fullscreen view.\n *\n * @category Buttons\n */\nexport class FullscreenToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-fullscreentogglebutton',\n      text: i18n.getLocalizer('fullscreen'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    const isFullScreenAvailable = () => {\n      return player.isViewModeAvailable(player.exports.ViewMode.Fullscreen);\n    };\n\n    const fullscreenStateHandler = () => {\n      player.getViewMode() === player.exports.ViewMode.Fullscreen ? this.on() : this.off();\n    };\n\n    const fullscreenAvailabilityChangedHandler = () => {\n      isFullScreenAvailable() ? this.show() : this.hide();\n    };\n\n    player.on(player.exports.PlayerEvent.ViewModeChanged, fullscreenStateHandler);\n\n    // Available only in our native SDKs for now\n    if ((player.exports.PlayerEvent as any).ViewModeAvailabilityChanged) {\n      player.on(\n        (player.exports.PlayerEvent as any).ViewModeAvailabilityChanged,\n        fullscreenAvailabilityChangedHandler,\n      );\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(fullscreenAvailabilityChangedHandler);\n\n    this.onClick.subscribe(() => {\n      if (!isFullScreenAvailable()) {\n        if (console) {\n          console.log('Fullscreen unavailable');\n        }\n        return;\n      }\n\n      const targetViewMode =\n        player.getViewMode() === player.exports.ViewMode.Fullscreen\n          ? player.exports.ViewMode.Inline\n          : player.exports.ViewMode.Fullscreen;\n\n      player.setViewMode(targetViewMode);\n    });\n\n    // Startup init\n    fullscreenAvailabilityChangedHandler();\n    fullscreenStateHandler();\n  }\n}\n","import {PlaybackToggleButton, PlaybackToggleButtonConfig} from './playbacktogglebutton';\nimport {DOM} from '../dom';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI, PlayerEventBase, WarningEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that overlays the video and toggles between playback and pause.\n *\n * @category Buttons\n */\nexport class HugePlaybackToggleButton extends PlaybackToggleButton {\n\n  constructor(config: PlaybackToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-hugeplaybacktogglebutton',\n      text: i18n.getLocalizer('playPause'),\n      role: 'button',\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    // Update button state through API events\n    super.configure(player, uimanager, false);\n\n    // Set enterFullscreenOnInitialPlayback if set in the uimanager config\n    if (typeof uimanager.getConfig().enterFullscreenOnInitialPlayback === 'boolean') {\n      this.config.enterFullscreenOnInitialPlayback = uimanager.getConfig().enterFullscreenOnInitialPlayback;\n    }\n\n    let togglePlayback = () => {\n      if (player.isPlaying() || this.isPlayInitiated) {\n        player.pause('ui');\n      } else {\n        player.play('ui');\n      }\n    };\n\n    let toggleFullscreen = () => {\n      if (player.getViewMode() === player.exports.ViewMode.Fullscreen) {\n        player.setViewMode(player.exports.ViewMode.Inline);\n      } else {\n        player.setViewMode(player.exports.ViewMode.Fullscreen);\n      }\n    };\n\n    let firstPlay = true;\n    let clickTime = 0;\n    let doubleClickTime = 0;\n\n    /*\n     * YouTube-style toggle button handling\n     *\n     * The goal is to prevent a short pause or playback interval between a click, that toggles playback, and a\n     * double click, that toggles fullscreen. In this naive approach, the first click would e.g. start playback,\n     * the second click would be detected as double click and toggle to fullscreen, and as second normal click stop\n     * playback, which results is a short playback interval with max length of the double click detection\n     * period (usually 500ms).\n     *\n     * To solve this issue, we defer handling of the first click for 200ms, which is almost unnoticeable to the user,\n     * and just toggle playback if no second click (double click) has been registered during this period. If a double\n     * click is registered, we just toggle the fullscreen. In the first 200ms, undesired playback changes thus cannot\n     * happen. If a double click is registered within 500ms, we undo the playback change and switch fullscreen mode.\n     * In the end, this method basically introduces a 200ms observing interval in which playback changes are prevented\n     * if a double click happens.\n     */\n    this.onClick.subscribe(() => {\n      // Directly start playback on first click of the button.\n      // This is a required workaround for mobile browsers where video playback needs to be triggered directly\n      // by the user. A deferred playback start through the timeout below is not considered as user action and\n      // therefore ignored by mobile browsers.\n      if (firstPlay) {\n        // Try to start playback. Then we wait for Play and only when it arrives, we disable the firstPlay flag.\n        // If we disable the flag here, onClick was triggered programmatically instead of by a user interaction, and\n        // playback is blocked (e.g. on mobile devices due to the programmatic play() call), we loose the chance to\n        // ever start playback through a user interaction again with this button.\n        togglePlayback();\n\n        if (this.config.enterFullscreenOnInitialPlayback) {\n          player.setViewMode(player.exports.ViewMode.Fullscreen);\n        }\n\n        return;\n      }\n\n      let now = Date.now();\n\n      if (now - clickTime < 200) {\n        // We have a double click inside the 200ms interval, just toggle fullscreen mode\n        toggleFullscreen();\n        doubleClickTime = now;\n        return;\n      } else if (now - clickTime < 500) {\n        // We have a double click inside the 500ms interval, undo playback toggle and toggle fullscreen mode\n        toggleFullscreen();\n        togglePlayback();\n        doubleClickTime = now;\n        return;\n      }\n\n      clickTime = now;\n\n      setTimeout(() => {\n        if (Date.now() - doubleClickTime > 200) {\n          // No double click detected, so we toggle playback and wait what happens next\n          togglePlayback();\n        }\n      }, 200);\n    });\n\n    player.on(player.exports.PlayerEvent.Play, () => {\n      // Playback has really started, we can disable the flag to switch to normal toggle button handling\n      firstPlay = false;\n    });\n\n    player.on(player.exports.PlayerEvent.Warning, (event: WarningEvent) => {\n      if (event.code === player.exports.WarningCode.PLAYBACK_COULD_NOT_BE_STARTED) {\n        // if playback could not be started, reset the first play flag as we need the user interaction to start\n        firstPlay = true;\n      }\n    });\n\n    const suppressPlayButtonTransitionAnimation = () => {\n      // Disable the current animation\n      this.setTransitionAnimationsEnabled(false);\n\n      // Enable the transition animations for the next state change\n      this.onToggle.subscribeOnce(() => {\n        this.setTransitionAnimationsEnabled(true);\n      });\n    };\n\n    // Hide the play button animation when the UI is loaded (it should only be animated on state changes)\n    suppressPlayButtonTransitionAnimation();\n\n    const isAutoplayEnabled = player.getConfig().playback && Boolean(player.getConfig().playback.autoplay);\n    // We only know if an autoplay attempt is upcoming if the player is not yet ready. It the player is already ready,\n    // the attempt might be upcoming or might have already happened, but we don't have to handle that because we can\n    // simply rely on isPlaying and the play state events.\n    const isAutoplayUpcoming = !player.getSource() && isAutoplayEnabled;\n\n    // Hide the play button when the player is already playing or autoplay is upcoming\n    if (player.isPlaying() || isAutoplayUpcoming) {\n      // Hide the play button (switch to playing state)\n      this.on();\n      // Disable the animation of the playing state switch\n      suppressPlayButtonTransitionAnimation();\n\n      // Show the play button without an animation if a play attempt is blocked\n      player.on(player.exports.PlayerEvent.Warning, (event: WarningEvent) => {\n        if (event.code === player.exports.WarningCode.PLAYBACK_COULD_NOT_BE_STARTED) {\n          suppressPlayButtonTransitionAnimation();\n        }\n      });\n    }\n  }\n\n  protected toDomElement(): DOM {\n    let buttonElement = super.toDomElement();\n\n    // Add child that contains the play button image\n    // Setting the image directly on the button does not work together with scaling animations, because the button\n    // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined\n    // to the size if the image, it can scale inside the player without overshooting.\n    buttonElement.append(new DOM('div', {\n      'class': this.prefixCss('image'),\n    }));\n\n    return buttonElement;\n  }\n\n  /**\n   * Enables or disables the play state transition animations of the play button image. Can be used to suppress\n   * animations.\n   * @param {boolean} enabled true to enable the animations (default), false to disable them\n   */\n  protected setTransitionAnimationsEnabled(enabled: boolean): void {\n    const noTransitionAnimationsClass = this.prefixCss('no-transition-animations');\n\n    if (enabled) {\n      this.getDomElement().removeClass(noTransitionAnimationsClass);\n    } else if (!this.getDomElement().hasClass(noTransitionAnimationsClass)) {\n      this.getDomElement().addClass(noTransitionAnimationsClass);\n    }\n  }\n}\n","import {ButtonConfig, Button} from './button';\nimport {DOM} from '../dom';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button to play/replay a video.\n *\n * @category Buttons\n */\nexport class HugeReplayButton extends Button<ButtonConfig> {\n\n  constructor(config: ButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-hugereplaybutton',\n      text: i18n.getLocalizer('replay'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      player.play('ui');\n    });\n  }\n\n  protected toDomElement(): DOM {\n    let buttonElement = super.toDomElement();\n\n    // Add child that contains the play button image\n    // Setting the image directly on the button does not work together with scaling animations, because the button\n    // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined\n    // to the size if the image, it can scale inside the player without overshooting.\n    buttonElement.append(new DOM('div', {\n      'class': this.prefixCss('image'),\n    }));\n\n    return buttonElement;\n  }\n}","import {ListSelector, ListSelectorConfig} from './listselector';\nimport {DOM} from '../dom';\nimport { i18n } from '../localization/i18n';\n\n/**\n * @category Components\n */\nexport class ItemSelectionList extends ListSelector<ListSelectorConfig> {\n\n  private static readonly CLASS_SELECTED = 'selected';\n\n  private listElement: DOM;\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      tag: 'ul',\n      cssClass: 'ui-itemselectionlist',\n    }, this.config);\n  }\n\n  protected isActive(): boolean {\n    return this.items.length > 1;\n  }\n\n  protected toDomElement(): DOM {\n    let listElement = new DOM('ul', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n    }, this);\n\n    this.listElement = listElement;\n    this.updateDomItems();\n\n    return listElement;\n  }\n\n  protected updateDomItems(selectedValue: string = null) {\n    // Delete all children\n    this.listElement.empty();\n\n    let selectedListItem: DOM = null;\n\n    const selectItem = (listItem: DOM) => {\n      listItem.addClass(this.prefixCss(ItemSelectionList.CLASS_SELECTED));\n    };\n\n    const deselectItem = (listItem: DOM) => {\n      listItem.removeClass(this.prefixCss(ItemSelectionList.CLASS_SELECTED));\n    };\n\n    for (let item of this.items) {\n      let listItem = new DOM('li', {\n        'type': 'li',\n        'class': this.prefixCss('ui-selectionlistitem'),\n      }).append(new DOM('a', {\n      }).html(i18n.performLocalization(item.label)));\n\n      if (!selectedListItem) {\n        if (selectedValue == null) { // If there is no pre-selected value, select the first one\n          selectedListItem = listItem;\n        } else if (String(selectedValue) === item.key) { // convert selectedValue to string to catch 'null'/null case\n          selectedListItem = listItem;\n        }\n      }\n\n      // Handle list item selections\n      listItem.on('click', () => {\n        // Deselect the previous item (if there was a selected item)\n        if (selectedListItem) {\n          deselectItem(selectedListItem);\n        }\n\n        // Select the clicked item\n        selectedListItem = listItem;\n        selectItem(listItem);\n\n        // Fire the event\n        this.onItemSelectedEvent(item.key, false);\n      });\n\n      // Select default item\n      if (selectedListItem) {\n        selectItem(selectedListItem);\n      }\n\n      this.listElement.append(listItem);\n    }\n  }\n\n  protected onItemAddedEvent(value: string) {\n    super.onItemAddedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemRemovedEvent(value: string) {\n    super.onItemRemovedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemSelectedEvent(value: string, updateDomItems: boolean = true) {\n    super.onItemSelectedEvent(value);\n    if (updateDomItems) {\n      this.updateDomItems(value);\n    }\n  }\n}\n","import {ComponentConfig, Component} from './component';\nimport {DOM} from '../dom';\nimport {EventDispatcher, Event, NoArgs} from '../eventdispatcher';\nimport { LocalizableText, i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link Label} component.\n *\n * @category Configs\n */\nexport interface LabelConfig extends ComponentConfig {\n  /**\n   * The text as string or localize callback on the label.\n   */\n  text?: LocalizableText;\n\n  /**\n   * WCAG20 standard: Associate label to form control.\n   */\n  for?: string;\n}\n\n/**\n * A simple text label.\n *\n * DOM example:\n * <code>\n *     <span class='ui-label'>...some text...</span>\n * </code>\n *\n * @category Components\n */\nexport class Label<Config extends LabelConfig> extends Component<Config> {\n\n  private text: LocalizableText;\n\n  private labelEvents = {\n    onClick: new EventDispatcher<Label<Config>, NoArgs>(),\n    onTextChanged: new EventDispatcher<Label<Config>, string>(),\n  };\n\n  constructor(config: Config = {} as Config) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-label',\n    } as Config, this.config);\n    this.text = this.config.text;\n  }\n\n  protected toDomElement(): DOM {\n    const tagName = this.config.for != null ? 'label' : 'span';\n\n    let labelElement = new DOM(tagName, {\n      'id': this.config.id,\n      'for': this.config.for,\n      'class': this.getCssClasses(),\n    }, this).html(i18n.performLocalization(this.text));\n\n    labelElement.on('click', () => {\n      this.onClickEvent();\n    });\n\n    return labelElement;\n  }\n\n  /**\n   * Set the text on this label.\n   * @param text\n   */\n  setText(text: LocalizableText) {\n    if (text === this.text) {\n      return;\n    }\n\n    this.text = text;\n    const localizedText = i18n.performLocalization(text);\n    this.getDomElement().html(localizedText);\n    this.onTextChangedEvent(localizedText);\n  }\n\n  /**\n   * Gets the text on this label.\n   * @return {string} The text on the label\n   */\n  getText(): string {\n    return i18n.performLocalization(this.text);\n  }\n\n  /**\n   * Clears the text on this label.\n   */\n  clearText() {\n    this.getDomElement().html('');\n    this.onTextChangedEvent(null);\n  }\n\n  /**\n   * Tests if the label is empty and does not contain any text.\n   * @return {boolean} True if the label is empty, else false\n   */\n  isEmpty(): boolean {\n    return !this.text;\n  }\n\n  /**\n   * Fires the {@link #onClick} event.\n   * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method\n   * and calling the super method.\n   */\n  protected onClickEvent() {\n    this.labelEvents.onClick.dispatch(this);\n  }\n\n  /**\n   * Fires the {@link #onClick} event.\n   * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method\n   * and calling the super method.\n   */\n  protected onTextChangedEvent(text: string) {\n    this.labelEvents.onTextChanged.dispatch(this, text);\n  }\n\n  /**\n   * Gets the event that is fired when the label is clicked.\n   * @returns {Event<Label<LabelConfig>, NoArgs>}\n   */\n  get onClick(): Event<Label<LabelConfig>, NoArgs> {\n    return this.labelEvents.onClick.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the text on the label is changed.\n   * @returns {Event<Label<LabelConfig>, string>}\n   */\n  get onTextChanged(): Event<Label<LabelConfig>, string> {\n    return this.labelEvents.onTextChanged.getEvent();\n  }\n}\n","import { ToggleButton, ToggleButtonConfig } from './togglebutton';\nimport { ListItem, ListSelector, ListSelectorConfig } from './listselector';\nimport {DOM} from '../dom';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { ArrayUtils } from '../arrayutils';\n\n/**\n * A element to select a single item out of a list of available items.\n *\n * DOM example:\n * <code>\n *   <div class='ui-listbox'>\n *     <button class='ui-listbox-button'>label</button>\n *     ...\n *   </div\n * </code>\n *\n * @category Components\n */\n// TODO: change ListSelector to extends container in v4 to improve usage of ListBox.\n//       Currently we are creating the dom element of the list box with child elements manually here.\n//       But this functionality is already covered within the Container component.\nexport class ListBox extends ListSelector<ListSelectorConfig> {\n  private listBoxElement: DOM;\n  private components: ListBoxItemButton[] = [];\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-listbox',\n    } as ListSelectorConfig, this.config);\n  }\n\n  public configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    // Subscribe before super call to receive initial events\n    this.onItemAdded.subscribe(this.addListBoxDomItem);\n    this.onItemRemoved.subscribe(this.removeListBoxDomItem);\n    this.onItemSelected.subscribe(this.refreshSelectedItem);\n\n    super.configure(player, uimanager);\n  }\n\n  protected toDomElement(): DOM {\n    let listBoxElement = new DOM('div', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n    }, this);\n\n    this.listBoxElement = listBoxElement;\n    this.createListBoxDomItems();\n    this.refreshSelectedItem();\n\n    return listBoxElement;\n  }\n\n  private createListBoxDomItems() {\n    // Delete all children\n    this.listBoxElement.empty();\n    this.components = [];\n\n    // Add updated children\n    for (let item of this.items) {\n      this.addListBoxDomItem(this, item.key);\n    }\n  }\n\n  private removeListBoxDomItem = (_: ListBox, key: string) => {\n    const component = this.getComponentForKey(key);\n    if (component) {\n      component.getDomElement().remove();\n      ArrayUtils.remove(this.components, component);\n    }\n  };\n\n  private addListBoxDomItem = (_: ListBox, key: string) => {\n    const component = this.getComponentForKey(key);\n    const newItem = this.getItemForKey(key);\n    if (component) {\n      // Update existing component\n      component.setText(newItem.label);\n    } else {\n      const listBoxItemButton = this.buildListBoxItemButton(newItem);\n\n      listBoxItemButton.onClick.subscribe(() => {\n        this.handleSelectionChange(listBoxItemButton);\n      });\n\n      this.components.push(listBoxItemButton);\n      this.listBoxElement.append(listBoxItemButton.getDomElement());\n    }\n  };\n\n  private refreshSelectedItem = () => {\n    // This gets called twice because the first time is triggered when the user clicks on the ListBoxItemButton. And the\n    // second call comes from the player event when the actual item is selected (Subtitle / AudioTrack in this case).\n    // As this is a generic component we can't prohibit this behaviour. We need to treat this component as it acts\n    // independent from PlayerEvents and on the other hand we need to react to PlayerEvents as it could be triggered\n    // from outside.\n\n    for (let item of this.items) {\n      const component = this.getComponentForKey(item.key);\n      if (component) {\n        String(component.key) === String(this.selectedItem) ? component.on() : component.off();\n      }\n    }\n  };\n\n  private buildListBoxItemButton(listItem: ListItem): ListBoxItemButton {\n    return new ListBoxItemButton({\n      key: listItem.key,\n      text: listItem.label,\n      ariaLabel: listItem.ariaLabel,\n    });\n  }\n\n  private getComponentForKey(key: string): ListBoxItemButton {\n    return this.components.find((c) => key === c.key);\n  }\n\n  private handleSelectionChange = (sender: ListBoxItemButton) => {\n    this.onItemSelectedEvent(sender.key);\n  };\n}\n\ninterface ListBoxItemButtonConfig extends ToggleButtonConfig {\n  /**\n   * key to identify selected item. Similar to the value attribute of an select option.\n   */\n  key: string;\n}\n\nclass ListBoxItemButton extends ToggleButton<ListBoxItemButtonConfig> {\n\n  constructor(config: ListBoxItemButtonConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-listbox-button',\n      onClass: 'selected',\n      offClass: '',\n    } as ListBoxItemButtonConfig, this.config);\n  }\n\n  get key(): string {\n    return (this.config as ListBoxItemButtonConfig).key;\n  }\n}\n","import {Component, ComponentConfig} from './component';\nimport {EventDispatcher, Event} from '../eventdispatcher';\nimport {ArrayUtils} from '../arrayutils';\nimport { LocalizableText, i18n } from '../localization/i18n';\n\n/**\n * A map of items (key/value -> label} for a {@link ListSelector} in a {@link ListSelectorConfig}.\n */\nexport interface ListItem {\n  key: string;\n  label: LocalizableText;\n  sortedInsert?: boolean;\n  ariaLabel?: string;\n}\n\n/**\n * Filter function that can be used to filter out list items added through {@link ListSelector.addItem}.\n *\n * This is intended to be used in conjunction with subclasses that populate themselves automatically\n * via the player API, e.g. {@link SubtitleSelectBox}.\n */\nexport interface ListItemFilter {\n  /**\n   * Takes a list item and decides whether it should pass or be discarded.\n   * @param {ListItem} listItem the item to apply the filter to\n   * @returns {boolean} true to let the item pass through the filter, false to discard the item\n   */\n  (listItem: ListItem): boolean;\n}\n\n/**\n * Translator function to translate labels of list items added through {@link ListSelector.addItem}.\n *\n * This is intended to be used in conjunction with subclasses that populate themselves automatically\n * via the player API, e.g. {@link SubtitleSelectBox}.\n */\nexport interface ListItemLabelTranslator {\n  /**\n   * Takes a list item, optionally changes the label, and returns the new label.\n   * @param {ListItem} listItem the item to translate\n   * @returns {string} the translated or original label\n   */\n  (listItem: ListItem): string;\n}\n\n/**\n * Configuration interface for a {@link ListSelector}.\n *\n * @category Configs\n */\nexport interface ListSelectorConfig extends ComponentConfig {\n  items?: ListItem[];\n  filter?: ListItemFilter;\n  translator?: ListItemLabelTranslator;\n}\n\nexport abstract class ListSelector<Config extends ListSelectorConfig> extends Component<ListSelectorConfig> {\n\n  protected items: ListItem[];\n  protected selectedItem: string;\n\n  private listSelectorEvents = {\n    onItemAdded: new EventDispatcher<ListSelector<Config>, string>(),\n    onItemRemoved: new EventDispatcher<ListSelector<Config>, string>(),\n    onItemSelected: new EventDispatcher<ListSelector<Config>, string>(),\n  };\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      items: [],\n      cssClass: 'ui-listselector',\n    }, this.config);\n\n    this.items = this.config.items;\n  }\n\n  private getItemIndex(key: string): number {\n    for (let index in this.items) {\n      if (key === this.items[index].key) {\n        return parseInt(index);\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns all current items of this selector.\n   * * @returns {ListItem[]}\n   */\n  getItems(): ListItem[] {\n    return this.items;\n  }\n\n  /**\n   * Checks if the specified item is part of this selector.\n   * @param key the key of the item to check\n   * @returns {boolean} true if the item is part of this selector, else false\n   */\n  hasItem(key: string): boolean {\n    return this.getItemIndex(key) > -1;\n  }\n\n  /**\n   * Adds an item to this selector by doing a sorted insert or by appending the element to the end of the list of items.\n   * If an item with the specified key already exists, it is replaced.\n   * @param key the key of the item to add\n   * @param label the (human-readable) label of the item to add\n   * @param sortedInsert whether the item should be added respecting the order of keys\n   * @param ariaLabel custom aria label for the listItem\n   */\n  addItem(key: string, label: LocalizableText, sortedInsert = false, ariaLabel = '') {\n    const listItem = { key: key, label: i18n.performLocalization(label), ...(ariaLabel && { ariaLabel })};\n\n    // Apply filter function\n    if (this.config.filter && !this.config.filter(listItem)) {\n      return;\n    }\n\n    // Apply translator function\n    if (this.config.translator) {\n      listItem.label = this.config.translator(listItem);\n    }\n\n    // Try to remove key first to get overwrite behavior and avoid duplicate keys\n    this.removeItem(key); // This will trigger an ItemRemoved and an ItemAdded event\n\n    // Add the item to the list\n    if (sortedInsert) {\n      const index = this.items.findIndex(entry => entry.key > key);\n      if (index < 0) {\n        this.items.push(listItem);\n      } else {\n        this.items.splice(index, 0, listItem);\n      }\n    } else {\n      this.items.push(listItem);\n    }\n    this.onItemAddedEvent(key);\n  }\n\n  /**\n   * Removes an item from this selector.\n   * @param key the key of the item to remove\n   * @returns {boolean} true if removal was successful, false if the item is not part of this selector\n   */\n  removeItem(key: string): boolean {\n    let index = this.getItemIndex(key);\n    if (index > -1) {\n      ArrayUtils.remove(this.items, this.items[index]);\n      this.onItemRemovedEvent(key);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects an item from the items in this selector.\n   * @param key the key of the item to select\n   * @returns {boolean} true is the selection was successful, false if the selected item is not part of the selector\n   */\n  selectItem(key: string): boolean {\n    if (key === this.selectedItem) {\n      // itemConfig is already selected, suppress any further action\n      return true;\n    }\n\n    let index = this.getItemIndex(key);\n\n    if (index > -1) {\n      this.selectedItem = key;\n      this.onItemSelectedEvent(key);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns the key of the selected item.\n   * @returns {string} the key of the selected item or null if no item is selected\n   */\n  getSelectedItem(): string | null {\n    return this.selectedItem;\n  }\n\n  /**\n   * Returns the items for the given key or undefined if no item with the given key exists.\n   * @param key the key of the item to return\n   * @returns {ListItem} the item with the requested key. Undefined if no item with the given key exists.\n   */\n  getItemForKey(key: string): ListItem {\n    return this.items.find((item) => item.key === key);\n  }\n\n  /**\n   * Synchronize the current items of this selector with the given ones. This will remove and add items selectively.\n   * For each removed item the ItemRemovedEvent and for each added item the ItemAddedEvent will be triggered. Favour\n   * this method over using clearItems and adding all items again afterwards.\n   * @param newItems\n   */\n  synchronizeItems(newItems: ListItem[]): void {\n    newItems\n      .filter((item) => !this.hasItem(item.key))\n      .forEach((item) => this.addItem(item.key, item.label, item.sortedInsert, item.ariaLabel));\n\n    this.items\n      .filter((item) => newItems.filter((i) => i.key === item.key).length === 0)\n      .forEach((item) => this.removeItem(item.key));\n  }\n\n  /**\n   * Removes all items from this selector.\n   */\n  clearItems() {\n    // local copy for iteration after clear\n    let items = this.items;\n    // clear items\n    this.items = [];\n\n    // clear the selection as the selected item is also removed\n    this.selectedItem = null;\n\n    // fire events\n    for (let item of items) {\n      this.onItemRemovedEvent(item.key);\n    }\n  }\n\n  /**\n   * Returns the number of items in this selector.\n   * @returns {number}\n   */\n  itemCount(): number {\n    return Object.keys(this.items).length;\n  }\n\n  protected onItemAddedEvent(key: string) {\n    this.listSelectorEvents.onItemAdded.dispatch(this, key);\n  }\n\n  protected onItemRemovedEvent(key: string) {\n    this.listSelectorEvents.onItemRemoved.dispatch(this, key);\n  }\n\n  protected onItemSelectedEvent(key: string) {\n    this.listSelectorEvents.onItemSelected.dispatch(this, key);\n  }\n\n  /**\n   * Gets the event that is fired when an item is added to the list of items.\n   * @returns {Event<ListSelector<Config>, string>}\n   */\n  get onItemAdded(): Event<ListSelector<Config>, string> {\n    return this.listSelectorEvents.onItemAdded.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when an item is removed from the list of items.\n   * @returns {Event<ListSelector<Config>, string>}\n   */\n  get onItemRemoved(): Event<ListSelector<Config>, string> {\n    return this.listSelectorEvents.onItemRemoved.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when an item is selected from the list of items.\n   * @returns {Event<ListSelector<Config>, string>}\n   */\n  get onItemSelected(): Event<ListSelector<Config>, string> {\n    return this.listSelectorEvents.onItemSelected.getEvent();\n  }\n}","import {LabelConfig, Label} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Enumerates the types of content that the {@link MetadataLabel} can display.\n */\nexport enum MetadataLabelContent {\n  /**\n   * Title of the data source.\n   */\n  Title,\n  /**\n   * Description fo the data source.\n   */\n  Description,\n}\n\n/**\n * Configuration interface for {@link MetadataLabel}.\n *\n * @category Configs\n */\nexport interface MetadataLabelConfig extends LabelConfig {\n  /**\n   * The type of content that should be displayed in the label.\n   */\n  content: MetadataLabelContent;\n}\n\n/**\n * A label that can be configured to display certain metadata.\n *\n * @category Labels\n */\nexport class MetadataLabel extends Label<MetadataLabelConfig> {\n\n  constructor(config: MetadataLabelConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['label-metadata', 'label-metadata-' + MetadataLabelContent[config.content].toLowerCase()],\n    } as MetadataLabelConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let uiconfig = uimanager.getConfig();\n\n    let init = () => {\n      switch (config.content) {\n        case MetadataLabelContent.Title:\n          this.setText(uiconfig.metadata.title);\n          break;\n        case MetadataLabelContent.Description:\n          this.setText(uiconfig.metadata.description);\n          break;\n      }\n    };\n\n    let unload = () => {\n      this.setText(null);\n    };\n\n    // Init label\n    init();\n    // Clear labels when source is unloaded\n    player.on(player.exports.PlayerEvent.SourceUnloaded, unload);\n\n    uimanager.getConfig().events.onUpdated.subscribe(init);\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles Apple macOS picture-in-picture mode.\n *\n * @category Buttons\n */\nexport class PictureInPictureToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-piptogglebutton',\n      text: i18n.getLocalizer('pictureInPicture'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    const isPictureInPictureAvailable = () => {\n      return player.isViewModeAvailable(player.exports.ViewMode.PictureInPicture);\n    };\n\n    const pictureInPictureStateHandler = () => {\n      player.getViewMode() === player.exports.ViewMode.PictureInPicture ? this.on() : this.off();\n    };\n\n    const pictureInPictureAvailabilityChangedHandler = () => {\n      isPictureInPictureAvailable() ? this.show() : this.hide();\n    };\n\n    player.on(player.exports.PlayerEvent.ViewModeChanged, pictureInPictureStateHandler);\n\n    // Available only in our native SDKs for now\n    if ((player.exports.PlayerEvent as any).ViewModeAvailabilityChanged) {\n      player.on(\n        (player.exports.PlayerEvent as any).ViewModeAvailabilityChanged,\n        pictureInPictureAvailabilityChangedHandler,\n      );\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(pictureInPictureAvailabilityChangedHandler);\n\n    this.onClick.subscribe(() => {\n      if (!isPictureInPictureAvailable()) {\n        if (console) {\n          console.log('PIP unavailable');\n        }\n        return;\n      }\n\n      const targetViewMode =\n        player.getViewMode() === player.exports.ViewMode.PictureInPicture\n          ? player.exports.ViewMode.Inline\n          : player.exports.ViewMode.PictureInPicture;\n\n      player.setViewMode(targetViewMode);\n    });\n\n    // Startup init\n    pictureInPictureAvailabilityChangedHandler(); // Hide button if PIP not available\n    pictureInPictureStateHandler();\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection of different playback speeds.\n *\n * @category Components\n */\nexport class PlaybackSpeedSelectBox extends SelectBox {\n  protected defaultPlaybackSpeeds: number[];\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n    this.defaultPlaybackSpeeds = [0.25, 0.5, 1, 1.5, 2];\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-playbackspeedselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addDefaultItems();\n\n    this.onItemSelected.subscribe((sender: PlaybackSpeedSelectBox, value: string) => {\n      player.setPlaybackSpeed(parseFloat(value));\n      this.selectItem(value);\n    });\n\n    const setDefaultValue = (): void => {\n      const playbackSpeed = player.getPlaybackSpeed();\n      this.setSpeed(playbackSpeed);\n    };\n\n    player.on(player.exports.PlayerEvent.PlaybackSpeedChanged, setDefaultValue);\n    uimanager.getConfig().events.onUpdated.subscribe(setDefaultValue);\n  }\n\n  setSpeed(speed: number): void {\n    if (!this.selectItem(String(speed))) {\n      // a playback speed was set which is not in the list, add it to the list to show it to the user\n      this.clearItems();\n      this.addDefaultItems([speed]);\n      this.selectItem(String(speed));\n    }\n  }\n\n  addDefaultItems(customItems: number[] = []): void {\n    const sortedSpeeds = this.defaultPlaybackSpeeds.concat(customItems).sort();\n\n    sortedSpeeds.forEach(element => {\n      if (element !== 1) {\n        this.addItem(String(element), `${element}x`);\n      } else {\n        this.addItem(String(element), i18n.getLocalizer('normal'));\n      }\n    });\n  }\n\n  clearItems(): void {\n    this.items = [];\n    this.selectedItem = null;\n  }\n}","import {LabelConfig, Label} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\nimport {PlayerUtils} from '../playerutils';\nimport {StringUtils} from '../stringutils';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\nexport enum PlaybackTimeLabelMode {\n  /**\n   * Displays the current time\n   */\n  CurrentTime,\n  /**\n   * Displays the duration of the content\n   */\n  TotalTime,\n  /**\n   * Displays the current time and the duration of the content\n   * Format: ${currentTime} / ${totalTime}\n   */\n  CurrentAndTotalTime,\n  /**\n   * Displays the remaining time of the content\n   */\n  RemainingTime,\n}\n\n/**\n * @category Configs\n */\nexport interface PlaybackTimeLabelConfig extends LabelConfig {\n  /**\n   * The type of which time should be displayed in the label.\n   * Default: PlaybackTimeLabelMode.CurrentAndTotalTime\n   */\n  timeLabelMode?: PlaybackTimeLabelMode;\n  /**\n   * Boolean if the label should be hidden in live playback\n   */\n  hideInLivePlayback?: boolean;\n}\n\n/**\n * A label that display the current playback time and the total time through {@link PlaybackTimeLabel#setTime setTime}\n * or any string through {@link PlaybackTimeLabel#setText setText}.\n *\n * @category Labels\n */\nexport class PlaybackTimeLabel extends Label<PlaybackTimeLabelConfig> {\n\n  private timeFormat: string;\n\n  constructor(config: PlaybackTimeLabelConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <PlaybackTimeLabelConfig>{\n      cssClass: 'ui-playbacktimelabel',\n      timeLabelMode: PlaybackTimeLabelMode.CurrentAndTotalTime,\n      hideInLivePlayback: false,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let live = false;\n    let liveCssClass = this.prefixCss('ui-playbacktimelabel-live');\n    let liveEdgeCssClass = this.prefixCss('ui-playbacktimelabel-live-edge');\n    let minWidth = 0;\n\n    let liveClickHandler = () => {\n      player.timeShift(0);\n    };\n\n    let updateLiveState = () => {\n      // Player is playing a live stream when the duration is infinite\n      live = player.isLive();\n\n      // Attach/detach live marker class\n      if (live) {\n        this.getDomElement().addClass(liveCssClass);\n        this.setText(i18n.getLocalizer('live'));\n        if (config.hideInLivePlayback) {\n          this.hide();\n        }\n        this.onClick.subscribe(liveClickHandler);\n        updateLiveTimeshiftState();\n      } else {\n        this.getDomElement().removeClass(liveCssClass);\n        this.getDomElement().removeClass(liveEdgeCssClass);\n        this.show();\n        this.onClick.unsubscribe(liveClickHandler);\n      }\n    };\n\n    let updateLiveTimeshiftState = () => {\n      if (!live) {\n        return;\n      }\n\n      // The player is only at the live edge iff the stream is not shifted and it is actually playing or playback has\n      // never been started (meaning it isn't paused). A player that is paused is always behind the live edge.\n      // An exception is made for live streams without a timeshift window, because here we \"stop\" playback instead\n      // of pausing it (from a UI perspective), so we keep the live edge indicator on because a play would always\n      // resume at the live edge.\n      const isTimeshifted = player.getTimeShift() < 0;\n      const isTimeshiftAvailable = player.getMaxTimeShift() < 0;\n      if (!isTimeshifted && (!player.isPaused() || !isTimeshiftAvailable)) {\n        this.getDomElement().addClass(liveEdgeCssClass);\n      } else {\n        this.getDomElement().removeClass(liveEdgeCssClass);\n      }\n    };\n\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: LiveStreamDetectorEventArgs) => {\n      live = args.live;\n      updateLiveState();\n    });\n    liveStreamDetector.detect(); // Initial detection\n\n    let playbackTimeHandler = () => {\n      if (!live && player.getDuration() !== Infinity) {\n        this.setTime(\n          PlayerUtils.getCurrentTimeRelativeToSeekableRange(player),\n          player.getDuration());\n      }\n\n      // To avoid 'jumping' in the UI by varying label sizes due to non-monospaced fonts,\n      // we gradually increase the min-width with the content to reach a stable size.\n      let width = this.getDomElement().width();\n      if (width > minWidth) {\n        minWidth = width;\n        this.getDomElement().css({\n          'min-width': minWidth + 'px',\n        });\n      }\n    };\n\n    let updateTimeFormatBasedOnDuration = () => {\n      // Set time format depending on source duration\n      this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?\n      StringUtils.FORMAT_HHMMSS : StringUtils.FORMAT_MMSS;\n      playbackTimeHandler();\n    };\n\n    player.on(player.exports.PlayerEvent.TimeChanged, playbackTimeHandler);\n    player.on(player.exports.PlayerEvent.Ready, updateTimeFormatBasedOnDuration);\n    player.on(player.exports.PlayerEvent.Seeked, playbackTimeHandler);\n\n    player.on(player.exports.PlayerEvent.TimeShift, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.TimeShifted, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.Playing, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.Paused, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.StallStarted, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.StallEnded, updateLiveTimeshiftState);\n\n    let init = () => {\n      // Reset min-width when a new source is ready (especially for switching VOD/Live modes where the label content\n      // changes)\n      minWidth = 0;\n      this.getDomElement().css({\n        'min-width': null,\n      });\n\n      updateTimeFormatBasedOnDuration();\n    };\n    uimanager.getConfig().events.onUpdated.subscribe(init);\n\n    init();\n  }\n\n  /**\n   * Sets the current playback time and total duration.\n   * @param playbackSeconds the current playback time in seconds\n   * @param durationSeconds the total duration in seconds\n   */\n  setTime(playbackSeconds: number, durationSeconds: number) {\n    let currentTime = StringUtils.secondsToTime(playbackSeconds, this.timeFormat);\n    let totalTime = StringUtils.secondsToTime(durationSeconds, this.timeFormat);\n\n    switch ((<PlaybackTimeLabelConfig>this.config).timeLabelMode) {\n      case PlaybackTimeLabelMode.CurrentTime:\n        this.setText(`${currentTime}`);\n        break;\n      case PlaybackTimeLabelMode.TotalTime:\n        this.setText(`${totalTime}`);\n        break;\n      case PlaybackTimeLabelMode.CurrentAndTotalTime:\n        this.setText(`${currentTime} / ${totalTime}`);\n        break;\n      case PlaybackTimeLabelMode.RemainingTime:\n        let remainingTime = StringUtils.secondsToTime(durationSeconds - playbackSeconds, this.timeFormat);\n        this.setText(`${remainingTime}`);\n        break;\n    }\n  }\n\n  /**\n   * Sets the current time format\n   * @param timeFormat the time format\n   */\n  protected setTimeFormat(timeFormat: string): void {\n    this.timeFormat = timeFormat;\n  }\n}\n","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport {PlayerUtils} from '../playerutils';\nimport { PlayerAPI, WarningEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * @category Configs\n */\nexport interface PlaybackToggleButtonConfig extends ToggleButtonConfig {\n  /**\n   * Specify whether the player should be set to enter fullscreen by clicking on the playback toggle button\n   * when initiating the initial playback.\n   * Default is false.\n   */\n  enterFullscreenOnInitialPlayback?: boolean;\n}\n\n/**\n * A button that toggles between playback and pause.\n *\n * @category Buttons\n */\nexport class PlaybackToggleButton extends ToggleButton<PlaybackToggleButtonConfig> {\n\n  private static readonly CLASS_STOPTOGGLE = 'stoptoggle';\n  protected isPlayInitiated: boolean;\n\n  constructor(config: PlaybackToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-playbacktogglebutton',\n      text: i18n.getLocalizer('play'),\n      onAriaLabel: i18n.getLocalizer('pause'),\n      offAriaLabel: i18n.getLocalizer('play'),\n    }, this.config);\n\n    this.isPlayInitiated = false;\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager, handleClickEvent: boolean = true): void {\n    super.configure(player, uimanager);\n\n    // Set enterFullscreenOnInitialPlayback if set in the uimanager config\n    if (typeof uimanager.getConfig().enterFullscreenOnInitialPlayback === 'boolean') {\n      this.config.enterFullscreenOnInitialPlayback = uimanager.getConfig().enterFullscreenOnInitialPlayback;\n    }\n\n    let isSeeking = false;\n    let firstPlay = true;\n\n    // Handler to update button state based on player state\n    let playbackStateHandler = () => {\n      // If the UI is currently seeking, playback is temporarily stopped but the buttons should\n      // not reflect that and stay as-is (e.g indicate playback while seeking).\n      if (isSeeking) {\n        return;\n      }\n\n      if (player.isPlaying() || this.isPlayInitiated) {\n        this.on();\n      } else {\n        this.off();\n      }\n    };\n\n    // Call handler upon these events\n    player.on(player.exports.PlayerEvent.Play, (e) => {\n      this.isPlayInitiated = true;\n      firstPlay = false;\n      playbackStateHandler();\n    });\n\n    player.on(player.exports.PlayerEvent.Paused, (e) => {\n      this.isPlayInitiated = false;\n      playbackStateHandler();\n    });\n\n    player.on(player.exports.PlayerEvent.Playing, (e) => {\n      this.isPlayInitiated = false;\n      playbackStateHandler();\n    });\n    // after unloading + loading a new source, the player might be in a different playing state (from playing into stopped)\n    player.on(player.exports.PlayerEvent.SourceLoaded, playbackStateHandler);\n    uimanager.getConfig().events.onUpdated.subscribe(playbackStateHandler);\n    player.on(player.exports.PlayerEvent.SourceUnloaded, playbackStateHandler);\n    // when playback finishes, player turns to paused mode\n    player.on(player.exports.PlayerEvent.PlaybackFinished, playbackStateHandler);\n    player.on(player.exports.PlayerEvent.CastStarted, playbackStateHandler);\n\n    // When a playback attempt is rejected with warning 5008, we switch the button state back to off\n    // This is required for blocked autoplay, because there is no Paused event in such case\n    player.on(player.exports.PlayerEvent.Warning, (event: WarningEvent) => {\n      if (event.code === player.exports.WarningCode.PLAYBACK_COULD_NOT_BE_STARTED) {\n        this.isPlayInitiated = false;\n        firstPlay = true;\n        this.off();\n      }\n    });\n\n    const updateLiveState = () => {\n      const showStopToggle = player.isLive() && !PlayerUtils.isTimeShiftAvailable(player);\n\n      if (showStopToggle) {\n        this.getDomElement().addClass(this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));\n      } else {\n        this.getDomElement().removeClass(this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));\n      }\n    };\n\n    // Detect absence of timeshifting on live streams and add tagging class to convert button icons to play/stop\n    let timeShiftDetector = new PlayerUtils.TimeShiftAvailabilityDetector(player);\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n\n    timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(() => updateLiveState());\n    liveStreamDetector.onLiveChanged.subscribe(() => updateLiveState());\n\n    timeShiftDetector.detect(); // Initial detection\n    liveStreamDetector.detect();\n\n    if (handleClickEvent) {\n      // Control player by button events\n      // When a button event triggers a player API call, events are fired which in turn call the event handler\n      // above that updated the button state.\n      this.onClick.subscribe(() => {\n        if (player.isPlaying() || this.isPlayInitiated) {\n          player.pause('ui');\n        } else {\n          player.play('ui');\n\n          if (firstPlay && this.config.enterFullscreenOnInitialPlayback) {\n            player.setViewMode(player.exports.ViewMode.Fullscreen);\n          }\n        }\n      });\n    }\n\n    // Track UI seeking status\n    uimanager.onSeek.subscribe(() => {\n      isSeeking = true;\n    });\n    uimanager.onSeeked.subscribe(() => {\n      isSeeking = false;\n    });\n\n    // Startup init\n    playbackStateHandler();\n  }\n}\n","import {Container, ContainerConfig} from './container';\nimport {HugePlaybackToggleButton} from './hugeplaybacktogglebutton';\n\n/**\n * @category Configs\n */\nexport interface PlaybackToggleOverlayConfig extends ContainerConfig {\n  /**\n   * Specify whether the player should be set to enter fullscreen by clicking on the playback toggle button\n   * when initiating the initial playback.\n   * Default is false.\n   */\n  enterFullscreenOnInitialPlayback?: boolean;\n}\n\n/**\n * Overlays the player and displays error messages.\n *\n * @category Components\n */\nexport class PlaybackToggleOverlay extends Container<PlaybackToggleOverlayConfig> {\n\n  private playbackToggleButton: HugePlaybackToggleButton;\n\n  constructor(config: PlaybackToggleOverlayConfig = {}) {\n    super(config);\n\n    this.playbackToggleButton = new HugePlaybackToggleButton({\n      enterFullscreenOnInitialPlayback: Boolean(config.enterFullscreenOnInitialPlayback),\n    });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-playbacktoggle-overlay',\n      components: [this.playbackToggleButton],\n    }, this.config);\n  }\n}","import { Button, ButtonConfig } from './button';\nimport { i18n } from '../localization/i18n';\nimport { PlayerAPI, SeekEvent, TimeShiftEvent } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerUtils } from '../playerutils';\n\n/**\n * @category Configs\n */\nexport interface QuickSeekButtonConfig extends ButtonConfig {\n  /**\n   * Specify how many seconds the player should seek forward/backwards in the stream.\n   * Negative values mean a backwards seek, positive values mean a forward seek.\n   * Default is -10.\n   */\n  seekSeconds?: number;\n}\n\n/**\n * @category Buttons\n */\nexport class QuickSeekButton extends Button<QuickSeekButtonConfig> {\n  private currentSeekTarget: number | null;\n  private player: PlayerAPI;\n\n  constructor(config: QuickSeekButtonConfig = {}) {\n    super(config);\n    this.currentSeekTarget = null;\n\n    this.config = this.mergeConfig(\n      config,\n      {\n        seekSeconds: -10,\n        cssClass: 'ui-quickseekbutton',\n      },\n      this.config,\n    );\n\n    const seekDirection = this.config.seekSeconds < 0 ? 'rewind' : 'forward';\n\n    this.config.text = this.config.text || i18n.getLocalizer(`quickseek.${seekDirection}`);\n    this.config.ariaLabel = this.config.ariaLabel || i18n.getLocalizer(`quickseek.${seekDirection}`);\n\n    this.getDomElement().data(this.prefixCss('seek-direction'), seekDirection);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    this.player = player;\n\n    let isLive: boolean;\n    let hasTimeShift: boolean;\n\n    const switchVisibility = (isLive: boolean, hasTimeShift: boolean) => {\n      if (isLive && !hasTimeShift) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    };\n\n    const timeShiftDetector = new PlayerUtils.TimeShiftAvailabilityDetector(player);\n    timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(\n      (sender, args: PlayerUtils.TimeShiftAvailabilityChangedArgs) => {\n        hasTimeShift = args.timeShiftAvailable;\n        switchVisibility(isLive, hasTimeShift);\n      },\n    );\n\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: PlayerUtils.LiveStreamDetectorEventArgs) => {\n      isLive = args.live;\n      switchVisibility(isLive, hasTimeShift);\n    });\n\n    // Initial detection\n    timeShiftDetector.detect();\n    liveStreamDetector.detect();\n\n    this.onClick.subscribe(() => {\n      if (isLive && !hasTimeShift) {\n        // If no DVR window is available, the button should be hidden anyway, so this is to be absolutely sure\n        return;\n      }\n\n      if (isLive && this.config.seekSeconds > 0 && player.getTimeShift() === 0) {\n        // Don't do anything if the player is already on the live edge\n        return;\n      }\n\n      const currentPosition =\n        this.currentSeekTarget !== null\n          ? this.currentSeekTarget\n          : isLive\n            ? player.getTimeShift()\n            : player.getCurrentTime();\n\n      const newSeekTime = currentPosition + this.config.seekSeconds;\n\n      if (isLive) {\n        const clampedValue = PlayerUtils.clampValueToRange(newSeekTime, player.getMaxTimeShift(), 0);\n        player.timeShift(clampedValue);\n      } else {\n        const clampedValue = PlayerUtils.clampValueToRange(newSeekTime, 0, player.getDuration());\n        player.seek(clampedValue);\n      }\n    });\n\n    this.player.on(this.player.exports.PlayerEvent.Seek, this.onSeek);\n    this.player.on(this.player.exports.PlayerEvent.Seeked, this.onSeekedOrTimeShifted);\n    this.player.on(this.player.exports.PlayerEvent.TimeShift, this.onTimeShift);\n    this.player.on(this.player.exports.PlayerEvent.TimeShifted, this.onSeekedOrTimeShifted);\n  }\n\n  private onSeek = (event: SeekEvent): void => {\n    this.currentSeekTarget = event.seekTarget;\n  };\n\n  private onSeekedOrTimeShifted = () => {\n    this.currentSeekTarget = null;\n  };\n\n  private onTimeShift = (event: TimeShiftEvent): void => {\n    this.currentSeekTarget = this.player.getTimeShift() + (event.target - event.position);\n  }\n\n  release(): void {\n    this.player.off(this.player.exports.PlayerEvent.Seek, this.onSeek);\n    this.player.off(this.player.exports.PlayerEvent.Seeked, this.onSeekedOrTimeShifted);\n    this.player.off(this.player.exports.PlayerEvent.TimeShift, this.onTimeShift);\n    this.player.off(this.player.exports.PlayerEvent.TimeShifted, this.onSeekedOrTimeShifted);\n    this.currentSeekTarget = null;\n    this.player = null;\n  }\n}\n","import {ContainerConfig, Container} from './container';\nimport {Component, ComponentConfig} from './component';\nimport {DOM} from '../dom';\nimport {UIInstanceManager} from '../uimanager';\nimport {StringUtils} from '../stringutils';\nimport {HugeReplayButton} from './hugereplaybutton';\nimport { UIRecommendationConfig } from '../uiconfig';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Overlays the player and displays recommended videos.\n *\n * @category Containers\n */\nexport class RecommendationOverlay extends Container<ContainerConfig> {\n\n  private replayButton: HugeReplayButton;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.replayButton = new HugeReplayButton();\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-recommendation-overlay',\n      hidden: true,\n      components: [this.replayButton],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let clearRecommendations = () => {\n      for (let component of this.getComponents().slice()) {\n        if (component instanceof RecommendationItem) {\n          this.removeComponent(component);\n        }\n      }\n      this.updateComponents();\n      this.getDomElement().removeClass(this.prefixCss('recommendations'));\n    };\n\n    let setupRecommendations = () => {\n      clearRecommendations();\n\n      const recommendations = uimanager.getConfig().recommendations;\n\n      if (recommendations.length > 0) {\n        let index = 1;\n        for (let item of recommendations) {\n          this.addComponent(new RecommendationItem({\n            itemConfig: item,\n            cssClasses: ['recommendation-item-' + (index++)],\n          }));\n        }\n        this.updateComponents(); // create container DOM elements\n\n        this.getDomElement().addClass(this.prefixCss('recommendations'));\n      }\n    };\n\n    uimanager.getConfig().events.onUpdated.subscribe(setupRecommendations);\n    // Remove recommendations and hide overlay when source is unloaded\n    player.on(player.exports.PlayerEvent.SourceUnloaded, () => {\n      clearRecommendations();\n      this.hide();\n    });\n    // Display recommendations when playback has finished\n    player.on(player.exports.PlayerEvent.PlaybackFinished, () => {\n      this.show();\n    });\n    // Hide recommendations when playback starts, e.g. a restart\n    player.on(player.exports.PlayerEvent.Play, () => {\n      this.hide();\n    });\n\n    // Init on startup\n    setupRecommendations();\n  }\n}\n\n/**\n * Configuration interface for the {@link RecommendationItem}\n */\ninterface RecommendationItemConfig extends ComponentConfig {\n  itemConfig: UIRecommendationConfig;\n}\n\n/**\n * An item of the {@link RecommendationOverlay}. Used only internally in {@link RecommendationOverlay}.\n */\nclass RecommendationItem extends Component<RecommendationItemConfig> {\n\n  constructor(config: RecommendationItemConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-recommendation-item',\n      itemConfig: null, // this must be passed in from outside\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    let config = this.config.itemConfig;\n\n    let itemElement = new DOM('a', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'href': config.url,\n    }, this).css({ 'background-image': `url(${config.thumbnail})` });\n\n    let bgElement = new DOM('div', {\n      'class': this.prefixCss('background'),\n    });\n    itemElement.append(bgElement);\n\n    let titleElement = new DOM('span', {\n      'class': this.prefixCss('title'),\n    }).append(new DOM('span', {\n      'class': this.prefixCss('innertitle'),\n    }).html(config.title));\n    itemElement.append(titleElement);\n\n    let timeElement = new DOM('span', {\n      'class': this.prefixCss('duration'),\n    }).append(new DOM('span', {\n      'class': this.prefixCss('innerduration'),\n    }).html(config.duration ? StringUtils.secondsToTime(config.duration) : ''));\n    itemElement.append(timeElement);\n\n    return itemElement;\n  }\n}","import { ButtonConfig, Button } from './button';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { PlayerUtils } from '../playerutils';\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\n\n/**\n * A button to play/replay a video.\n *\n * @category Buttons\n */\nexport class ReplayButton extends Button<ButtonConfig> {\n\n  constructor(config: ButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-replaybutton',\n      text: i18n.getLocalizer('replay'),\n      ariaLabel: i18n.getLocalizer('replay'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    if (player.isLive()) {\n      this.hide();\n    }\n\n    const liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: LiveStreamDetectorEventArgs) => {\n      if (args.live) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    this.onClick.subscribe(() => {\n      if (!player.hasEnded()) {\n        player.seek(0);\n        // Not calling `play` will keep the play/pause state as is\n      } else {\n        // If playback has already ended, calling `play` will automatically restart from the beginning\n        player.play('ui');\n      }\n    });\n  }\n}\n","import { ExtendedPlayerAPI, GroupPlaybackSuspension, GroupPlaybackSuspensionReason } from './../groupplaybackapi';\nimport { Component, ComponentConfig } from './component';\nimport { DOM } from '../dom';\nimport { Event, EventDispatcher, NoArgs } from '../eventdispatcher';\nimport { SeekBarLabel } from './seekbarlabel';\nimport { UIInstanceManager, SeekPreviewArgs } from '../uimanager';\nimport { Timeout } from '../timeout';\nimport { PlayerUtils } from '../playerutils';\nimport TimeShiftAvailabilityChangedArgs = PlayerUtils.TimeShiftAvailabilityChangedArgs;\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\nimport { TimelineMarker } from '../uiconfig';\nimport { PlayerAPI, PlayerEventBase } from 'bitmovin-player';\nimport { StringUtils } from '../stringutils';\nimport { SeekBarType, SeekBarController } from './seekbarcontroller';\nimport { i18n } from '../localization/i18n';\nimport { BrowserUtils } from '../browserutils';\nimport { TimelineMarkersHandler } from './timelinemarkershandler';\nimport { getMinBufferLevel } from './seekbarbufferlevel';\n\n/**\n * Configuration interface for the {@link SeekBar} component.\n *\n * @category Configs\n */\nexport interface SeekBarConfig extends ComponentConfig {\n  /**\n   * The label above the seek position.\n   */\n  label?: SeekBarLabel;\n  /**\n   * Bar will be vertical instead of horizontal if set to true.\n   */\n  vertical?: boolean;\n  /**\n   * The interval in milliseconds in which the playback position on the seek bar will be updated. The shorter the\n   * interval, the smoother it looks and the more resource intense it is. The update interval will be kept as steady\n   * as possible to avoid jitter.\n   * Set to -1 to disable smooth updating and update it on player TimeChanged events instead.\n   * Default: 50 (50ms = 20fps).\n   */\n  smoothPlaybackPositionUpdateIntervalMs?: number;\n\n  /**\n   * Used for seekBar control increments and decrements\n   */\n  keyStepIncrements?: { leftRight: number, upDown: number };\n\n  /**\n   * Used to enable/disable snapping to markers on the seek bar when seeking near them.\n   * Default: true\n   */\n  snappingEnabled?: boolean;\n\n  /**\n   * Defines tolerance for snapping to markers, if snapping to seek bar markers is enabled.\n   */\n  snappingRange?: number;\n\n  /**\n   * Used to enable/disable seek preview\n   */\n  enableSeekPreview?: boolean;\n}\n\n/**\n * Event argument interface for a seek preview event.\n */\nexport interface SeekPreviewEventArgs extends SeekPreviewArgs {\n  /**\n   * Tells if the seek preview event comes from a scrubbing.\n   */\n  scrubbing: boolean;\n}\n\n/**\n * @category Components\n */\nexport interface SeekBarMarker {\n  marker: TimelineMarker;\n  position: number;\n  duration?: number;\n  element?: DOM;\n}\n\n/**\n * A seek bar to seek within the player's media. It displays the current playback position, amount of buffed data, seek\n * target, and keeps status about an ongoing seek.\n *\n * The seek bar displays different 'bars':\n *  - the playback position, i.e. the position in the media at which the player current playback pointer is positioned\n *  - the buffer position, which usually is the playback position plus the time span that is already buffered ahead\n *  - the seek position, used to preview to where in the timeline a seek will jump to\n *\n *  @category Components\n */\nexport class SeekBar extends Component<SeekBarConfig> {\n\n  public static readonly SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED = -1;\n\n  /**\n   * The CSS class that is added to the DOM element while the seek bar is in 'seeking' state.\n   */\n  private static readonly CLASS_SEEKING = 'seeking';\n\n  private seekBar: DOM;\n  private seekBarPlaybackPosition: DOM;\n  private seekBarPlaybackPositionMarker: DOM;\n  private seekBarBufferPosition: DOM;\n  private seekBarSeekPosition: DOM;\n  private seekBarBackdrop: DOM;\n\n  private label: SeekBarLabel;\n\n  private seekBarMarkersContainer: DOM;\n  private timelineMarkersHandler: TimelineMarkersHandler;\n\n  private player: PlayerAPI;\n\n  protected seekBarType: SeekBarType;\n\n  protected isUiShown: boolean;\n\n  /**\n   * Buffer of the the current playback position. The position must be buffered in case the element\n   * needs to be refreshed with {@link #refreshPlaybackPosition}.\n   * @type {number}\n   */\n  private playbackPositionPercentage = 0;\n\n  private smoothPlaybackPositionUpdater: Timeout;\n  private pausedTimeshiftUpdater: Timeout;\n\n  private isUserSeeking = false;\n\n  private seekBarEvents = {\n    /**\n     * Fired when a scrubbing seek operation is started.\n     */\n    onSeek: new EventDispatcher<SeekBar, NoArgs>(),\n    /**\n     * Fired during a scrubbing seek to indicate that the seek preview (i.e. the video frame) should be updated.\n     */\n    onSeekPreview: new EventDispatcher<SeekBar, SeekPreviewEventArgs>(),\n    /**\n     * Fired when a scrubbing seek has finished or when a direct seek is issued.\n     */\n    onSeeked: new EventDispatcher<SeekBar, number>(),\n  };\n\n  constructor(config: SeekBarConfig = {}) {\n    super(config);\n\n    const keyStepIncrements = this.config.keyStepIncrements || {\n      leftRight: 1,\n      upDown: 5,\n    };\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-seekbar',\n      vertical: false,\n      smoothPlaybackPositionUpdateIntervalMs: 50,\n      keyStepIncrements,\n      ariaLabel: i18n.getLocalizer('seekBar'),\n      tabIndex: 0,\n      snappingRange: 1,\n      enableSeekPreview: true,\n      snappingEnabled: true,\n    }, this.config);\n\n    this.label = this.config.label;\n  }\n\n  initialize(): void {\n    super.initialize();\n\n    if (this.hasLabel()) {\n      this.getLabel().initialize();\n    }\n  }\n\n  protected setAriaSliderMinMax(min: string, max: string) {\n    this.getDomElement().attr('aria-valuemin', min);\n    this.getDomElement().attr('aria-valuemax', max);\n  }\n\n  private setAriaSliderValues() {\n    if (this.seekBarType === SeekBarType.Live) {\n      const timeshiftValue = Math.ceil(this.player.getTimeShift()).toString();\n      this.getDomElement().attr('aria-valuenow', timeshiftValue);\n      this.getDomElement().attr('aria-valuetext', `${i18n.performLocalization(i18n.getLocalizer('seekBar.timeshift'))} ${i18n.performLocalization(i18n.getLocalizer('seekBar.value'))}: ${timeshiftValue}`);\n    } else if (this.seekBarType === SeekBarType.Vod) {\n      const ariaValueText = `${StringUtils.secondsToText(this.player.getCurrentTime())} ${i18n.performLocalization(i18n.getLocalizer('seekBar.durationText'))} ${StringUtils.secondsToText(this.player.getDuration())}`;\n      this.getDomElement().attr('aria-valuenow', Math.floor(this.player.getCurrentTime()).toString());\n      this.getDomElement().attr('aria-valuetext', ariaValueText);\n    }\n  }\n\n  private getPlaybackPositionPercentage(): number {\n    if (this.player.isLive()) {\n      return 100 - (100 / this.player.getMaxTimeShift() * this.player.getTimeShift());\n    }\n\n    return 100 / this.player.getDuration() * this.getRelativeCurrentTime();\n  }\n\n  private updateBufferLevel(playbackPositionPercentage: number): void {\n\n    let bufferLoadedPercentageLevel: number;\n    if (this.player.isLive()) {\n      // Always show full buffer for live streams\n      bufferLoadedPercentageLevel = 100;\n    } else {\n      bufferLoadedPercentageLevel = playbackPositionPercentage + getMinBufferLevel(this.player);\n    }\n\n    this.setBufferPosition(bufferLoadedPercentageLevel);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager, configureSeek: boolean = true): void {\n    super.configure(player, uimanager);\n\n    this.player = player;\n\n    // Apply scaling transform to the backdrop bar to have all bars rendered similarly\n    // (the call must be up here to be executed for the volume slider as well)\n    this.setPosition(this.seekBarBackdrop, 100);\n\n    // Add seekbar controls to the seekbar\n    const seekBarController = new SeekBarController(this.config.keyStepIncrements, player, uimanager.getConfig().volumeController);\n\n    seekBarController.setSeekBarControls(this.getDomElement(), () => this.seekBarType);\n\n    // The configureSeek flag can be used by subclasses to disable configuration as seek bar. E.g. the volume\n    // slider is reusing this component but adds its own functionality, and does not need the seek functionality.\n    // This is actually a hack, the proper solution would be for both seek bar and volume sliders to extend\n    // a common base slider component and implement their functionality there.\n    if (!configureSeek) {\n      this.seekBarType = SeekBarType.Volume;\n\n      return;\n    }\n\n    uimanager.onControlsShow.subscribe(() => {\n      this.isUiShown = true;\n    });\n\n    uimanager.onControlsHide.subscribe(() => {\n      this.isUiShown = false;\n    });\n\n    let isPlaying = false;\n    let scrubbing = false;\n    let isPlayerSeeking = false;\n    let suspension: GroupPlaybackSuspension | undefined;\n\n    // Update playback and buffer positions\n    let playbackPositionHandler = (event: PlayerEventBase = null, forceUpdate: boolean = false) => {\n      if (this.isUserSeeking) {\n        // We caught a seek preview seek, do not update the seekbar\n        return;\n      }\n\n      let playbackPositionPercentage = this.getPlaybackPositionPercentage();\n\n      this.updateBufferLevel(playbackPositionPercentage);\n\n      // The segment request finished is used to help the playback position move, when the smooth playback position is not enabled.\n      // At the same time when the user is scrubbing, we also move the position of the seekbar to display a preview during scrubbing.\n      // When the user is scrubbing we do not record this as a user seek operation, as the user has yet to finish their seek,\n      // but we should not move the playback position to not create a jumping behaviour.\n      if (scrubbing && event && event.type === player.exports.PlayerEvent.SegmentRequestFinished && playbackPositionPercentage !== this.playbackPositionPercentage) {\n        playbackPositionPercentage = this.playbackPositionPercentage;\n      }\n\n      if (player.isLive()) {\n        if (player.getMaxTimeShift() === 0) {\n          // This case must be explicitly handled to avoid division by zero\n          this.setPlaybackPosition(100);\n        } else {\n          if (!this.isSeeking()) {\n            this.setPlaybackPosition(playbackPositionPercentage);\n          }\n\n          this.setAriaSliderMinMax(player.getMaxTimeShift().toString(), '0');\n        }\n      } else {\n        // Update playback position only in paused state or in the initial startup state where player is neither\n        // paused nor playing. Playback updates are handled in the Timeout below.\n        const isInInitialStartupState = this.config.smoothPlaybackPositionUpdateIntervalMs === SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED\n            || forceUpdate || player.isPaused();\n        const isNeitherPausedNorPlaying = player.isPaused() === player.isPlaying();\n\n        if ((isInInitialStartupState || isNeitherPausedNorPlaying) && !this.isSeeking()) {\n          this.setPlaybackPosition(playbackPositionPercentage);\n        }\n\n        this.setAriaSliderMinMax('0', player.getDuration().toString());\n      }\n\n      if (this.isUiShown) {\n        this.setAriaSliderValues();\n      }\n    };\n\n    // Update seekbar upon these events\n    // init playback position when the player is ready\n    player.on(player.exports.PlayerEvent.Ready, playbackPositionHandler);\n    // update playback position when it changes\n    player.on(player.exports.PlayerEvent.TimeChanged, playbackPositionHandler);\n    // update bufferlevel when buffering is complete\n    player.on(player.exports.PlayerEvent.StallEnded, playbackPositionHandler);\n    // update playback position when a timeshift has finished\n    player.on(player.exports.PlayerEvent.TimeShifted, playbackPositionHandler);\n    // update bufferlevel when a segment has been downloaded\n    player.on(player.exports.PlayerEvent.SegmentRequestFinished, playbackPositionHandler);\n\n    this.configureLivePausedTimeshiftUpdater(player, uimanager, playbackPositionHandler);\n\n    // Seek handling\n    let onPlayerSeek = () => {\n      isPlayerSeeking = true;\n      this.setSeeking(true);\n      scrubbing = false;\n    };\n\n    let onPlayerSeeked = (event: PlayerEventBase = null, forceUpdate: boolean = false ) => {\n      isPlayerSeeking = false;\n      this.setSeeking(false);\n\n      // update playback position when a seek has finished\n      playbackPositionHandler(event, forceUpdate);\n    };\n\n    let restorePlayingState = function () {\n      // Continue playback after seek if player was playing when seek started\n      if (isPlaying) {\n        // use the same issuer here as in the pause on seek\n        player.play('ui-seek');\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.Seek, onPlayerSeek);\n    player.on(player.exports.PlayerEvent.Seeked, onPlayerSeeked);\n    player.on(player.exports.PlayerEvent.TimeShift, onPlayerSeek);\n    player.on(player.exports.PlayerEvent.TimeShifted, onPlayerSeeked);\n\n    let isGroupPlaybackAPIAvailable = (player: PlayerAPI): player is ExtendedPlayerAPI => {\n      return !!(player as ExtendedPlayerAPI).groupPlayback;\n    };\n\n    this.onSeek.subscribe((sender) => {\n      // track seeking status so we can catch events from seek preview seeks\n      this.isUserSeeking = true;\n      // Notify UI manager of started seek\n      uimanager.onSeek.dispatch(sender);\n\n      if (isGroupPlaybackAPIAvailable(player) && player.groupPlayback.hasJoined() && !suspension) {\n        suspension = player.groupPlayback.beginSuspension(GroupPlaybackSuspensionReason.UserIsScrubbing);\n      }\n\n      // Save current playback state before performing the seek\n      if (!isPlayerSeeking) {\n        isPlaying = player.isPlaying();\n\n        // Pause playback while seeking\n        if (isPlaying) {\n          // use a different issuer here, as play/pause on seek is not \"really\" triggerd by the user\n          player.pause('ui-seek');\n        }\n      }\n    });\n\n    this.onSeekPreview.subscribe((sender: SeekBar, args: SeekPreviewEventArgs) => {\n      // Notify UI manager of seek preview\n      uimanager.onSeekPreview.dispatch(sender, args);\n      scrubbing = args.scrubbing;\n    });\n\n    // Set enableSeekPreview if set in the uimanager config\n    if (typeof uimanager.getConfig().enableSeekPreview === 'boolean') {\n      this.config.enableSeekPreview = uimanager.getConfig().enableSeekPreview;\n    }\n\n    // Rate-limited scrubbing seek\n    if (this.config.enableSeekPreview) {\n      this.onSeekPreview.subscribeRateLimited(this.seekWhileScrubbing, 200);\n    }\n\n    this.onSeeked.subscribe((sender, percentage) => {\n      this.isUserSeeking = false;\n\n      // Do the seek\n      this.seek(percentage);\n\n      // Notify UI manager of finished seek\n      uimanager.onSeeked.dispatch(sender);\n\n      // Continue playback after seek if player was playing when seek started\n      restorePlayingState();\n\n      if (isGroupPlaybackAPIAvailable(player) && player.groupPlayback.hasJoined() && suspension) {\n        const proposedPlaybackTime = this.getTargetSeekPosition(percentage);\n        player.groupPlayback.endSuspension(suspension, { proposedPlaybackTime });\n        suspension = undefined;\n      }\n    });\n\n    if (this.hasLabel()) {\n      // Configure a seekbar label that is internal to the seekbar)\n      this.getLabel().configure(player, uimanager);\n    }\n\n    // Hide seekbar for live sources without timeshift\n    let isLive = false;\n    let hasTimeShift = false;\n    let switchVisibility = (isLive: boolean, hasTimeShift: boolean) => {\n      if (isLive && !hasTimeShift) {\n        this.hide();\n      } else {\n        this.show();\n      }\n      playbackPositionHandler(null, true);\n      this.refreshPlaybackPosition();\n    };\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: LiveStreamDetectorEventArgs) => {\n      isLive = args.live;\n      if (isLive && this.smoothPlaybackPositionUpdater != null) {\n        this.smoothPlaybackPositionUpdater.clear();\n        this.seekBarType = SeekBarType.Live;\n      } else {\n        this.seekBarType = SeekBarType.Vod;\n      }\n      switchVisibility(isLive, hasTimeShift);\n    });\n    let timeShiftDetector = new PlayerUtils.TimeShiftAvailabilityDetector(player);\n    timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe((sender, args: TimeShiftAvailabilityChangedArgs) => {\n      hasTimeShift = args.timeShiftAvailable;\n      switchVisibility(isLive, hasTimeShift);\n    });\n    // Initial detection\n    liveStreamDetector.detect();\n    timeShiftDetector.detect();\n\n    // Refresh the playback position when the player resized or the UI is configured. The playback position marker\n    // is positioned absolutely and must therefore be updated when the size of the seekbar changes.\n    player.on(player.exports.PlayerEvent.PlayerResized, () => {\n      this.refreshPlaybackPosition();\n    });\n    // Additionally, when this code is called, the seekbar is not part of the UI yet and therefore does not have a size,\n    // resulting in a wrong initial position of the marker. Refreshing it once the UI is configured solved this issue.\n    uimanager.onConfigured.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n    // It can also happen when a new source is loaded\n    player.on(player.exports.PlayerEvent.SourceLoaded, () => {\n      this.refreshPlaybackPosition();\n    });\n    // Add markers when a source is loaded or update when a marker is added or removed\n    uimanager.getConfig().events.onUpdated.subscribe(() => {\n      playbackPositionHandler();\n    });\n\n    // Set the snappingRange if set in the uimanager config\n    if (typeof uimanager.getConfig().seekbarSnappingRange === 'number') {\n      this.config.snappingRange = uimanager.getConfig().seekbarSnappingRange;\n    }\n\n    if (typeof uimanager.getConfig().seekbarSnappingEnabled === 'boolean') {\n      this.config.snappingEnabled = uimanager.getConfig().seekbarSnappingEnabled;\n    }\n\n    // Initialize seekbar\n    playbackPositionHandler(); // Set the playback position\n    this.setBufferPosition(0);\n    this.setSeekPosition(0);\n    if (this.config.smoothPlaybackPositionUpdateIntervalMs !== SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED) {\n      this.configureSmoothPlaybackPositionUpdater(player, uimanager);\n    }\n\n    // Initialize markers\n    this.initializeTimelineMarkers(player, uimanager);\n  }\n\n  private initializeTimelineMarkers(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    const timelineMarkerConfig = {\n      cssPrefix: this.config.cssPrefix,\n      snappingRange: this.config.snappingRange,\n    };\n    this.timelineMarkersHandler = new TimelineMarkersHandler(timelineMarkerConfig, () => this.seekBar.width(), this.seekBarMarkersContainer);\n    this.timelineMarkersHandler.initialize(player, uimanager);\n  }\n\n  private seekWhileScrubbing = (sender: SeekBar, args: SeekPreviewEventArgs) => {\n    if (args.scrubbing) {\n      this.seek(args.position);\n    }\n  };\n\n  private getTargetSeekPosition = (percentage: number) => {\n    let target: number;\n    if (this.player.isLive()) {\n      const maxTimeShift = this.player.getMaxTimeShift();\n      target = maxTimeShift - (maxTimeShift * (percentage / 100));\n    } else {\n      const seekableRangeStart = PlayerUtils.getSeekableRangeStart(this.player, 0);\n      const relativeSeekTarget = this.player.getDuration() * (percentage / 100);\n      target = relativeSeekTarget + seekableRangeStart;\n    }\n\n    return target;\n  }\n\n  private seek = (percentage: number) => {\n    const targetPlaybackPosition = this.getTargetSeekPosition(percentage);\n    if (this.player.isLive()) {\n      this.player.timeShift(targetPlaybackPosition, 'ui');\n    } else {\n      this.player.seek(targetPlaybackPosition, 'ui');\n    }\n  };\n\n  /**\n   * Update seekbar while a live stream with DVR window is paused.\n   * The playback position stays still and the position indicator visually moves towards the back.\n   */\n  private configureLivePausedTimeshiftUpdater(\n    player: PlayerAPI,\n    uimanager: UIInstanceManager,\n    playbackPositionHandler: () => void,\n  ): void {\n    // Regularly update the playback position while the timeout is active\n    this.pausedTimeshiftUpdater = new Timeout(1000, playbackPositionHandler, true);\n\n    // Start updater when a live stream with timeshift window is paused\n    player.on(player.exports.PlayerEvent.Paused, () => {\n      if (player.isLive() && player.getMaxTimeShift() < 0) {\n        this.pausedTimeshiftUpdater.start();\n      }\n    });\n\n    // Stop updater when playback continues (no matter if the updater was started before)\n    player.on(player.exports.PlayerEvent.Play, () => this.pausedTimeshiftUpdater.clear());\n  }\n\n  private configureSmoothPlaybackPositionUpdater(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    /*\n     * Playback position update\n     *\n     * We do not update the position directly from the TimeChanged event, because it arrives very jittery and\n     * results in a jittery position indicator since the CSS transition time is statically set.\n     * To work around this issue, we maintain a local playback position that is updated in a stable regular interval\n     * and kept in sync with the player.\n     */\n    let currentTimeSeekBar = 0;\n    let currentTimePlayer = 0;\n    let updateIntervalMs = 50;\n    let currentTimeUpdateDeltaSecs = updateIntervalMs / 1000;\n\n    this.smoothPlaybackPositionUpdater = new Timeout(updateIntervalMs, () => {\n      if (this.isSeeking()) {\n        return;\n      }\n\n      currentTimeSeekBar += currentTimeUpdateDeltaSecs;\n\n      try {\n        currentTimePlayer = this.getRelativeCurrentTime();\n      } catch (error) {\n        // Detect if the player has been destroyed and stop updating if so\n        if (error instanceof player.exports.PlayerAPINotAvailableError) {\n          this.smoothPlaybackPositionUpdater.clear();\n        }\n\n        // If the current time cannot be read it makes no sense to continue\n        return;\n      }\n\n      // Sync currentTime of seekbar to player\n      let currentTimeDelta = currentTimeSeekBar - currentTimePlayer;\n      // If the delta is larger that 2 secs, directly jump the seekbar to the\n      // player time instead of smoothly fast forwarding/rewinding.\n      if (Math.abs(currentTimeDelta) > 2) {\n        currentTimeSeekBar = currentTimePlayer;\n      }\n      // If currentTimeDelta is negative and below the adjustment threshold,\n      // the player is ahead of the seekbar and we 'fast forward' the seekbar\n      else if (currentTimeDelta <= -currentTimeUpdateDeltaSecs) {\n        currentTimeSeekBar += currentTimeUpdateDeltaSecs;\n      }\n      // If currentTimeDelta is positive and above the adjustment threshold,\n      // the player is behind the seekbar and we 'rewind' the seekbar\n      else if (currentTimeDelta >= currentTimeUpdateDeltaSecs) {\n        currentTimeSeekBar -= currentTimeUpdateDeltaSecs;\n      }\n\n      let playbackPositionPercentage = 100 / player.getDuration() * currentTimeSeekBar;\n      this.setPlaybackPosition(playbackPositionPercentage);\n    }, true);\n\n    let startSmoothPlaybackPositionUpdater = () => {\n      if (!player.isLive()) {\n        currentTimeSeekBar = this.getRelativeCurrentTime();\n        this.smoothPlaybackPositionUpdater.start();\n      }\n    };\n\n    let stopSmoothPlaybackPositionUpdater = () => {\n      this.smoothPlaybackPositionUpdater.clear();\n    };\n\n    player.on(player.exports.PlayerEvent.Play, startSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.Playing, startSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.Paused, stopSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.PlaybackFinished, stopSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.Seeked, () => {\n      currentTimeSeekBar = this.getRelativeCurrentTime();\n    });\n    player.on(player.exports.PlayerEvent.SourceUnloaded, stopSmoothPlaybackPositionUpdater);\n\n    if (player.isPlaying()) {\n      startSmoothPlaybackPositionUpdater();\n    }\n  }\n\n  private getRelativeCurrentTime(): number {\n    return PlayerUtils.getCurrentTimeRelativeToSeekableRange(this.player);\n  }\n\n  release(): void {\n    super.release();\n\n    if (this.smoothPlaybackPositionUpdater) { // object must not necessarily exist, e.g. in volume slider subclass\n      this.smoothPlaybackPositionUpdater.clear();\n    }\n\n    if (this.pausedTimeshiftUpdater) {\n      this.pausedTimeshiftUpdater.clear();\n    }\n\n    if (this.config.enableSeekPreview) {\n      this.onSeekPreview.unsubscribe(this.seekWhileScrubbing);\n    }\n  }\n\n  protected toDomElement(): DOM {\n    if (this.config.vertical) {\n      this.config.cssClasses.push('vertical');\n    }\n\n    let seekBarContainer = new DOM('div', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'role': 'slider',\n      'aria-label': i18n.performLocalization(this.config.ariaLabel),\n      'tabindex': this.config.tabIndex.toString(),\n    }, this);\n\n    let seekBar = new DOM('div', {\n      'class': this.prefixCss('seekbar'),\n    });\n    this.seekBar = seekBar;\n\n    // Indicator that shows the buffer fill level\n    let seekBarBufferLevel = new DOM('div', {\n      'class': this.prefixCss('seekbar-bufferlevel'),\n    });\n    this.seekBarBufferPosition = seekBarBufferLevel;\n\n    // Indicator that shows the current playback position\n    let seekBarPlaybackPosition = new DOM('div', {\n      'class': this.prefixCss('seekbar-playbackposition'),\n    });\n    this.seekBarPlaybackPosition = seekBarPlaybackPosition;\n\n    // A marker of the current playback position, e.g. a dot or line\n    let seekBarPlaybackPositionMarker = new DOM('div', {\n      'class': this.prefixCss('seekbar-playbackposition-marker'),\n    });\n    this.seekBarPlaybackPositionMarker = seekBarPlaybackPositionMarker;\n\n    // Indicator that show where a seek will go to\n    let seekBarSeekPosition = new DOM('div', {\n      'class': this.prefixCss('seekbar-seekposition'),\n    });\n    this.seekBarSeekPosition = seekBarSeekPosition;\n\n    // Indicator that shows the full seekbar\n    let seekBarBackdrop = new DOM('div', {\n      'class': this.prefixCss('seekbar-backdrop'),\n    });\n    this.seekBarBackdrop = seekBarBackdrop;\n\n    let seekBarChapterMarkersContainer = new DOM('div', {\n      'class': this.prefixCss('seekbar-markers'),\n    });\n    this.seekBarMarkersContainer = seekBarChapterMarkersContainer;\n\n    seekBar.append(this.seekBarBackdrop, this.seekBarBufferPosition, this.seekBarSeekPosition,\n      this.seekBarPlaybackPosition, this.seekBarMarkersContainer, this.seekBarPlaybackPositionMarker);\n\n    let seeking = false;\n\n    // Define handler functions so we can attach/remove them later\n    let mouseTouchMoveHandler = (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n      // Avoid propagation to VR handler\n      if (this.player.vr != null) {\n        e.stopPropagation();\n      }\n\n      let targetPercentage = 100 * this.getOffset(e);\n      this.setSeekPosition(targetPercentage);\n      this.setPlaybackPosition(targetPercentage);\n      this.onSeekPreviewEvent(targetPercentage, true);\n    };\n\n    let mouseTouchUpHandler = (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n\n      // Remove handlers, seek operation is finished\n      new DOM(document).off('touchmove mousemove', mouseTouchMoveHandler);\n      new DOM(document).off('touchend mouseup', mouseTouchUpHandler);\n\n      let targetPercentage = 100 * this.getOffset(e);\n\n      if (this.config.snappingEnabled) {\n        const matchingMarker = this.timelineMarkersHandler?.getMarkerAtPosition(targetPercentage);\n        targetPercentage = matchingMarker ? matchingMarker.position : targetPercentage;\n      }\n\n      this.setSeeking(false);\n      seeking = false;\n\n      // Fire seeked event\n      this.onSeekedEvent(targetPercentage);\n    };\n\n    // A seek always start with a touchstart or mousedown directly on the seekbar.\n    // To track a mouse seek also outside the seekbar (for touch events this works automatically),\n    // so the user does not need to take care that the mouse always stays on the seekbar, we attach the mousemove\n    // and mouseup handlers to the whole document. A seek is triggered when the user lifts the mouse key.\n    // A seek mouse gesture is thus basically a click with a long time frame between down and up events.\n    seekBar.on('touchstart mousedown', (e: MouseEvent | TouchEvent) => {\n      let isTouchEvent = BrowserUtils.isTouchSupported && this.isTouchEvent(e);\n\n      // Prevent selection of DOM elements (also prevents mousedown if current event is touchstart)\n      e.preventDefault();\n      // Avoid propagation to VR handler\n      if (this.player.vr != null) {\n        e.stopPropagation();\n      }\n\n      this.setSeeking(true); // Set seeking class on DOM element\n      seeking = true; // Set seek tracking flag\n\n      // Fire seeked event\n      this.onSeekEvent();\n\n      // Add handler to track the seek operation over the whole document\n      new DOM(document).on(isTouchEvent ? 'touchmove' : 'mousemove', mouseTouchMoveHandler);\n      new DOM(document).on(isTouchEvent ? 'touchend' : 'mouseup', mouseTouchUpHandler);\n    });\n\n    // Display seek target indicator when mouse hovers or finger slides over seekbar\n    seekBar.on('touchmove mousemove', (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n\n      if (seeking) {\n        mouseTouchMoveHandler(e);\n      }\n\n      let position = 100 * this.getOffset(e);\n      this.setSeekPosition(position);\n\n      this.onSeekPreviewEvent(position, false);\n\n      if (this.hasLabel() && this.getLabel().isHidden()) {\n        this.getLabel().show();\n      }\n    });\n\n    // Hide seek target indicator when mouse or finger leaves seekbar\n    seekBar.on('touchend mouseleave', (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n\n      this.setSeekPosition(0);\n\n      if (this.hasLabel()) {\n        this.getLabel().hide();\n      }\n    });\n\n    seekBarContainer.append(seekBar);\n\n    if (this.label) {\n      seekBarContainer.append(this.label.getDomElement());\n    }\n\n    return seekBarContainer;\n  }\n\n  /**\n   * Gets the horizontal offset of a mouse/touch event point from the left edge of the seek bar.\n   * @param eventPageX the pageX coordinate of an event to calculate the offset from\n   * @returns {number} a number in the range of [0, 1], where 0 is the left edge and 1 is the right edge\n   */\n  private getHorizontalOffset(eventPageX: number): number {\n    let elementOffsetPx = this.seekBar.offset().left;\n    let widthPx = this.seekBar.width();\n    let offsetPx = eventPageX - elementOffsetPx;\n    let offset = 1 / widthPx * offsetPx;\n\n    return this.sanitizeOffset(offset);\n  }\n\n  /**\n   * Gets the vertical offset of a mouse/touch event point from the bottom edge of the seek bar.\n   * @param eventPageY the pageX coordinate of an event to calculate the offset from\n   * @returns {number} a number in the range of [0, 1], where 0 is the bottom edge and 1 is the top edge\n   */\n  private getVerticalOffset(eventPageY: number): number {\n    let elementOffsetPx = this.seekBar.offset().top;\n    let widthPx = this.seekBar.height();\n    let offsetPx = eventPageY - elementOffsetPx;\n    let offset = 1 / widthPx * offsetPx;\n\n    return 1 - this.sanitizeOffset(offset);\n  }\n\n  /**\n   * Gets the mouse or touch event offset for the current configuration (horizontal or vertical).\n   * @param e the event to calculate the offset from\n   * @returns {number} a number in the range of [0, 1]\n   * @see #getHorizontalOffset\n   * @see #getVerticalOffset\n   */\n  private getOffset(e: MouseEvent | TouchEvent): number {\n    if (BrowserUtils.isTouchSupported && this.isTouchEvent(e)) {\n      if (this.config.vertical) {\n        return this.getVerticalOffset(e.type === 'touchend' ? e.changedTouches[0].pageY : e.touches[0].pageY);\n      } else {\n        return this.getHorizontalOffset(e.type === 'touchend' ? e.changedTouches[0].pageX : e.touches[0].pageX);\n      }\n    }\n    else if (e instanceof MouseEvent) {\n      if (this.config.vertical) {\n        return this.getVerticalOffset(e.pageY);\n      } else {\n        return this.getHorizontalOffset(e.pageX);\n      }\n    }\n    else {\n      if (console) {\n        console.warn('invalid event');\n      }\n      return 0;\n    }\n  }\n\n  /**\n   * Sanitizes the mouse offset to the range of [0, 1].\n   *\n   * When tracking the mouse outside the seek bar, the offset can be outside the desired range and this method\n   * limits it to the desired range. E.g. a mouse event left of the left edge of a seek bar yields an offset below\n   * zero, but to display the seek target on the seek bar, we need to limit it to zero.\n   *\n   * @param offset the offset to sanitize\n   * @returns {number} the sanitized offset.\n   */\n  private sanitizeOffset(offset: number) {\n    // Since we track mouse moves over the whole document, the target can be outside the seek range,\n    // and we need to limit it to the [0, 1] range.\n    if (offset < 0) {\n      offset = 0;\n    } else if (offset > 1) {\n      offset = 1;\n    }\n\n    return offset;\n  }\n\n  /**\n   * Sets the position of the playback position indicator.\n   * @param percent a number between 0 and 100 as returned by the player\n   */\n  setPlaybackPosition(percent: number) {\n    this.playbackPositionPercentage = percent;\n\n    // Set position of the bar\n    this.setPosition(this.seekBarPlaybackPosition, percent);\n\n    // Set position of the marker\n    let totalSize = (this.config.vertical ? (this.seekBar.height() - this.seekBarPlaybackPositionMarker.height()) : this.seekBar.width());\n    let px = (totalSize) / 100 * percent;\n    if (this.config.vertical) {\n      px = this.seekBar.height() - px - this.seekBarPlaybackPositionMarker.height();\n    }\n\n    let style = this.config.vertical ?\n      // -ms-transform required for IE9\n      // -webkit-transform required for Android 4.4 WebView\n      {\n        'transform': 'translateY(' + px + 'px)',\n        '-ms-transform': 'translateY(' + px + 'px)',\n        '-webkit-transform': 'translateY(' + px + 'px)',\n      } :\n      {\n        'transform': 'translateX(' + px + 'px)',\n        '-ms-transform': 'translateX(' + px + 'px)',\n        '-webkit-transform': 'translateX(' + px + 'px)',\n      };\n    this.seekBarPlaybackPositionMarker.css(style);\n  }\n\n  /**\n   * Refreshes the playback position. Can be used by subclasses to refresh the position when\n   * the size of the component changes.\n   */\n  protected refreshPlaybackPosition() {\n    this.setPlaybackPosition(this.playbackPositionPercentage);\n  }\n\n  /**\n   * Sets the position until which media is buffered.\n   * @param percent a number between 0 and 100\n   */\n  setBufferPosition(percent: number) {\n    this.setPosition(this.seekBarBufferPosition, percent);\n  }\n\n  /**\n   * Sets the position where a seek, if executed, would jump to.\n   * @param percent a number between 0 and 100\n   */\n  setSeekPosition(percent: number) {\n    this.setPosition(this.seekBarSeekPosition, percent);\n  }\n\n  /**\n   * Set the actual position (width or height) of a DOM element that represent a bar in the seek bar.\n   * @param element the element to set the position for\n   * @param percent a number between 0 and 100\n   */\n  private setPosition(element: DOM, percent: number) {\n    let scale = percent / 100;\n\n    // When the scale is exactly 1 or very near 1 (and the browser internally rounds it to 1), browsers seem to render\n    // the elements differently and the height gets slightly off, leading to mismatching heights when e.g. the buffer\n    // level bar has a width of 1 and the playback position bar has a width < 1. A jittering buffer level around 1\n    // leads to an even worse flickering effect.\n    // Various changes in CSS styling and DOM hierarchy did not solve the issue so the workaround is to avoid a scale\n    // of exactly 1.\n    if (scale >= 0.99999 && scale <= 1.00001) {\n      scale = 0.99999;\n    }\n\n    let style = this.config.vertical ?\n      // -ms-transform required for IE9\n      // -webkit-transform required for Android 4.4 WebView\n      {\n        'transform': 'scaleY(' + scale + ')',\n        '-ms-transform': 'scaleY(' + scale + ')',\n        '-webkit-transform': 'scaleY(' + scale + ')',\n      } :\n      {\n        'transform': 'scaleX(' + scale + ')',\n        '-ms-transform': 'scaleX(' + scale + ')',\n        '-webkit-transform': 'scaleX(' + scale + ')',\n      };\n    element.css(style);\n  }\n\n  /**\n   * Puts the seek bar into or out of seeking state by adding/removing a class to the DOM element. This can be used\n   * to adjust the styling while seeking.\n   *\n   * @param seeking should be true when entering seek state, false when exiting the seek state\n   */\n  setSeeking(seeking: boolean) {\n    if (seeking) {\n      this.getDomElement().addClass(this.prefixCss(SeekBar.CLASS_SEEKING));\n    } else {\n      this.getDomElement().removeClass(this.prefixCss(SeekBar.CLASS_SEEKING));\n    }\n  }\n\n  /**\n   * Checks if the seek bar is currently in the seek state.\n   * @returns {boolean} true if in seek state, else false\n   */\n  isSeeking(): boolean {\n    return this.getDomElement().hasClass(this.prefixCss(SeekBar.CLASS_SEEKING));\n  }\n\n  /**\n   * Checks if the seek bar has a {@link SeekBarLabel}.\n   * @returns {boolean} true if the seek bar has a label, else false\n   */\n  hasLabel(): boolean {\n    return this.label != null;\n  }\n\n  /**\n   * Gets the label of this seek bar.\n   * @returns {SeekBarLabel} the label if this seek bar has a label, else null\n   */\n  getLabel(): SeekBarLabel | null {\n    return this.label;\n  }\n\n  protected onSeekEvent() {\n    this.seekBarEvents.onSeek.dispatch(this);\n  }\n\n  protected onSeekPreviewEvent(percentage: number, scrubbing: boolean) {\n    let snappedMarker = this.timelineMarkersHandler && this.timelineMarkersHandler.getMarkerAtPosition(percentage);\n\n    let seekPositionPercentage = percentage;\n\n    if (snappedMarker) {\n      if (snappedMarker.duration > 0) {\n        if (percentage < snappedMarker.position) {\n          // Snap the position to the start of the interval if the seek is within the left snap margin\n          // We know that we are within a snap margin when we are outside the marker interval but still\n          // have a snappedMarker\n          seekPositionPercentage = snappedMarker.position;\n        } else if (percentage > snappedMarker.position + snappedMarker.duration) {\n          // Snap the position to the end of the interval if the seek is within the right snap margin\n          seekPositionPercentage = snappedMarker.position + snappedMarker.duration;\n        }\n      } else {\n        // Position markers always snap to their marker position\n        seekPositionPercentage = snappedMarker.position;\n      }\n    }\n\n    if (this.label) {\n      this.label.getDomElement().css({\n        'left': seekPositionPercentage + '%',\n      });\n    }\n\n    this.seekBarEvents.onSeekPreview.dispatch(this, {\n      scrubbing: scrubbing,\n      position: seekPositionPercentage,\n      marker: snappedMarker,\n    });\n  }\n\n  protected onSeekedEvent(percentage: number) {\n    this.seekBarEvents.onSeeked.dispatch(this, percentage);\n  }\n\n  /**\n   * Gets the event that is fired when a scrubbing seek operation is started.\n   * @returns {Event<SeekBar, NoArgs>}\n   */\n  get onSeek(): Event<SeekBar, NoArgs> {\n    return this.seekBarEvents.onSeek.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired during a scrubbing seek (to indicate that the seek preview, i.e. the video frame,\n   * should be updated), or during a normal seek preview when the seek bar is hovered (and the seek target,\n   * i.e. the seek bar label, should be updated).\n   * @returns {Event<SeekBar, SeekPreviewEventArgs>}\n   */\n  get onSeekPreview(): Event<SeekBar, SeekPreviewEventArgs> {\n    return this.seekBarEvents.onSeekPreview.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when a scrubbing seek has finished or when a direct seek is issued.\n   * @returns {Event<SeekBar, number>}\n   */\n  get onSeeked(): Event<SeekBar, number> {\n    return this.seekBarEvents.onSeeked.getEvent();\n  }\n\n\n  protected onShowEvent(): void {\n    super.onShowEvent();\n\n    // Refresh the position of the playback position when the seek bar becomes visible. To correctly set the position,\n    // the DOM element must be fully initialized an have its size calculated, because the position is set as an absolute\n    // value calculated from the size. This required size is not known when it is hidden.\n    // For such cases, we refresh the position here in onShow because here it is guaranteed that the component knows\n    // its size and can set the position correctly.\n    this.refreshPlaybackPosition();\n  }\n\n /**\n   * Checks if TouchEvent is supported.\n   * @returns {boolean} true if TouchEvent not undefined, else false\n   */\n  isTouchEvent(e: UIEvent): e is TouchEvent {\n    return window.TouchEvent && e instanceof TouchEvent;\n  }\n}\n","import {PlayerAPI} from 'bitmovin-player';\n\nexport function getMinBufferLevel(player: PlayerAPI): number {\n\n    const playerDuration = player.getDuration();\n\n    const videoBufferLength = player.getVideoBufferLength();\n    const audioBufferLength = player.getAudioBufferLength();\n    // Calculate the buffer length which is the smaller length of the audio and video buffers. If one of these\n    // buffers is not available, we set it's value to MAX_VALUE to make sure that the other real value is taken\n    // as the buffer length.\n    let bufferLength = Math.min(\n        videoBufferLength != null ? videoBufferLength : Number.MAX_VALUE,\n        audioBufferLength != null ? audioBufferLength : Number.MAX_VALUE);\n    // If both buffer lengths are missing, we set the buffer length to zero\n    if (bufferLength === Number.MAX_VALUE) {\n        bufferLength = 0;\n    }\n\n    return 100 / playerDuration * bufferLength;\n}\n","import { UIUtils } from '../uiutils';\nimport { DOM } from '../dom';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { VolumeController } from '../volumecontroller';\n\nexport enum SeekBarType {\n  Vod,\n  Live,\n  Volume,\n}\n\ninterface Range {\n  min: number;\n  max: number;\n}\n\ninterface KeyStepIncrementsConfig {\n  leftRight: number;\n  upDown: number;\n}\n\nconst coerceValueIntoRange = (\n  value: number,\n  range: Range,\n  cb: (value: number) => void,\n) => {\n  if (value < range.min) {\n    cb(range.min);\n  } else if (value > range.max) {\n    cb(range.max);\n  } else {\n    cb(value);\n  }\n};\n\n/**\n * @category Utils\n */\nexport class SeekBarController {\n  protected keyStepIncrements: KeyStepIncrementsConfig;\n  protected player: PlayerAPI;\n  protected volumeController: VolumeController;\n\n  constructor(\n    keyStepIncrements: KeyStepIncrementsConfig,\n    player: PlayerAPI,\n    volumeController: VolumeController,\n  ) {\n    this.keyStepIncrements = keyStepIncrements;\n    this.player = player;\n    this.volumeController = volumeController;\n  }\n\n  protected arrowKeyControls(\n    currentValue: number,\n    range: Range,\n    valueUpdate: (value: number) => void,\n  ) {\n    const controlValue = Math.floor(currentValue);\n\n    return {\n      left: () => coerceValueIntoRange(controlValue - this.keyStepIncrements.leftRight, range, valueUpdate),\n      right: () => coerceValueIntoRange(controlValue + this.keyStepIncrements.leftRight, range, valueUpdate),\n      up: () => coerceValueIntoRange(controlValue + this.keyStepIncrements.upDown, range, valueUpdate),\n      down: () => coerceValueIntoRange(controlValue - this.keyStepIncrements.upDown, range, valueUpdate),\n      home: () => coerceValueIntoRange(range.min, range, valueUpdate),\n      end: () => coerceValueIntoRange(range.max, range, valueUpdate),\n    };\n  }\n\n  protected seekBarControls(type: SeekBarType) {\n    if (type === SeekBarType.Live) {\n      return this.arrowKeyControls(this.player.getTimeShift(), { min: this.player.getMaxTimeShift(), max: 0 }, this.player.timeShift);\n    } else if (type === SeekBarType.Vod) {\n      return this.arrowKeyControls(this.player.getCurrentTime(), { min: 0, max: this.player.getDuration() }, this.player.seek);\n    } else if (type === SeekBarType.Volume && this.volumeController != null) {\n      const volumeTransition = this.volumeController.startTransition();\n      return this.arrowKeyControls(this.player.getVolume(), { min: 0, max: 100 }, volumeTransition.finish.bind(volumeTransition));\n    }\n  }\n\n  public setSeekBarControls(domElement: DOM, type: () => SeekBarType) {\n    domElement.on('keydown', (e: KeyboardEvent) => {\n      const controls = this.seekBarControls(type());\n      switch (e.keyCode) {\n        case UIUtils.KeyCode.LeftArrow: {\n          controls.left();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.RightArrow: {\n          controls.right();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.UpArrow: {\n          controls.up();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.DownArrow: {\n          controls.down();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.Home: {\n          controls.home();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.End: {\n          controls.end();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.Space: {\n          this.player.isPlaying() ? this.player.pause() : this.player.play();\n          e.preventDefault();\n          break;\n        }\n      }\n    });\n  }\n}","import {Container, ContainerConfig} from './container';\nimport {Label, LabelConfig} from './label';\nimport {Component, ComponentConfig} from './component';\nimport { UIInstanceManager } from '../uimanager';\nimport {StringUtils} from '../stringutils';\nimport {ImageLoader} from '../imageloader';\nimport {CssProperties} from '../dom';\nimport { PlayerAPI, Thumbnail } from 'bitmovin-player';\nimport { SeekBar, SeekPreviewEventArgs } from './seekbar';\nimport { PlayerUtils } from '../playerutils';\n\n/**\n * Configuration interface for a {@link SeekBarLabel}.\n *\n * @category Configs\n */\nexport interface SeekBarLabelConfig extends ContainerConfig {\n  // nothing yet\n}\n\n/**\n * A label for a {@link SeekBar} that can display the seek target time, a thumbnail, and title (e.g. chapter title).\n *\n * @category Components\n */\nexport class SeekBarLabel extends Container<SeekBarLabelConfig> {\n\n  private timeLabel: Label<LabelConfig>;\n  private titleLabel: Label<LabelConfig>;\n  private thumbnail: Component<ComponentConfig>;\n\n  private thumbnailImageLoader: ImageLoader;\n\n  private timeFormat: string;\n\n  private appliedMarkerCssClasses: string[] = [];\n  private player: PlayerAPI;\n  private uiManager: UIInstanceManager;\n\n  constructor(config: SeekBarLabelConfig = {}) {\n    super(config);\n\n    this.timeLabel = new Label({ cssClasses: ['seekbar-label-time'] });\n    this.titleLabel = new Label({ cssClasses: ['seekbar-label-title'] });\n    this.thumbnail = new Component({ cssClasses: ['seekbar-thumbnail'], role: 'img' });\n    this.thumbnailImageLoader = new ImageLoader();\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-seekbar-label',\n      components: [new Container({\n        components: [\n          this.thumbnail,\n          new Container({\n            components: [this.titleLabel, this.timeLabel],\n            cssClass: 'seekbar-label-metadata',\n          })],\n        cssClass: 'seekbar-label-inner',\n      })],\n      hidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.player = player;\n    this.uiManager = uimanager;\n    uimanager.onSeekPreview.subscribeRateLimited(this.handleSeekPreview, 100);\n\n    let init = () => {\n      // Set time format depending on source duration\n      this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?\n        StringUtils.FORMAT_HHMMSS : StringUtils.FORMAT_MMSS;\n      // Set initial state of title and thumbnail to handle sourceLoaded when switching to a live-stream\n      this.setTitleText(null);\n      this.setThumbnail(null);\n    };\n\n    uimanager.getConfig().events.onUpdated.subscribe(init);\n    init();\n  }\n\n  private handleSeekPreview = (sender: SeekBar, args: SeekPreviewEventArgs) => {\n    if (this.player.isLive()) {\n      let maxTimeShift = this.player.getMaxTimeShift();\n      let timeShiftPreview = maxTimeShift - maxTimeShift * (args.position / 100);\n\n      this.setTime(timeShiftPreview);\n\n      // In case of a live stream the player expects the time passed into the getThumbnail as a wallClockTime and not\n      // as a relative timeShift value.\n      const convertTimeShiftPreviewToWallClockTime = (targetTimeShift: number): number => {\n        const currentTimeShift = this.player.getTimeShift();\n        const currentTime = this.player.getCurrentTime();\n\n        const wallClockTimeOfLiveEdge = currentTime - currentTimeShift;\n        return wallClockTimeOfLiveEdge + targetTimeShift;\n      };\n\n      const wallClockTime = convertTimeShiftPreviewToWallClockTime(timeShiftPreview);\n      this.setThumbnail(this.player.getThumbnail(wallClockTime));\n\n    } else {\n      let time = this.player.getDuration() * (args.position / 100);\n      this.setTime(time);\n\n      const seekableRangeStart = PlayerUtils.getSeekableRangeStart(this.player, 0);\n      const absoluteSeekTarget = time + seekableRangeStart;\n      this.setThumbnail(this.player.getThumbnail(absoluteSeekTarget));\n    }\n\n    if (args.marker) {\n      this.setTitleText(args.marker.marker.title);\n    } else {\n      this.setTitleText(null);\n    }\n\n    // Remove CSS classes from previous marker\n    if (this.appliedMarkerCssClasses.length > 0) {\n      this.getDomElement().removeClass(this.appliedMarkerCssClasses.join(' '));\n      this.appliedMarkerCssClasses = [];\n    }\n\n    // Add CSS classes of current marker\n    if (args.marker) {\n      const cssClasses = (args.marker.marker.cssClasses || []).map(cssClass => this.prefixCss(cssClass));\n      this.getDomElement().addClass(cssClasses.join(' '));\n      this.appliedMarkerCssClasses = cssClasses;\n    }\n  };\n\n  /**\n   * Sets arbitrary text on the label.\n   * @param text the text to show on the label\n   */\n  setText(text: string) {\n    this.timeLabel.setText(text);\n  }\n\n  /**\n   * Sets a time to be displayed on the label.\n   * @param seconds the time in seconds to display on the label\n   */\n  setTime(seconds: number) {\n    this.setText(StringUtils.secondsToTime(seconds, this.timeFormat));\n  }\n\n  /**\n   * Sets the text on the title label.\n   * @param text the text to show on the label\n   */\n  setTitleText(text = '') {\n    this.titleLabel.setText(text);\n  }\n\n  /**\n   * Sets or removes a thumbnail on the label.\n   * @param thumbnail the thumbnail to display on the label or null to remove a displayed thumbnail\n   */\n  setThumbnail(thumbnail: Thumbnail = null) {\n    let thumbnailElement = this.thumbnail.getDomElement();\n\n    if (thumbnail == null) {\n      thumbnailElement.css({\n        'background-image': null,\n        'display': null,\n        'width': null,\n        'height': null,\n      });\n    }\n    else {\n      // We use the thumbnail image loader to make sure the thumbnail is loaded and it's size is known before be can\n      // calculate the CSS properties and set them on the element.\n      this.thumbnailImageLoader.load(thumbnail.url, (url, width, height) => {\n        // can be checked like that because x/y/w/h are either all present or none\n        // https://www.w3.org/TR/media-frags/#naming-space\n        if (thumbnail.x !== undefined) {\n          thumbnailElement.css(this.thumbnailCssSprite(thumbnail, width, height));\n        } else {\n          thumbnailElement.css(this.thumbnailCssSingleImage(thumbnail, width, height));\n        }\n      });\n    }\n  }\n\n  private thumbnailCssSprite(thumbnail: Thumbnail, width: number, height: number): CssProperties {\n    let thumbnailCountX = width / thumbnail.width;\n    let thumbnailCountY = height / thumbnail.height;\n\n    let thumbnailIndexX = thumbnail.x / thumbnail.width;\n    let thumbnailIndexY = thumbnail.y / thumbnail.height;\n\n    let sizeX = 100 * thumbnailCountX;\n    let sizeY = 100 * thumbnailCountY;\n\n    let offsetX = 100 * thumbnailIndexX;\n    let offsetY = 100 * thumbnailIndexY;\n\n    let aspectRatio = 1 / thumbnail.width * thumbnail.height;\n\n    // The thumbnail size is set by setting the CSS 'width' and 'padding-bottom' properties. 'padding-bottom' is\n    // used because it is relative to the width and can be used to set the aspect ratio of the thumbnail.\n    // A default value for width is set in the stylesheet and can be overwritten from there or anywhere else.\n    return {\n      'display': 'inherit',\n      'background-image': `url(${thumbnail.url})`,\n      'padding-bottom': `${100 * aspectRatio}%`,\n      'background-size': `${sizeX}% ${sizeY}%`,\n      'background-position': `-${offsetX}% -${offsetY}%`,\n    };\n  }\n\n  private thumbnailCssSingleImage(thumbnail: Thumbnail, width: number, height: number): CssProperties {\n    let aspectRatio = 1 / width * height;\n\n    return {\n      'display': 'inherit',\n      'background-image': `url(${thumbnail.url})`,\n      'padding-bottom': `${100 * aspectRatio}%`,\n      'background-size': `100% 100%`,\n      'background-position': `0 0`,\n    };\n  }\n\n  release(): void {\n    super.release();\n\n    this.uiManager.onSeekPreview.unsubscribe(this.handleSeekPreview);\n  }\n}\n","import { ListSelector, ListSelectorConfig } from './listselector';\nimport { DOM } from '../dom';\nimport { i18n } from '../localization/i18n';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { UIContainer } from './uicontainer';\nimport { PlayerUtils } from '../playerutils';\nimport { ViewMode } from './component';\n\nconst DocumentDropdownClosedEvents = [\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'pointermove',\n  'click',\n  'keydown',\n  'keypress',\n  'keyup',\n  'blur',\n];\n\nconst SelectDropdownClosedEvents = [\n  'change',\n  'keyup',\n  'mouseup',\n];\n\nconst DropdownOpenedEvents: [string, (event: Event) => boolean][] = [\n  ['click', () => true],\n  ['keydown', (event: KeyboardEvent) => [' ', 'ArrowUp', 'ArrowDown'].includes(event.key)],\n  ['mousedown', () => true],\n];\n\nconst Timeout = 100;\n\n/**\n * A simple select box providing the possibility to select a single item out of a list of available items.\n *\n * DOM example:\n * <code>\n *     <select class='ui-selectbox'>\n *         <option value='key'>label</option>\n *         ...\n *     </select>\n * </code>\n *\n * @category Components\n */\n\nexport class SelectBox extends ListSelector<ListSelectorConfig> {\n  private selectElement: DOM | undefined;\n  private dropdownCloseListenerTimeoutId = 0;\n  private removeDropdownCloseListeners = () => {};\n  private uiContainer: UIContainer | undefined;\n  private removeDropdownOpenedListeners = () => {};\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-selectbox',\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    this.selectElement = new DOM('select', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'aria-label': i18n.performLocalization(this.config.ariaLabel),\n    }, this);\n\n    this.onDisabled.subscribe(this.closeDropdown);\n    this.onHide.subscribe(this.closeDropdown);\n    this.addDropdownOpenedListeners();\n    this.updateDomItems();\n\n    this.selectElement.on('change', this.onChange);\n\n    return this.selectElement;\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager) {\n    super.configure(player, uimanager);\n    this.uiContainer = uimanager.getUI();\n    this.uiContainer?.onPlayerStateChange().subscribe(this.onPlayerStateChange);\n  }\n\n  private readonly onChange = () => {\n    let value = this.selectElement.val();\n    this.onItemSelectedEvent(value, false);\n  };\n\n  private getSelectElement() {\n    return this.selectElement?.get()?.[0];\n  }\n\n  protected updateDomItems(selectedValue: string = null) {\n    if (this.selectElement === undefined) {\n      return;\n    }\n\n    // Delete all children\n    this.selectElement.empty();\n\n    // Add updated children\n    for (let item of this.items) {\n      let optionElement = new DOM('option', {\n        'value': String(item.key),\n      }).html(i18n.performLocalization(item.label));\n\n      if (item.key === String(selectedValue)) { // convert selectedValue to string to catch 'null'/null case\n        optionElement.attr('selected', 'selected');\n      }\n\n      this.selectElement.append(optionElement);\n    }\n  }\n\n  protected onItemAddedEvent(value: string) {\n    super.onItemAddedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemRemovedEvent(value: string) {\n    super.onItemRemovedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemSelectedEvent(value: string, updateDomItems: boolean = true) {\n    super.onItemSelectedEvent(value);\n    if (updateDomItems) {\n      this.updateDomItems(value);\n    }\n  }\n\n  public readonly closeDropdown = () => {\n    const select = this.getSelectElement();\n\n    if (select === undefined) {\n      return;\n    }\n\n    select.blur();\n  };\n\n  private readonly onPlayerStateChange = (_: UIContainer, state: PlayerUtils.PlayerState) => {\n    if ([PlayerUtils.PlayerState.Idle, PlayerUtils.PlayerState.Finished].includes(state)) {\n      this.closeDropdown();\n    }\n  };\n\n  private onDropdownOpened = () => {\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n\n    this.dropdownCloseListenerTimeoutId = window.setTimeout(() => this.addDropdownCloseListeners(), Timeout);\n    this.onViewModeChangedEvent(ViewMode.Persistent);\n  };\n\n  private onDropdownClosed = () => {\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n\n    this.removeDropdownCloseListeners();\n    this.onViewModeChangedEvent(ViewMode.Temporary);\n  };\n\n  private addDropdownCloseListeners() {\n    this.removeDropdownCloseListeners();\n\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n\n    DocumentDropdownClosedEvents.forEach(event => document.addEventListener(event, this.onDropdownClosed, true));\n    SelectDropdownClosedEvents.forEach(event => this.selectElement.on(event, this.onDropdownClosed, true));\n\n    this.removeDropdownCloseListeners = () => {\n      DocumentDropdownClosedEvents.forEach(event => document.removeEventListener(event, this.onDropdownClosed, true));\n      SelectDropdownClosedEvents.forEach(event => this.selectElement.off(event, this.onDropdownClosed, true));\n    };\n  }\n\n  private addDropdownOpenedListeners() {\n    const removeListenerFunctions: (() => void)[] = [];\n\n    this.removeDropdownOpenedListeners();\n\n    for (const [event, filter] of DropdownOpenedEvents) {\n      const listener = (event: Event) => {\n        if (filter(event)) {\n          this.onDropdownOpened();\n        }\n      };\n\n      removeListenerFunctions.push(() => this.selectElement.off(event, listener, true));\n      this.selectElement.on(event, listener, true);\n    }\n\n    this.removeDropdownOpenedListeners = () => {\n      for (const remove of removeListenerFunctions) {\n        remove();\n      }\n    };\n  }\n\n  release() {\n    super.release();\n\n    this.removeDropdownCloseListeners();\n    this.removeDropdownOpenedListeners();\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n  }\n}\n","import { Container, ContainerConfig } from './container';\nimport { SelectBox } from './selectbox';\nimport { UIInstanceManager } from '../uimanager';\nimport { Timeout } from '../timeout';\nimport { Event, EventDispatcher, NoArgs } from '../eventdispatcher';\nimport { SettingsPanelPage } from './settingspanelpage';\nimport { SettingsPanelItem } from './settingspanelitem';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { Component, ComponentConfig } from './component';\n\n/**\n * Configuration interface for a {@link SettingsPanel}.\n *\n * @category Configs\n */\nexport interface SettingsPanelConfig extends ContainerConfig {\n  /**\n   * The delay in milliseconds after which the settings panel will be hidden when there is no user interaction.\n   * Set to -1 to disable automatic hiding.\n   * Default: 3 seconds (3000)\n   */\n  hideDelay?: number;\n\n  /**\n   * Flag to specify if there should be an animation when switching SettingsPanelPages.\n   * Default: true\n   */\n  pageTransitionAnimation?: boolean;\n}\n\nenum NavigationDirection {\n  Forwards,\n  Backwards,\n}\n\n/**\n * A panel containing a list of {@link SettingsPanelPage items}.\n *\n * To configure pages just pass them in the components array.\n *\n * Example:\n *  let settingsPanel = new SettingsPanel({\n *    hidden: true,\n *  });\n *\n *  let settingsPanelPage = new SettingsPanelPage({\n *    components: […]\n *  });\n *\n *  let secondSettingsPanelPage = new SettingsPanelPage({\n *    components: […]\n *  });\n *\n *  settingsPanel.addComponent(settingsPanelPage);\n *  settingsPanel.addComponent(secondSettingsPanelPage);\n *\n * For an example how to navigate between pages @see SettingsPanelPageNavigatorButton\n *\n * @category Components\n */\nexport class SettingsPanel extends Container<SettingsPanelConfig> {\n\n  private static readonly CLASS_ACTIVE_PAGE = 'active';\n\n  // navigation handling\n  private activePage: SettingsPanelPage;\n  private navigationStack: SettingsPanelPage[] = [];\n\n  private settingsPanelEvents = {\n    onSettingsStateChanged: new EventDispatcher<SettingsPanel, NoArgs>(),\n  };\n\n  private hideTimeout: Timeout;\n\n  constructor(config: SettingsPanelConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settings-panel',\n      hideDelay: 3000,\n      pageTransitionAnimation: true,\n    } as SettingsPanelConfig, this.config);\n\n    this.activePage = this.getRootPage();\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    uimanager.onControlsHide.subscribe(() => this.hideHoveredSelectBoxes());\n    uimanager.onComponentViewModeChanged.subscribe((_, { mode }) => this.trackComponentViewMode(mode));\n\n    if (config.hideDelay > -1) {\n      this.hideTimeout = new Timeout(config.hideDelay, () => {\n        this.hide();\n        this.hideHoveredSelectBoxes();\n      });\n      this.getDomElement().on('mouseenter', () => {\n        // On mouse enter clear the timeout\n        this.hideTimeout.clear();\n      });\n      this.getDomElement().on('mouseleave', () => {\n        // On mouse leave activate the timeout\n        this.hideTimeout.reset();\n      });\n      this.getDomElement().on('focusin', () => {\n        this.hideTimeout.clear();\n      });\n      this.getDomElement().on('focusout', () => {\n        this.hideTimeout.reset();\n      });\n    }\n\n    this.onHide.subscribe(() => {\n      if (config.hideDelay > -1) {\n        // Clear timeout when hidden from outside\n        this.hideTimeout.clear();\n      }\n\n      // Since we don't reset the actual navigation here we need to simulate a onInactive event in case some panel\n      // needs to do something when they become invisible / inactive.\n      this.activePage.onInactiveEvent();\n    });\n\n    this.onShow.subscribe(() => {\n      // Reset navigation when te panel gets visible to avoid a weird animation when hiding\n      this.resetNavigation(true);\n      // Since we don't need to navigate to the root page again we need to fire the onActive event when the settings\n      // panel gets visible.\n      this.activePage.onActiveEvent();\n\n      if (config.hideDelay > -1) {\n        // Activate timeout when shown\n        this.hideTimeout.start();\n      }\n    });\n\n    // pass event from root page through\n    this.getRootPage().onSettingsStateChanged.subscribe(() => {\n      this.onSettingsStateChangedEvent();\n    });\n\n    this.updateActivePageClass();\n  }\n\n  /**\n   * Returns the current active / visible page\n   * @return {SettingsPanelPage}\n   */\n  getActivePage(): SettingsPanelPage {\n    return this.activePage;\n  }\n\n  /**\n   * Sets the\n   * @deprecated Use {@link setActivePage} instead\n   * @param index\n   */\n  setActivePageIndex(index: number): void {\n    this.setActivePage(this.getPages()[index]);\n  }\n\n  /**\n   * Adds the passed page to the navigation stack and makes it visible.\n   * Use {@link popSettingsPanelPage} to navigate backwards.\n   *\n   * Results in no-op if the target page is the current page.\n   * @param targetPage\n   */\n  setActivePage(targetPage: SettingsPanelPage): void {\n    if (targetPage === this.getActivePage()) {\n      console.warn('Page is already the current one ... skipping navigation');\n      return;\n    }\n\n    this.navigateToPage(\n      targetPage,\n      this.getActivePage(),\n      NavigationDirection.Forwards,\n      !(this.config as SettingsPanelConfig).pageTransitionAnimation,\n    );\n  }\n\n  /**\n   * Resets the navigation stack by navigating back to the root page and displaying it.\n   */\n  popToRootSettingsPanelPage(): void {\n    this.resetNavigation((this.config as SettingsPanelConfig).pageTransitionAnimation);\n  }\n\n  /**\n   * Removes the current page from the navigation stack and makes the previous one visible.\n   * Results in a no-op if we are already on the root page.\n   */\n  popSettingsPanelPage() {\n    if (this.navigationStack.length === 0) {\n      console.warn('Already on the root page ... skipping navigation');\n      return;\n    }\n\n    let targetPage = this.navigationStack[this.navigationStack.length - 2];\n    // The root part isn't part of the navigation stack so handle it explicitly here\n    if (!targetPage) {\n      targetPage = this.getRootPage();\n    }\n\n    this.navigateToPage(\n      targetPage,\n      this.activePage,\n      NavigationDirection.Backwards,\n      !(this.config as SettingsPanelConfig).pageTransitionAnimation,\n    );\n  }\n\n  /**\n   * Checks if there are active settings within the root page of the settings panel.\n   * An active setting is a setting that is visible and enabled, which the user can interact with.\n   * @returns {boolean} true if there are active settings, false if the panel is functionally empty to a user\n   */\n  rootPageHasActiveSettings(): boolean {\n    return this.getRootPage().hasActiveSettings();\n  }\n\n  /**\n   * Return all configured pages\n   * @returns {SettingsPanelPage[]}\n   */\n  getPages(): SettingsPanelPage[] {\n    return <SettingsPanelPage[]>this.config.components.filter(component => component instanceof SettingsPanelPage);\n  }\n\n  get onSettingsStateChanged(): Event<SettingsPanel, NoArgs> {\n    return this.settingsPanelEvents.onSettingsStateChanged.getEvent();\n  }\n\n  release(): void {\n    super.release();\n    if (this.hideTimeout) {\n      this.hideTimeout.clear();\n    }\n  }\n\n  // Support adding settingsPanelPages after initialization\n  addComponent(component: Component<ComponentConfig>) {\n    if (this.getPages().length === 0 && component instanceof SettingsPanelPage) {\n      this.activePage = component;\n    }\n    super.addComponent(component);\n  }\n\n  protected suspendHideTimeout() {\n    this.hideTimeout.suspend();\n  }\n\n  protected resumeHideTimeout() {\n    this.hideTimeout.resume(true);\n  }\n\n  private updateActivePageClass(): void {\n    this.getPages().forEach((page: SettingsPanelPage) => {\n      if (page === this.activePage) {\n        page.getDomElement().addClass(this.prefixCss(SettingsPanel.CLASS_ACTIVE_PAGE));\n      } else {\n        page.getDomElement().removeClass(this.prefixCss(SettingsPanel.CLASS_ACTIVE_PAGE));\n      }\n    });\n  }\n\n  private resetNavigation(resetNavigationOnShow: boolean): void {\n    const sourcePage = this.getActivePage();\n    const rootPage = this.getRootPage();\n    if (sourcePage) {\n      // Since the onInactiveEvent was already fired in the onHide we need to suppress it here\n      if (!resetNavigationOnShow) {\n        sourcePage.onInactiveEvent();\n      }\n    }\n    this.navigationStack = [];\n    this.animateNavigation(rootPage, sourcePage, resetNavigationOnShow);\n    this.activePage = rootPage;\n    this.updateActivePageClass();\n  }\n\n  private navigateToPage(\n    targetPage: SettingsPanelPage,\n    sourcePage: SettingsPanelPage,\n    direction: NavigationDirection,\n    skipAnimation: boolean,\n  ): void {\n    this.activePage = targetPage;\n\n    if (direction === NavigationDirection.Forwards) {\n      this.navigationStack.push(targetPage);\n    } else {\n      this.navigationStack.pop();\n    }\n\n    this.animateNavigation(targetPage, sourcePage, skipAnimation);\n\n    this.updateActivePageClass();\n    targetPage.onActiveEvent();\n    sourcePage.onInactiveEvent();\n  }\n\n  /**\n   * @param targetPage\n   * @param sourcePage\n   * @param skipAnimation This is just an internal flag if we want to have an animation. It is set true when we reset\n   * the navigation within the onShow callback of the settingsPanel. In this case we don't want an actual animation but\n   * the recalculation of the dimension of the settingsPanel.\n   * This is independent of the pageTransitionAnimation flag.\n   */\n  private animateNavigation(targetPage: SettingsPanelPage, sourcePage: SettingsPanelPage, skipAnimation: boolean) {\n    if (!(this.config as SettingsPanelConfig).pageTransitionAnimation) {\n      return;\n    }\n\n    const settingsPanelDomElement = this.getDomElement();\n    const settingsPanelHTMLElement = this.getDomElement().get(0);\n\n    // get current dimension\n    const settingsPanelWidth = settingsPanelHTMLElement.scrollWidth;\n    const settingsPanelHeight = settingsPanelHTMLElement.scrollHeight;\n\n    // calculate target size of the settings panel\n    sourcePage.getDomElement().css('display', 'none');\n    this.getDomElement().css({ width: '', height: '' }); // let css auto settings kick in again\n\n    const targetPageHtmlElement = targetPage.getDomElement().get(0);\n    // clone the targetPage DOM element so that we can calculate the width / height how they will be after\n    // switching the page. We are using a clone to prevent (mostly styling) side-effects on the real DOM element\n    const clone = targetPageHtmlElement.cloneNode(true) as HTMLElement;\n    // append to parent so we get the 'real' size\n    const containerWrapper = targetPageHtmlElement.parentNode;\n    containerWrapper.appendChild(clone);\n    // set clone visible\n    clone.style.display = 'block';\n\n    // collect target dimension\n    const targetSettingsPanelWidth = settingsPanelHTMLElement.scrollWidth;\n    const targetSettingsPanelHeight = settingsPanelHTMLElement.scrollHeight;\n\n    // remove clone from the DOM\n    clone.parentElement.removeChild(clone); // .remove() is not working in IE\n    sourcePage.getDomElement().css('display', '');\n\n    // set the values back to the current ones that the browser animates it (browsers don't animate 'auto' values)\n    settingsPanelDomElement.css({\n      width: settingsPanelWidth + 'px',\n      height: settingsPanelHeight + 'px',\n    });\n\n    if (!skipAnimation) {\n      // We need to force the browser to reflow between setting the width and height that we actually get a animation\n      this.forceBrowserReflow();\n    }\n\n    // set the values to the target dimension\n    settingsPanelDomElement.css({\n      width: targetSettingsPanelWidth + 'px',\n      height: targetSettingsPanelHeight + 'px',\n    });\n  }\n\n  private forceBrowserReflow(): void {\n    // Force the browser to reflow the layout\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    this.getDomElement().get(0).offsetLeft;\n  }\n\n  /**\n   * Workaround for IE, Firefox and Safari\n   * when the settings panel fades out while an item of a select box is still hovered, the select box will not fade out\n   * while the settings panel does. This would leave a floating select box, which is just weird\n   */\n  private hideHoveredSelectBoxes(): void {\n    this.getComputedItems()\n      .map(item => item['setting'])\n      .filter(component => component instanceof SelectBox)\n      .forEach((selectBox: SelectBox) => selectBox.closeDropdown());\n  }\n\n  // collect all items from all pages (see hideHoveredSelectBoxes)\n  private getComputedItems(): SettingsPanelItem[] {\n    const allItems: SettingsPanelItem[] = [];\n    for (let page of this.getPages()) {\n      allItems.push(...page.getItems());\n    }\n    return allItems;\n  }\n\n  private getRootPage(): SettingsPanelPage {\n    return this.getPages()[0];\n  }\n\n  protected onSettingsStateChangedEvent() {\n    this.settingsPanelEvents.onSettingsStateChanged.dispatch(this);\n  }\n}\n","import {Container, ContainerConfig} from './container';\nimport {Component, ComponentConfig} from './component';\nimport {Event, EventDispatcher, NoArgs} from '../eventdispatcher';\nimport { Label, LabelConfig } from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport {SelectBox} from './selectbox';\nimport {ListBox} from './listbox';\nimport {VideoQualitySelectBox} from './videoqualityselectbox';\nimport {AudioQualitySelectBox} from './audioqualityselectbox';\nimport {PlaybackSpeedSelectBox} from './playbackspeedselectbox';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { LocalizableText } from '../localization/i18n';\n\n/**\n * An item for a {@link SettingsPanelPage},\n * Containing an optional {@link Label} and a component that configures a setting.\n * If the components is a {@link SelectBox} it will handle the logic of displaying it or not\n *\n * @category Components\n */\nexport class SettingsPanelItem extends Container<ContainerConfig> {\n\n  private label: Component<ComponentConfig>;\n  private setting: Component<ComponentConfig>;\n\n  private settingsPanelItemEvents = {\n    onActiveChanged: new EventDispatcher<SettingsPanelItem, NoArgs>(),\n  };\n\n  constructor(label: LocalizableText | Component<ComponentConfig>, setting: Component<ComponentConfig>, config: ContainerConfig = {}) {\n    super(config);\n\n    this.setting = setting;\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settings-panel-item',\n      role: 'menuitem',\n    }, this.config);\n\n    if (label !== null) {\n      if (label instanceof Component) {\n        this.label = label;\n      } else {\n        this.label = new Label({ text: label, for: this.setting.getConfig().id } as LabelConfig);\n      }\n      this.addComponent(this.label);\n    }\n\n    this.addComponent(this.setting);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    if (this.setting instanceof SelectBox || this.setting instanceof ListBox) {\n      let handleConfigItemChanged = () => {\n        if (!(this.setting instanceof SelectBox) && !(this.setting instanceof ListBox)) {\n          return;\n        }\n        // The minimum number of items that must be available for the setting to be displayed\n        // By default, at least two items must be available, else a selection is not possible\n        let minItemsToDisplay = 2;\n        // Audio/video quality select boxes contain an additional 'auto' mode, which in combination with a single\n        // available quality also does not make sense\n        if ((this.setting instanceof VideoQualitySelectBox && this.setting.hasAutoItem())\n          || this.setting instanceof AudioQualitySelectBox) {\n          minItemsToDisplay = 3;\n        }\n\n        if (this.setting.itemCount() < minItemsToDisplay) {\n          // Hide the setting if no meaningful choice is available\n          this.hide();\n        } else if (this.setting instanceof PlaybackSpeedSelectBox\n          && !uimanager.getConfig().playbackSpeedSelectionEnabled) {\n          // Hide the PlaybackSpeedSelectBox if disabled in config\n          this.hide();\n        } else {\n          this.show();\n        }\n\n        // Visibility might have changed and therefore the active state might have changed so we fire the event\n        // TODO fire only when state has really changed (e.g. check if visibility has really changed)\n        this.onActiveChangedEvent();\n\n        this.getDomElement().attr('aria-haspopup', 'true');\n      };\n\n      this.setting.onItemAdded.subscribe(handleConfigItemChanged);\n      this.setting.onItemRemoved.subscribe(handleConfigItemChanged);\n\n      // Initialize hidden state\n      handleConfigItemChanged();\n    }\n  }\n\n  /**\n   * Checks if this settings panel item is active, i.e. visible and enabled and a user can interact with it.\n   * @returns {boolean} true if the panel is active, else false\n   */\n  isActive(): boolean {\n    return this.isShown();\n  }\n\n  protected onActiveChangedEvent() {\n    this.settingsPanelItemEvents.onActiveChanged.dispatch(this);\n  }\n\n  /**\n   * Gets the event that is fired when the 'active' state of this item changes.\n   * @see #isActive\n   * @returns {Event<SettingsPanelItem, NoArgs>}\n   */\n  get onActiveChanged(): Event<SettingsPanelItem, NoArgs> {\n    return this.settingsPanelItemEvents.onActiveChanged.getEvent();\n  }\n}\n","import {Container, ContainerConfig} from './container';\nimport {SettingsPanelItem} from './settingspanelitem';\nimport {UIInstanceManager} from '../uimanager';\nimport {Event, EventDispatcher, NoArgs} from '../eventdispatcher';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { BrowserUtils } from '../browserutils';\n\n/**\n * A panel containing a list of {@link SettingsPanelItem items} that represent labelled settings.\n *\n * @category Components\n */\nexport class SettingsPanelPage extends Container<ContainerConfig> {\n\n  private static readonly CLASS_LAST = 'last';\n\n  private settingsPanelPageEvents = {\n    onSettingsStateChanged: new EventDispatcher<SettingsPanelPage, NoArgs>(),\n    onActive: new EventDispatcher<SettingsPanelPage, NoArgs>(),\n    onInactive: new EventDispatcher<SettingsPanelPage, NoArgs>(),\n  };\n\n  constructor(config: ContainerConfig) {\n    super(config);\n\n    this.config = this.mergeConfig<ContainerConfig>(config, {\n      cssClass: 'ui-settings-panel-page',\n      role: 'menu',\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    // Fire event when the state of a settings-item has changed\n    let settingsStateChangedHandler = () => {\n      this.onSettingsStateChangedEvent();\n\n      // Attach marker class to last visible item\n      let lastShownItem = null;\n      for (let component of this.getItems()) {\n        component.getDomElement().removeClass(this.prefixCss(SettingsPanelPage.CLASS_LAST));\n        if (component.isShown()) {\n          lastShownItem = component;\n        }\n      }\n      if (lastShownItem) {\n        lastShownItem.getDomElement().addClass(this.prefixCss(SettingsPanelPage.CLASS_LAST));\n      }\n    };\n    for (let component of this.getItems()) {\n      component.onActiveChanged.subscribe(settingsStateChangedHandler);\n    }\n  }\n\n  hasActiveSettings(): boolean {\n    for (let component of this.getItems()) {\n      if (component.isActive()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getItems(): SettingsPanelItem[] {\n    return <SettingsPanelItem[]>this.config.components.filter(component => component instanceof SettingsPanelItem);\n  }\n\n  onSettingsStateChangedEvent() {\n    this.settingsPanelPageEvents.onSettingsStateChanged.dispatch(this);\n  }\n\n  get onSettingsStateChanged(): Event<SettingsPanelPage, NoArgs> {\n    return this.settingsPanelPageEvents.onSettingsStateChanged.getEvent();\n  }\n\n  onActiveEvent() {\n    const activeItems = this.getItems().filter((item) => item.isActive());\n\n    this.settingsPanelPageEvents.onActive.dispatch(this);\n    // Disable focus for iOS and iPadOS 13. They open select boxes automatically on focus and we want to avoid that.\n    if (activeItems.length > 0 && !BrowserUtils.isIOS && !(BrowserUtils.isMacIntel && BrowserUtils.isTouchSupported)) {\n      activeItems[0].getDomElement().focusToFirstInput();\n    }\n  }\n\n  get onActive(): Event<SettingsPanelPage, NoArgs> {\n    return this.settingsPanelPageEvents.onActive.getEvent();\n  }\n\n  onInactiveEvent() {\n    this.settingsPanelPageEvents.onInactive.dispatch(this);\n  }\n\n  get onInactive(): Event<SettingsPanelPage, NoArgs> {\n    return this.settingsPanelPageEvents.onInactive.getEvent();\n  }\n}\n","import {UIInstanceManager} from '../uimanager';\nimport {SettingsPanelPageNavigatorButton, SettingsPanelPageNavigatorConfig} from './settingspanelpagenavigatorbutton';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * @category Buttons\n */\nexport class SettingsPanelPageBackButton extends SettingsPanelPageNavigatorButton {\n\n  constructor(config: SettingsPanelPageNavigatorConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settingspanelpagebackbutton',\n      text: 'back',\n    } as SettingsPanelPageNavigatorConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      this.popPage();\n    });\n  }\n}\n","import {Button, ButtonConfig} from './button';\nimport {SettingsPanel} from './settingspanel';\nimport {SettingsPanelPage} from './settingspanelpage';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\n\n/**\n * Configuration interface for a {@link SettingsPanelPageNavigatorButton}\n *\n * @category Configs\n */\nexport interface SettingsPanelPageNavigatorConfig extends ButtonConfig {\n  /**\n   * Container `SettingsPanel` where the navigation takes place\n   */\n  container: SettingsPanel;\n  /**\n   * Page where the button should navigate to\n   * If empty it will navigate to the root page (not intended to use as navigate back behavior)\n   */\n  targetPage?: SettingsPanelPage;\n\n  /**\n   * WCAG20 standard: Establishes relationships between objects and their label(s)\n   */\n  ariaLabelledBy?: string;\n}\n\n/**\n * Can be used to navigate between SettingsPanelPages\n *\n * Example:\n *  let settingPanelNavigationButton = new SettingsPanelPageNavigatorButton({\n *    container: settingsPanel,\n *    targetPage: settingsPanelPage,\n *  });\n *\n *  settingsPanelPage.addComponent(settingPanelNavigationButton);\n *\n * Don't forget to add the settingPanelNavigationButton to the settingsPanelPage.\n *\n * @category Buttons\n */\nexport class SettingsPanelPageNavigatorButton extends Button<SettingsPanelPageNavigatorConfig> {\n  private readonly container: SettingsPanel;\n  private readonly targetPage?: SettingsPanelPage;\n\n  constructor(config: SettingsPanelPageNavigatorConfig) {\n    super(config);\n    this.config = this.mergeConfig(config, {} as SettingsPanelPageNavigatorConfig, this.config);\n\n    this.container = (this.config as SettingsPanelPageNavigatorConfig).container;\n    this.targetPage = (this.config as SettingsPanelPageNavigatorConfig).targetPage;\n  }\n\n  /**\n   * navigate one level back\n   */\n  popPage() {\n    this.container.popSettingsPanelPage();\n  }\n\n  /**\n   * navigate to the target page\n   */\n  pushTargetPage() {\n    this.container.setActivePage(this.targetPage);\n  }\n}\n","import {UIInstanceManager} from '../uimanager';\nimport {SettingsPanelPageNavigatorButton, SettingsPanelPageNavigatorConfig} from './settingspanelpagenavigatorbutton';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * @category Buttons\n */\nexport class SettingsPanelPageOpenButton extends SettingsPanelPageNavigatorButton {\n  constructor(config: SettingsPanelPageNavigatorConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settingspanelpageopenbutton',\n      text: i18n.getLocalizer('open'),\n      role: 'menuitem',\n    } as SettingsPanelPageNavigatorConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.getDomElement().attr('aria-haspopup', 'true');\n    this.getDomElement().attr('aria-owns', this.config.targetPage.getConfig().id);\n\n    this.onClick.subscribe(() => {\n      this.pushTargetPage();\n    });\n  }\n}\n","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {SettingsPanel} from './settingspanel';\nimport {UIInstanceManager} from '../uimanager';\nimport {Component, ComponentConfig} from './component';\nimport {ArrayUtils} from '../arrayutils';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for the {@link SettingsToggleButton}.\n *\n * @category Configs\n */\nexport interface SettingsToggleButtonConfig extends ToggleButtonConfig {\n  /**\n   * The settings panel whose visibility the button should toggle.\n   */\n  settingsPanel: SettingsPanel;\n\n  /**\n   * Decides if the button should be automatically hidden when the settings panel does not contain any active settings.\n   * Default: true\n   */\n  autoHideWhenNoActiveSettings?: boolean;\n}\n\n/**\n * A button that toggles visibility of a settings panel.\n *\n * @category Buttons\n */\nexport class SettingsToggleButton extends ToggleButton<SettingsToggleButtonConfig> {\n\n  private visibleSettingsPanels: SettingsPanel[] = [];\n\n  constructor(config: SettingsToggleButtonConfig) {\n    super(config);\n\n    if (!config.settingsPanel) {\n      throw new Error('Required SettingsPanel is missing');\n    }\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settingstogglebutton',\n      text: i18n.getLocalizer('settings'),\n      settingsPanel: null,\n      autoHideWhenNoActiveSettings: true,\n      role: 'pop-up button',\n    }, <SettingsToggleButtonConfig>this.config);\n\n    /**\n     * WCAG20 standard defines which popup menu (element id) is owned by the button\n     */\n    this.getDomElement().attr('aria-owns', config.settingsPanel.getActivePage().getConfig().id);\n\n    /**\n     * WCAG20 standard defines that a button has a popup menu bound to it\n     */\n    this.getDomElement().attr('aria-haspopup', 'true');\n\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let settingsPanel = config.settingsPanel;\n\n    this.onClick.subscribe(() => {\n      // only hide other `SettingsPanel`s if a new one will be opened\n      if (!settingsPanel.isShown()) {\n        // Hide all open SettingsPanels before opening this button's panel\n        // (We need to iterate a copy because hiding them will automatically remove themselves from the array\n        // due to the subscribeOnce above)\n        this.visibleSettingsPanels.slice().forEach(settingsPanel => settingsPanel.hide());\n      }\n      settingsPanel.toggleHidden();\n    });\n    settingsPanel.onShow.subscribe(() => {\n      // Set toggle status to on when the settings panel shows\n      this.on();\n    });\n    settingsPanel.onHide.subscribe(() => {\n      // Set toggle status to off when the settings panel hides\n      this.off();\n    });\n\n    // Ensure that only one `SettingPanel` is visible at once\n    // Keep track of shown SettingsPanels\n    uimanager.onComponentShow.subscribe((sender: Component<ComponentConfig>) => {\n      if (sender instanceof SettingsPanel) {\n        this.visibleSettingsPanels.push(sender);\n        sender.onHide.subscribeOnce(() => ArrayUtils.remove(this.visibleSettingsPanels, sender));\n      }\n    });\n\n    // Handle automatic hiding of the button if there are no settings for the user to interact with\n    if (config.autoHideWhenNoActiveSettings) {\n      // Setup handler to show/hide button when the settings change\n      let settingsPanelItemsChangedHandler = () => {\n        if (settingsPanel.rootPageHasActiveSettings()) {\n          if (this.isHidden()) {\n            this.show();\n          }\n        } else {\n          if (this.isShown()) {\n            this.hide();\n          }\n        }\n      };\n      // Wire the handler to the event\n      settingsPanel.onSettingsStateChanged.subscribe(settingsPanelItemsChangedHandler);\n      // Call handler for first init at startup\n      settingsPanelItemsChangedHandler();\n    }\n  }\n}\n","import {Component, ComponentConfig} from './component';\n\n/**\n * A dummy component that just reserves some space and does nothing else.\n *\n * @category Components\n */\nexport class Spacer extends Component<ComponentConfig> {\n\n  constructor(config: ComponentConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-spacer',\n    }, this.config);\n  }\n\n\n  protected onShowEvent(): void {\n    // disable event firing by overwriting and not calling super\n  }\n\n  protected onHideEvent(): void {\n    // disable event firing by overwriting and not calling super\n  }\n\n  protected onHoverChangedEvent(hovered: boolean): void {\n    // disable event firing by overwriting and not calling super\n  }\n}","import {ListBox} from './listbox';\nimport {UIInstanceManager} from '../uimanager';\nimport {SubtitleSwitchHandler} from '../subtitleutils';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * A element that is similar to a select box where the user can select a subtitle\n *\n * @category Components\n */\nexport class SubtitleListBox extends ListBox {\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    new SubtitleSwitchHandler(player, this, uimanager);\n  }\n}\n","import { Container, ContainerConfig } from './container';\nimport { UIInstanceManager } from '../uimanager';\nimport { Label, LabelConfig } from './label';\nimport { ComponentConfig, Component } from './component';\nimport { ControlBar } from './controlbar';\nimport { EventDispatcher } from '../eventdispatcher';\nimport { DOM, Size } from '../dom';\nimport { PlayerAPI, SubtitleCueEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { VttUtils } from '../vttutils';\nimport { VTTProperties } from 'bitmovin-player/types/subtitles/vtt/API';\n\ninterface SubtitleCropDetectionResult {\n  top: boolean;\n  right: boolean;\n  bottom: boolean;\n  left: boolean;\n}\n\n/**\n * Overlays the player to display subtitles.\n *\n * @category Components\n */\nexport class SubtitleOverlay extends Container<ContainerConfig> {\n\n  private subtitleManager: ActiveSubtitleManager;\n  private previewSubtitleActive: boolean;\n  private previewSubtitle: SubtitleLabel;\n\n  private preprocessLabelEventCallback = new EventDispatcher<SubtitleCueEvent, SubtitleLabel>();\n  private subtitleContainerManager: SubtitleRegionContainerManager;\n\n  private static readonly CLASS_CONTROLBAR_VISIBLE = 'controlbar-visible';\n  private static readonly CLASS_CEA_608 = 'cea608';\n\n  // The number of rows in a cea608 grid\n  private static readonly CEA608_NUM_ROWS = 15;\n  // The number of columns in a cea608 grid\n  private static readonly CEA608_NUM_COLUMNS = 32;\n  // The offset in percent for one row (which is also the height of a row)\n  private static readonly CEA608_ROW_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_ROWS;\n  // The offset in percent for one column (which is also the width of a column)\n  private static readonly CEA608_COLUMN_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_COLUMNS;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.previewSubtitleActive = false;\n    this.previewSubtitle = new SubtitleLabel({ text: i18n.getLocalizer('subtitle.example') });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-subtitle-overlay',\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let subtitleManager = new ActiveSubtitleManager();\n    this.subtitleManager = subtitleManager;\n\n    this.subtitleContainerManager = new SubtitleRegionContainerManager(this);\n\n    player.on(player.exports.PlayerEvent.CueEnter, (event: SubtitleCueEvent) => {\n      const label = this.generateLabel(event);\n      subtitleManager.cueEnter(event, label);\n\n      this.preprocessLabelEventCallback.dispatch(event, label);\n\n      if (this.previewSubtitleActive) {\n        this.subtitleContainerManager.removeLabel(this.previewSubtitle);\n      }\n\n      this.show();\n\n      this.subtitleContainerManager.addLabel(label, this.getDomElement().size());\n      this.updateComponents();\n\n      if (uimanager.getConfig().forceSubtitlesIntoViewContainer) {\n        this.handleSubtitleCropping(label);\n      }\n    });\n\n    player.on(player.exports.PlayerEvent.CueUpdate, (event: SubtitleCueEvent) => {\n      const label = this.generateLabel(event);\n      const labelToReplace = subtitleManager.cueUpdate(event, label);\n\n      this.preprocessLabelEventCallback.dispatch(event, label);\n\n      if (labelToReplace) {\n        this.subtitleContainerManager.replaceLabel(labelToReplace, label);\n      }\n\n      if (uimanager.getConfig().forceSubtitlesIntoViewContainer) {\n        this.handleSubtitleCropping(label);\n      }\n    });\n\n    player.on(player.exports.PlayerEvent.CueExit, (event: SubtitleCueEvent) => {\n      let labelToRemove = subtitleManager.cueExit(event);\n\n      if (labelToRemove) {\n        this.subtitleContainerManager.removeLabel(labelToRemove);\n        this.updateComponents();\n      }\n\n      if (!subtitleManager.hasCues) {\n        if (!this.previewSubtitleActive) {\n          this.hide();\n        } else {\n          this.subtitleContainerManager.addLabel(this.previewSubtitle);\n          this.updateComponents();\n        }\n      }\n    });\n\n    let subtitleClearHandler = () => {\n      this.hide();\n      this.subtitleContainerManager.clear();\n      subtitleManager.clear();\n      this.removeComponents();\n      this.updateComponents();\n    };\n\n    const clearInactiveCues = () => {\n      const removedActiveCues = subtitleManager.clearInactiveCues(player.getCurrentTime());\n      removedActiveCues.forEach(toRemove => {\n        this.subtitleContainerManager.removeLabel(toRemove.label);\n      });\n    };\n\n    player.on(player.exports.PlayerEvent.AudioChanged, subtitleClearHandler);\n    player.on(player.exports.PlayerEvent.SubtitleDisabled, subtitleClearHandler);\n    player.on(player.exports.PlayerEvent.Seeked, clearInactiveCues);\n    player.on(player.exports.PlayerEvent.TimeShifted, clearInactiveCues);\n    player.on(player.exports.PlayerEvent.PlaybackFinished, subtitleClearHandler);\n    player.on(player.exports.PlayerEvent.SourceUnloaded, subtitleClearHandler);\n\n    uimanager.onComponentShow.subscribe((component: Component<ComponentConfig>) => {\n      if (component instanceof ControlBar) {\n        this.getDomElement().addClass(this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));\n      }\n    });\n    uimanager.onComponentHide.subscribe((component: Component<ComponentConfig>) => {\n      if (component instanceof ControlBar) {\n        this.getDomElement().removeClass(this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));\n      }\n    });\n\n    this.configureCea608Captions(player, uimanager);\n    // Init\n    subtitleClearHandler();\n  }\n\n  detectCroppedSubtitleLabel(\n    labelElement: HTMLElement,\n  ): SubtitleCropDetectionResult {\n    const parent = this.getDomElement().get(0);\n\n    const childRect = labelElement.getBoundingClientRect();\n    const parentRect = parent.getBoundingClientRect();\n\n    return {\n      top: childRect.top < parentRect.top,\n      right: childRect.right > parentRect.right,\n      bottom: childRect.bottom > parentRect.bottom,\n      left: childRect.left < parentRect.left,\n    };\n  }\n\n  handleSubtitleCropping(label: SubtitleLabel) {\n    const labelDomElement = label.getDomElement();\n    const cropDetection = this.detectCroppedSubtitleLabel(\n      labelDomElement.get(0),\n    );\n\n    if (cropDetection.top) {\n      labelDomElement.css('top', '0');\n      labelDomElement.removeCss('bottom');\n    }\n\n    if (cropDetection.right) {\n      labelDomElement.css('right', '0');\n      labelDomElement.removeCss('left');\n    }\n\n    if (cropDetection.bottom) {\n      labelDomElement.css('bottom', '0');\n      labelDomElement.removeCss('top');\n    }\n\n    if (cropDetection.left) {\n      labelDomElement.css('left', '0');\n      labelDomElement.removeCss('right');\n    }\n  }\n\n  generateLabel(event: SubtitleCueEvent): SubtitleLabel {\n    // Sanitize cue data (must be done before the cue ID is generated in subtitleManager.cueEnter / update)\n    if (event.position) {\n      // Sometimes the positions are undefined, we assume them to be zero\n      event.position.row = event.position.row || 0;\n      event.position.column = event.position.column || 0;\n    }\n\n    const label = new SubtitleLabel({\n      // Prefer the HTML subtitle text if set, else try generating a image tag as string from the image attribute,\n      // else use the plain text\n      text: event.html || ActiveSubtitleManager.generateImageTagText(event.image) || event.text,\n      vtt: event.vtt,\n      region: event.region,\n      regionStyle: event.regionStyle,\n    });\n\n    return label;\n  }\n\n  configureCea608Captions(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    // The calculated font size\n    let fontSize = 0;\n    // The required letter spacing spread the text characters evenly across the grid\n    let fontLetterSpacing = 0;\n    // Flag telling if a font size calculation is required of if the current values are valid\n    let fontSizeCalculationRequired = true;\n    // Flag telling if the CEA-608 mode is enabled\n    let enabled = false;\n\n    const updateCEA608FontSize = () => {\n      const dummyLabel = new SubtitleLabel({ text: 'X' });\n      dummyLabel.getDomElement().css({\n        // By using a large font size we do not need to use multiple letters and can get still an\n        // accurate measurement even though the returned size is an integer value\n        'font-size': '200px',\n        'line-height': '200px',\n        'visibility': 'hidden',\n      });\n      this.addComponent(dummyLabel);\n      this.updateComponents();\n      this.show();\n\n      const dummyLabelCharWidth = dummyLabel.getDomElement().width();\n      const dummyLabelCharHeight = dummyLabel.getDomElement().height();\n      const fontSizeRatio = dummyLabelCharWidth / dummyLabelCharHeight;\n\n      this.removeComponent(dummyLabel);\n      this.updateComponents();\n      if (!this.subtitleManager.hasCues) {\n        this.hide();\n      }\n\n      // We subtract 1px here to avoid line breaks at the right border of the subtitle overlay that can happen\n      // when texts contain whitespaces. It's probably some kind of pixel rounding issue in the browser's\n      // layouting, but the actual reason could not be determined. Aiming for a target width - 1px would work in\n      // most browsers, but Safari has a \"quantized\" font size rendering with huge steps in between so we need\n      // to subtract some more pixels to avoid line breaks there as well.\n      const subtitleOverlayWidth = this.getDomElement().width() - 10;\n      const subtitleOverlayHeight = this.getDomElement().height();\n\n      // The size ratio of the letter grid\n      const fontGridSizeRatio = (dummyLabelCharWidth * SubtitleOverlay.CEA608_NUM_COLUMNS) /\n        (dummyLabelCharHeight * SubtitleOverlay.CEA608_NUM_ROWS);\n      // The size ratio of the available space for the grid\n      const subtitleOverlaySizeRatio = subtitleOverlayWidth / subtitleOverlayHeight;\n\n      if (subtitleOverlaySizeRatio > fontGridSizeRatio) {\n        // When the available space is wider than the text grid, the font size is simply\n        // determined by the height of the available space.\n        fontSize = subtitleOverlayHeight / SubtitleOverlay.CEA608_NUM_ROWS;\n\n        // Calculate the additional letter spacing required to evenly spread the text across the grid's width\n        const gridSlotWidth = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS;\n        const fontCharWidth = fontSize * fontSizeRatio;\n        fontLetterSpacing = gridSlotWidth - fontCharWidth;\n      } else {\n        // When the available space is not wide enough, texts would vertically overlap if we take\n        // the height as a base for the font size, so we need to limit the height. We do that\n        // by determining the font size by the width of the available space.\n        fontSize = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS / fontSizeRatio;\n        fontLetterSpacing = 0;\n      }\n\n      // Update font-size of all active subtitle labels\n      for (let label of this.getComponents()) {\n        if (label instanceof SubtitleLabel) {\n          label.getDomElement().css({\n            'font-size': `${fontSize}px`,\n            'letter-spacing': `${fontLetterSpacing}px`,\n          });\n        }\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.PlayerResized, () => {\n      if (enabled) {\n        updateCEA608FontSize();\n      } else {\n        fontSizeCalculationRequired = true;\n      }\n    });\n\n    this.preprocessLabelEventCallback.subscribe((event: SubtitleCueEvent, label: SubtitleLabel) => {\n      const isCEA608 = event.position != null;\n      if (!isCEA608) {\n        // Skip all non-CEA608 cues\n        return;\n      }\n\n      if (!enabled) {\n        enabled = true;\n        this.getDomElement().addClass(this.prefixCss(SubtitleOverlay.CLASS_CEA_608));\n\n        // We conditionally update the font size by this flag here to avoid updating every time a subtitle\n        // is added into an empty overlay. Because we reset the overlay when all subtitles are gone, this\n        // would trigger an unnecessary update every time, but it's only required under certain conditions,\n        // e.g. after the player size has changed.\n        if (fontSizeCalculationRequired) {\n          updateCEA608FontSize();\n          fontSizeCalculationRequired = false;\n        }\n      }\n\n      label.getDomElement().css({\n        'left': `${event.position.column * SubtitleOverlay.CEA608_COLUMN_OFFSET}%`,\n        'top': `${event.position.row * SubtitleOverlay.CEA608_ROW_OFFSET}%`,\n        'font-size': `${fontSize}px`,\n        'letter-spacing': `${fontLetterSpacing}px`,\n      });\n    });\n\n    const reset = () => {\n      this.getDomElement().removeClass(this.prefixCss(SubtitleOverlay.CLASS_CEA_608));\n      enabled = false;\n    };\n\n    player.on(player.exports.PlayerEvent.CueExit, () => {\n      if (!this.subtitleManager.hasCues) {\n        // Disable CEA-608 mode when all subtitles are gone (to allow correct formatting and\n        // display of other types of subtitles, e.g. the formatting preview subtitle)\n        reset();\n      }\n    });\n\n    player.on(player.exports.PlayerEvent.SourceUnloaded, reset);\n    player.on(player.exports.PlayerEvent.SubtitleEnabled, reset);\n    player.on(player.exports.PlayerEvent.SubtitleDisabled, reset);\n  }\n\n  enablePreviewSubtitleLabel(): void {\n    if (!this.subtitleManager.hasCues) {\n      this.previewSubtitleActive = true;\n      this.subtitleContainerManager.addLabel(this.previewSubtitle);\n      this.updateComponents();\n      this.show();\n    }\n  }\n\n  removePreviewSubtitleLabel(): void {\n    if (this.previewSubtitleActive) {\n      this.previewSubtitleActive = false;\n      this.subtitleContainerManager.removeLabel(this.previewSubtitle);\n      this.updateComponents();\n    }\n  }\n}\n\ninterface ActiveSubtitleCue {\n  event: SubtitleCueEvent;\n  label: SubtitleLabel;\n}\n\ninterface ActiveSubtitleCueMap {\n  [id: string]: ActiveSubtitleCue[];\n}\n\ninterface SubtitleLabelConfig extends LabelConfig {\n  vtt?: VTTProperties;\n  region?: string;\n  regionStyle?: string;\n}\n\nexport class SubtitleLabel extends Label<SubtitleLabelConfig> {\n\n  constructor(config: SubtitleLabelConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-subtitle-label',\n    }, this.config);\n  }\n\n  get vtt(): VTTProperties {\n    return this.config.vtt;\n  }\n\n  get region(): string {\n    return this.config.region;\n  }\n\n  get regionStyle(): string {\n    return this.config.regionStyle;\n  }\n}\n\nclass ActiveSubtitleManager {\n\n  private activeSubtitleCueMap: ActiveSubtitleCueMap;\n  private activeSubtitleCueCount: number;\n\n  constructor() {\n    this.activeSubtitleCueMap = {};\n    this.activeSubtitleCueCount = 0;\n  }\n\n  /**\n   * Calculates a unique ID for a subtitle cue, which is needed to associate an CueEnter with its CueExit\n   * event so we can remove the correct subtitle in CueExit when multiple subtitles are active at the same time.\n   * The start time plus the text should make a unique identifier, and in the only case where a collision\n   * can happen, two similar texts will be displayed at a similar time and a similar position (or without position).\n   * The start time should always be known, because it is required to schedule the CueEnter event. The end time\n   * must not necessarily be known and therefore cannot be used for the ID.\n   * @param event\n   * @return {string}\n   */\n  private static calculateId(event: SubtitleCueEvent): string {\n    let id = event.start + '-' + event.text;\n\n    if (event.position) {\n      id += '-' + event.position.row + '-' + event.position.column;\n    }\n\n    return id;\n  }\n\n  cueEnter(event: SubtitleCueEvent, label: SubtitleLabel): void {\n    this.addCueToMap(event, label);\n  }\n\n  cueUpdate(event: SubtitleCueEvent, label: SubtitleLabel): SubtitleLabel | undefined {\n    const labelToReplace = this.popCueFromMap(event);\n\n    if (labelToReplace) {\n      this.addCueToMap(event, label);\n      return labelToReplace;\n    }\n\n    return undefined;\n  }\n\n  private addCueToMap(event: SubtitleCueEvent, label: SubtitleLabel): void {\n    let id = ActiveSubtitleManager.calculateId(event);\n\n    // Create array for id if it does not exist\n    this.activeSubtitleCueMap[id] = this.activeSubtitleCueMap[id] || [];\n\n    // Add cue\n    this.activeSubtitleCueMap[id].push({ event, label });\n    this.activeSubtitleCueCount++;\n  }\n\n  private popCueFromMap(event: SubtitleCueEvent): SubtitleLabel | undefined {\n    let id = ActiveSubtitleManager.calculateId(event);\n    let activeSubtitleCues = this.activeSubtitleCueMap[id];\n\n    if (activeSubtitleCues && activeSubtitleCues.length > 0) {\n      // Remove cue\n      /* We apply the FIFO approach here and remove the oldest cue from the associated id. When there are multiple cues\n       * with the same id, there is no way to know which one of the cues is to be deleted, so we just hope that FIFO\n       * works fine. Theoretically it can happen that two cues with colliding ids are removed at different times, in\n       * the wrong order. This rare case has yet to be observed. If it ever gets an issue, we can take the unstable\n       * cue end time (which can change between CueEnter and CueExit IN CueUpdate) and use it as an\n       * additional hint to try and remove the correct one of the colliding cues.\n       */\n      let activeSubtitleCue = activeSubtitleCues.shift();\n      this.activeSubtitleCueCount--;\n\n      return activeSubtitleCue.label;\n    }\n  }\n\n  /**\n   * Removes all active cues which don't enclose the given time\n   * @param time the time for which subtitles should remain\n   */\n  public clearInactiveCues(time: number): ActiveSubtitleCue[] {\n    const removedCues: ActiveSubtitleCue[] = [];\n    Object.keys(this.activeSubtitleCueMap).forEach(key => {\n      const activeCues = this.activeSubtitleCueMap[key];\n      activeCues.forEach(cue => {\n        if (time < cue.event.start || time > cue.event.end) {\n          this.popCueFromMap(cue.event);\n          removedCues.push(cue);\n        }\n      });\n    });\n    return removedCues;\n  }\n\n  static generateImageTagText(imageData: string): string | undefined {\n    if (!imageData) {\n      return;\n    }\n\n    const imgTag = new DOM('img', {\n      src: imageData,\n    });\n    imgTag.css('width', '100%');\n    return imgTag.get(0).outerHTML; // return the html as string\n  }\n\n  /**\n   * Returns the label associated with an already added cue.\n   * @param event\n   * @return {SubtitleLabel}\n   */\n  getCues(event: SubtitleCueEvent): SubtitleLabel[] | undefined {\n    let id = ActiveSubtitleManager.calculateId(event);\n    let activeSubtitleCues = this.activeSubtitleCueMap[id];\n    if (activeSubtitleCues && activeSubtitleCues.length > 0) {\n      return activeSubtitleCues.map((cue) => cue.label);\n    }\n  }\n\n  /**\n   * Removes the subtitle cue from the manager and returns the label that should be removed from the subtitle overlay,\n   * or null if there is no associated label existing (e.g. because all labels have been {@link #clear cleared}.\n   * @param event\n   * @return {SubtitleLabel|null}\n   */\n  cueExit(event: SubtitleCueEvent): SubtitleLabel {\n    return this.popCueFromMap(event);\n  }\n\n  /**\n   * Returns the number of active subtitle cues.\n   * @return {number}\n   */\n  get cueCount(): number {\n    // We explicitly count the cues to save an Array.reduce on every cueCount call (which can happen frequently)\n    return this.activeSubtitleCueCount;\n  }\n\n  /**\n   * Returns true if there are active subtitle cues, else false.\n   * @return {boolean}\n   */\n  get hasCues(): boolean {\n    return this.cueCount > 0;\n  }\n\n  /**\n   * Removes all subtitle cues from the manager.\n   */\n  clear(): void {\n    this.activeSubtitleCueMap = {};\n    this.activeSubtitleCueCount = 0;\n  }\n}\n\nexport class SubtitleRegionContainerManager {\n  private subtitleRegionContainers: { [regionName: string]: SubtitleRegionContainer } = {};\n\n  /**\n   * @param subtitleOverlay Reference to the subtitle overlay for adding and removing the containers.\n   */\n  constructor(private subtitleOverlay: SubtitleOverlay) {\n    this.subtitleOverlay = subtitleOverlay;\n  }\n\n  private getRegion(label: SubtitleLabel): { regionContainerId: string, regionName: string } {\n    if (label.vtt) {\n      return {\n        regionContainerId: label.vtt.region && label.vtt.region.id ? label.vtt.region.id : 'vtt',\n        regionName: 'vtt',\n      };\n    }\n\n    return {\n      regionContainerId: label.region || 'default',\n      regionName: label.region || 'default',\n    };\n  }\n\n  /**\n   * Creates and wraps a subtitle label into a container div based on the subtitle region.\n   * If the subtitle has positioning information it is added to the container.\n   * @param label The subtitle label to wrap\n   */\n  addLabel(label: SubtitleLabel, overlaySize?: Size): void {\n    const { regionContainerId, regionName } = this.getRegion(label);\n    const cssClasses = [`subtitle-position-${regionName}`];\n\n    if (label.vtt && label.vtt.region) {\n      cssClasses.push(`vtt-region-${label.vtt.region.id}`);\n    }\n\n    if (!this.subtitleRegionContainers[regionContainerId]) {\n      const regionContainer = new SubtitleRegionContainer({\n        cssClasses,\n      });\n\n      this.subtitleRegionContainers[regionContainerId] = regionContainer;\n\n      if (label.regionStyle) {\n        regionContainer.getDomElement().attr('style', label.regionStyle);\n      } else if (label.vtt && !label.vtt.region) {\n        /**\n         * If there is no region present to wrap the Cue Box, the Cue box becomes the\n         * region itself. Therefore the positioning values have to come from the box.\n         */\n        regionContainer.getDomElement().css('position', 'static');\n      } else {\n        // getDomElement needs to be called at least once to ensure the component exists\n        regionContainer.getDomElement();\n      }\n\n      for (const regionContainerId in this.subtitleRegionContainers) {\n        this.subtitleOverlay.addComponent(this.subtitleRegionContainers[regionContainerId]);\n      }\n    }\n\n    this.subtitleRegionContainers[regionContainerId].addLabel(label, overlaySize);\n  }\n\n  replaceLabel(previousLabel: SubtitleLabel, newLabel: SubtitleLabel): void {\n    const { regionContainerId } = this.getRegion(previousLabel);\n\n    this.subtitleRegionContainers[regionContainerId].removeLabel(previousLabel);\n    this.subtitleRegionContainers[regionContainerId].addLabel(newLabel);\n  }\n\n  /**\n   * Removes a subtitle label from a container.\n   */\n  removeLabel(label: SubtitleLabel): void {\n    let regionContainerId;\n\n    if (label.vtt) {\n      regionContainerId = label.vtt.region && label.vtt.region.id ? label.vtt.region.id : 'vtt';\n    } else {\n      regionContainerId = label.region || 'default';\n    }\n\n    this.subtitleRegionContainers[regionContainerId].removeLabel(label);\n\n    // Remove container if no more labels are displayed\n    if (this.subtitleRegionContainers[regionContainerId].isEmpty()) {\n      this.subtitleOverlay.removeComponent(this.subtitleRegionContainers[regionContainerId]);\n      delete this.subtitleRegionContainers[regionContainerId];\n    }\n  }\n\n  /**\n   * Removes all subtitle containers.\n   */\n  clear(): void {\n    for (const regionName in this.subtitleRegionContainers) {\n      this.subtitleOverlay.removeComponent(this.subtitleRegionContainers[regionName]);\n    }\n\n    this.subtitleRegionContainers = {};\n  }\n}\n\nexport class SubtitleRegionContainer extends Container<ContainerConfig> {\n  private labelCount = 0;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'subtitle-region-container',\n    }, this.config);\n  }\n\n  addLabel(labelToAdd: SubtitleLabel, overlaySize?: Size) {\n    this.labelCount++;\n\n    if (labelToAdd.vtt) {\n      if (labelToAdd.vtt.region && overlaySize) {\n        VttUtils.setVttRegionStyles(this, labelToAdd.vtt.region, overlaySize);\n      }\n\n      VttUtils.setVttCueBoxStyles(labelToAdd, overlaySize);\n    }\n\n    this.addComponent(labelToAdd);\n    this.updateComponents();\n  }\n\n  removeLabel(labelToRemove: SubtitleLabel): void {\n    this.labelCount--;\n    this.removeComponent(labelToRemove);\n    this.updateComponents();\n  }\n\n  public isEmpty(): boolean {\n    return this.labelCount === 0;\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport {SubtitleSwitchHandler} from '../subtitleutils';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection between available subtitle and caption tracks.\n *\n * @category Components\n */\nexport class SubtitleSelectBox extends SelectBox {\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitleselectbox'],\n      ariaLabel: i18n.getLocalizer('subtitle.select'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    new SubtitleSwitchHandler(player, this, uimanager);\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background colors.\n *\n * @category Components\n */\nexport class BackgroundColorSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsbackgroundcolorselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('white', i18n.getLocalizer('colors.white'));\n    this.addItem('black', i18n.getLocalizer('colors.black'));\n    this.addItem('red', i18n.getLocalizer('colors.red'));\n    this.addItem('green', i18n.getLocalizer('colors.green'));\n    this.addItem('blue', i18n.getLocalizer('colors.blue'));\n    this.addItem('cyan', i18n.getLocalizer('colors.cyan'));\n    this.addItem('yellow', i18n.getLocalizer('colors.yellow'));\n    this.addItem('magenta', i18n.getLocalizer('colors.magenta'));\n\n    let setColorAndOpacity = () => {\n      if (this.settingsManager.backgroundColor.isSet() && this.settingsManager.backgroundOpacity.isSet()) {\n        this.toggleOverlayClass(\n          'bgcolor-' + this.settingsManager.backgroundColor.value + this.settingsManager.backgroundOpacity.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n    };\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.backgroundColor.value = key;\n    });\n\n    this.settingsManager.backgroundColor.onChanged.subscribe((sender, property) => {\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.backgroundColor.isSet()) {\n        // ... clear the opacity when the color is not set\n        this.settingsManager.backgroundOpacity.clear();\n      } else if (!this.settingsManager.backgroundOpacity.isSet()) {\n        // ... set an opacity when the color is set\n        this.settingsManager.backgroundOpacity.value = '100';\n      }\n      this.selectItem(property.value);\n      setColorAndOpacity();\n    });\n\n    this.settingsManager.backgroundOpacity.onChanged.subscribe(() => {\n      setColorAndOpacity();\n    });\n\n    // Load initial value\n    if (this.settingsManager.backgroundColor.isSet()) {\n      this.selectItem(this.settingsManager.backgroundColor.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background opacity.\n *\n * @category Components\n */\nexport class BackgroundOpacitySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsbackgroundopacityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('25', i18n.getLocalizer('percent', { value: 25 }));\n    this.addItem('0', i18n.getLocalizer('percent', { value: 0 }));\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.backgroundOpacity.value = key;\n\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.backgroundOpacity.isSet()) {\n        // ... clear the color when the opacity is not set\n        this.settingsManager.backgroundColor.clear();\n      } else if (!this.settingsManager.backgroundColor.isSet()) {\n        // ... set a color when the opacity is set\n        this.settingsManager.backgroundColor.value = 'black';\n      }\n    });\n\n    // Update selected item when value is set from somewhere else\n    this.settingsManager.backgroundOpacity.onChanged.subscribe((sender, property) => {\n      this.selectItem(property.value);\n    });\n\n    // Load initial value\n    if (this.settingsManager.backgroundOpacity.isSet()) {\n      this.selectItem(this.settingsManager.backgroundOpacity.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different character edge.\n *\n * @category Components\n */\nexport class CharacterEdgeSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingscharacteredgeselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('raised', i18n.getLocalizer('settings.subtitles.characterEdge.raised'));\n    this.addItem('depressed', i18n.getLocalizer('settings.subtitles.characterEdge.depressed'));\n    this.addItem('uniform', i18n.getLocalizer('settings.subtitles.characterEdge.uniform'));\n    this.addItem('dropshadowed', i18n.getLocalizer('settings.subtitles.characterEdge.dropshadowed'));\n\n    this.settingsManager.characterEdge.onChanged.subscribe((sender, property) => {\n      if (property.isSet()) {\n        this.toggleOverlayClass('characteredge-' + property.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n\n      // Select the item in case the property was set from outside\n      this.selectItem(property.value);\n    });\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.characterEdge.value = key;\n    });\n\n    // Load initial value\n    if (this.settingsManager.characterEdge.isSet()) {\n      this.selectItem(this.settingsManager.characterEdge.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font colors.\n *\n * @category Components\n */\nexport class FontColorSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontcolorselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('white', i18n.getLocalizer('colors.white'));\n    this.addItem('black', i18n.getLocalizer('colors.black'));\n    this.addItem('red', i18n.getLocalizer('colors.red'));\n    this.addItem('green', i18n.getLocalizer('colors.green'));\n    this.addItem('blue', i18n.getLocalizer('colors.blue'));\n    this.addItem('cyan', i18n.getLocalizer('colors.cyan'));\n    this.addItem('yellow', i18n.getLocalizer('colors.yellow'));\n    this.addItem('magenta', i18n.getLocalizer('colors.magenta'));\n\n    let setColorAndOpacity = () => {\n      if (this.settingsManager.fontColor.isSet() && this.settingsManager.fontOpacity.isSet()) {\n        this.toggleOverlayClass(\n          'fontcolor-' + this.settingsManager.fontColor.value + this.settingsManager.fontOpacity.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n    };\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontColor.value = key;\n    });\n\n    this.settingsManager.fontColor.onChanged.subscribe((sender, property) => {\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.fontColor.isSet()) {\n        // ... clear the opacity when the color is not set\n        this.settingsManager.fontOpacity.clear();\n      } else if (!this.settingsManager.fontOpacity.isSet()) {\n        // ... set an opacity when the color is set\n        this.settingsManager.fontOpacity.value = '100';\n      }\n      this.selectItem(property.value);\n      setColorAndOpacity();\n    });\n\n    this.settingsManager.fontOpacity.onChanged.subscribe(() => {\n      setColorAndOpacity();\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontColor.isSet()) {\n      this.selectItem(this.settingsManager.fontColor.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font family.\n *\n * @category Components\n */\nexport class FontFamilySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontfamilyselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('monospacedserif', i18n.getLocalizer('settings.subtitles.font.family.monospacedserif'));\n    this.addItem('proportionalserif', i18n.getLocalizer('settings.subtitles.font.family.proportionalserif'));\n    this.addItem('monospacedsansserif', i18n.getLocalizer('settings.subtitles.font.family.monospacedsansserif'));\n    this.addItem('proportionalsansserif', i18n.getLocalizer('settings.subtitles.font.family.proportionalsansserif'));\n    this.addItem('casual', i18n.getLocalizer('settings.subtitles.font.family.casual'));\n    this.addItem('cursive', i18n.getLocalizer('settings.subtitles.font.family.cursive'));\n    this.addItem('smallcapital', i18n.getLocalizer('settings.subtitles.font.family.smallcapital'));\n\n    this.settingsManager.fontFamily.onChanged.subscribe((sender, property) => {\n      if (property.isSet()) {\n        this.toggleOverlayClass('fontfamily-' + property.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n\n      // Select the item in case the property was set from outside\n      this.selectItem(property.value);\n    });\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontFamily.value = key;\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontFamily.isSet()) {\n      this.selectItem(this.settingsManager.fontFamily.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font colors.\n *\n * @category Components\n */\nexport class FontOpacitySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontopacityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('25', i18n.getLocalizer('percent', { value: 25 }));\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontOpacity.value = key;\n\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.fontOpacity.isSet()) {\n        // ... clear the color when the opacity is not set\n        this.settingsManager.fontColor.clear();\n      } else if (!this.settingsManager.fontColor.isSet()) {\n        // ... set a color when the opacity is set\n        this.settingsManager.fontColor.value = 'white';\n      }\n    });\n\n    // Update selected item when value is set from somewhere else\n    this.settingsManager.fontOpacity.onChanged.subscribe((sender, property) => {\n      this.selectItem(property.value);\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontOpacity.isSet()) {\n      this.selectItem(this.settingsManager.fontOpacity.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font colors.\n *\n * @category Components\n */\nexport class FontSizeSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontsizeselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('150', i18n.getLocalizer('percent', { value: 150 }));\n    this.addItem('200', i18n.getLocalizer('percent', { value: 200 }));\n    this.addItem('300', i18n.getLocalizer('percent', { value: 300 }));\n    this.addItem('400', i18n.getLocalizer('percent', { value: 400 }));\n\n    this.settingsManager.fontSize.onChanged.subscribe((sender, property) => {\n      if (property.isSet()) {\n        this.toggleOverlayClass('fontsize-' + property.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n\n      // Select the item in case the property was set from outside\n      this.selectItem(property.value);\n    });\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontSize.value = key;\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontSize.isSet()) {\n      this.selectItem(this.settingsManager.fontSize.value);\n    }\n  }\n}\n","import {SubtitleOverlay} from '../subtitleoverlay';\nimport {ListSelectorConfig} from '../listselector';\nimport {SelectBox} from '../selectbox';\nimport {SubtitleSettingsManager} from './subtitlesettingsmanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../../uimanager';\n\n/**\n * @category Configs\n */\nexport interface SubtitleSettingSelectBoxConfig extends ListSelectorConfig {\n  overlay: SubtitleOverlay;\n}\n\n/**\n * Base class for all subtitles settings select box\n *\n * @category Components\n **/\nexport class SubtitleSettingSelectBox extends SelectBox {\n\n  protected settingsManager?: SubtitleSettingsManager;\n  protected overlay: SubtitleOverlay;\n  private currentCssClass: string;\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.overlay = config.overlay;\n  }\n\n  /**\n   * Removes a previously set class and adds the passed in class.\n   * @param cssClass The new class to replace the previous class with or null to just remove the previous class\n   */\n  protected toggleOverlayClass(cssClass: string): void {\n    // Remove previous class if existing\n    if (this.currentCssClass) {\n      this.overlay.getDomElement().removeClass(this.currentCssClass);\n      this.currentCssClass = null;\n    }\n\n    // Add new class if specified. If the new class is null, we don't add anything.\n    if (cssClass) {\n      this.currentCssClass = this.prefixCss(cssClass);\n      this.overlay.getDomElement().addClass(this.currentCssClass);\n    }\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n      this.settingsManager = uimanager.getSubtitleSettingsManager();\n  }\n}\n","import {LabelConfig} from '../label';\nimport {Container, ContainerConfig} from '../container';\nimport {DOM} from '../../dom';\nimport {SettingsPanelPageOpenButton} from '../settingspanelpageopenbutton';\nimport { LocalizableText, i18n } from '../../localization/i18n';\n\n/**\n * @category Configs\n */\nexport interface SubtitleSettingsLabelConfig extends LabelConfig {\n  opener: SettingsPanelPageOpenButton;\n}\n\n/**\n * @category Components\n */\nexport class SubtitleSettingsLabel extends Container<ContainerConfig> {\n\n  private opener: SettingsPanelPageOpenButton;\n\n  private text: LocalizableText;\n\n  private for: string;\n\n  constructor(config: SubtitleSettingsLabelConfig) {\n    super(config);\n\n    this.opener = config.opener;\n    this.text = config.text;\n    this.for = config.for;\n\n    this.config = this.mergeConfig(<ContainerConfig>config, {\n      cssClass: 'ui-label',\n      components: [\n        this.opener,\n      ],\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    let labelElement = new DOM('label', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'for': this.for,\n    }, this).append(\n      new DOM('span', {}).html(i18n.performLocalization(this.text)),\n      this.opener.getDomElement(),\n    );\n\n    return labelElement;\n  }\n}\n","import { StorageUtils } from '../../storageutils';\nimport { Component, ComponentConfig } from '../component';\nimport { EventDispatcher, Event } from '../../eventdispatcher';\n\ninterface SubtitleSettings {\n  fontColor?: string;\n  fontOpacity?: string;\n  fontFamily?: string;\n  fontSize?: string;\n  characterEdge?: string;\n  backgroundColor?: string;\n  backgroundOpacity?: string;\n  windowColor?: string;\n  windowOpacity?: string;\n}\n\ninterface Properties {\n  [name: string]: SubtitleSettingsProperty<string>;\n}\n\n/**\n * @category Utils\n */\nexport class SubtitleSettingsManager {\n  private userSettings: SubtitleSettings;\n  private localStorageKey: string;\n\n  private _properties: Properties = {\n    fontColor: new SubtitleSettingsProperty<string>(this),\n    fontOpacity: new SubtitleSettingsProperty<string>(this),\n    fontFamily: new SubtitleSettingsProperty<string>(this),\n    fontSize: new SubtitleSettingsProperty<string>(this),\n    characterEdge: new SubtitleSettingsProperty<string>(this),\n    backgroundColor: new SubtitleSettingsProperty<string>(this),\n    backgroundOpacity: new SubtitleSettingsProperty<string>(this),\n    windowColor: new SubtitleSettingsProperty<string>(this),\n    windowOpacity: new SubtitleSettingsProperty<string>(this),\n  };\n\n  constructor() {\n    this.userSettings = {};\n    this.localStorageKey =\n      DummyComponent.instance().prefixCss('subtitlesettings');\n  }\n\n  public reset(): void {\n    for (let propertyName in this._properties) {\n      this._properties[propertyName].clear();\n    }\n  }\n\n  public get fontColor(): SubtitleSettingsProperty<string> {\n    return this._properties.fontColor;\n  }\n\n  public get fontOpacity(): SubtitleSettingsProperty<string> {\n    return this._properties.fontOpacity;\n  }\n\n  public get fontFamily(): SubtitleSettingsProperty<string> {\n    return this._properties.fontFamily;\n  }\n\n  public get fontSize(): SubtitleSettingsProperty<string> {\n    return this._properties.fontSize;\n  }\n\n  public get characterEdge(): SubtitleSettingsProperty<string> {\n    return this._properties.characterEdge;\n  }\n\n  public get backgroundColor(): SubtitleSettingsProperty<string> {\n    return this._properties.backgroundColor;\n  }\n\n  public get backgroundOpacity(): SubtitleSettingsProperty<string> {\n    return this._properties.backgroundOpacity;\n  }\n\n  public get windowColor(): SubtitleSettingsProperty<string> {\n    return this._properties.windowColor;\n  }\n\n  public get windowOpacity(): SubtitleSettingsProperty<string> {\n    return this._properties.windowOpacity;\n  }\n\n  public initialize() {\n    for (let propertyName in this._properties) {\n      this._properties[propertyName].onChanged.subscribe((sender, property) => {\n        if (property.isSet()) {\n          (<any>this.userSettings)[propertyName] = property.value;\n        } else {\n          // Delete the property from the settings object if unset to avoid serialization of null values\n          delete (<any>this.userSettings)[propertyName];\n        }\n\n        // Save the settings object when a property has changed\n        this.save();\n      });\n    }\n\n    this.load();\n  }\n\n  /**\n   * Saves the settings to local storage.\n   */\n  public save(): void {\n    StorageUtils.setObject(this.localStorageKey, this.userSettings);\n  }\n\n  /**\n   * Loads the settings from local storage\n   */\n  public load(): void {\n    this.userSettings =\n      StorageUtils.getObject<SubtitleSettings>(this.localStorageKey) || {};\n\n    // Apply the loaded settings\n    for (let property in this.userSettings) {\n      this._properties[property].value = (<any>this.userSettings)[property];\n    }\n  }\n}\n\n/**\n * A dummy component whose sole purpose is to expose the {@link #prefixCss} method to the\n * {@link SubtitleSettingsManager}.\n */\nclass DummyComponent extends Component<ComponentConfig> {\n  private static _instance: DummyComponent;\n\n  public static instance(): DummyComponent {\n    if (!DummyComponent._instance) {\n      DummyComponent._instance = new DummyComponent();\n    }\n\n    return DummyComponent._instance;\n  }\n\n  public prefixCss(cssClassOrId: string): string {\n    return super.prefixCss(cssClassOrId);\n  }\n}\n\nexport class SubtitleSettingsProperty<T> {\n  private _manager: SubtitleSettingsManager;\n  private _onChanged: EventDispatcher<\n    SubtitleSettingsManager,\n    SubtitleSettingsProperty<T>\n  >;\n  private _value: T;\n\n  constructor(manager: SubtitleSettingsManager) {\n    this._manager = manager;\n    this._onChanged = new EventDispatcher<\n      SubtitleSettingsManager,\n      SubtitleSettingsProperty<T>\n    >();\n  }\n\n  public isSet(): boolean {\n    return this._value != null;\n  }\n\n  public clear(): void {\n    this._value = null;\n    this.onChangedEvent(null);\n  }\n\n  public get value(): T {\n    return this._value;\n  }\n\n  public set value(value: T) {\n    if (typeof value === 'string' && value === 'null') {\n      value = null;\n    }\n\n    this._value = value;\n    this.onChangedEvent(value);\n  }\n\n  protected onChangedEvent(value: T) {\n    this._onChanged.dispatch(this._manager, this);\n  }\n\n  public get onChanged(): Event<\n    SubtitleSettingsManager,\n    SubtitleSettingsProperty<T>\n  > {\n    return this._onChanged.getEvent();\n  }\n}\n","import {SettingsPanelPage} from '../settingspanelpage';\nimport {SettingsPanel} from '../settingspanel';\nimport {SubtitleOverlay} from '../subtitleoverlay';\nimport {ContainerConfig} from '../container';\nimport {SubtitleSettingsManager} from './subtitlesettingsmanager';\nimport {Component, ComponentConfig} from '../component';\nimport {FontSizeSelectBox} from './fontsizeselectbox';\nimport {FontFamilySelectBox} from './fontfamilyselectbox';\nimport {FontColorSelectBox} from './fontcolorselectbox';\nimport {FontOpacitySelectBox} from './fontopacityselectbox';\nimport {CharacterEdgeSelectBox} from './characteredgeselectbox';\nimport {BackgroundColorSelectBox} from './backgroundcolorselectbox';\nimport {BackgroundOpacitySelectBox} from './backgroundopacityselectbox';\nimport {WindowColorSelectBox} from './windowcolorselectbox';\nimport {WindowOpacitySelectBox} from './windowopacityselectbox';\nimport {SubtitleSettingsResetButton} from './subtitlesettingsresetbutton';\nimport {UIInstanceManager} from '../../uimanager';\nimport {SettingsPanelPageBackButton} from '../settingspanelpagebackbutton';\nimport {SettingsPanelItem} from '../settingspanelitem';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * @category Configs\n */\nexport interface SubtitleSettingsPanelPageConfig extends ContainerConfig {\n  settingsPanel: SettingsPanel;\n  overlay: SubtitleOverlay;\n}\n\n/**\n * @category Components\n */\nexport class SubtitleSettingsPanelPage extends SettingsPanelPage {\n\n  private readonly overlay: SubtitleOverlay;\n  private readonly settingsPanel: SettingsPanel;\n\n  constructor(config: SubtitleSettingsPanelPageConfig) {\n    super(config);\n\n    this.overlay = config.overlay;\n    this.settingsPanel = config.settingsPanel;\n\n\n    this.config = this.mergeConfig(config, {\n      components: <Component<ComponentConfig>[]>[\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.size'), new FontSizeSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.family'), new FontFamilySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.color'), new FontColorSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.opacity'), new FontOpacitySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.characterEdge'), new CharacterEdgeSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.background.color'), new BackgroundColorSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.background.opacity'), new BackgroundOpacitySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.window.color'), new WindowColorSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.window.opacity'), new WindowOpacitySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(new SettingsPanelPageBackButton({\n          container: this.settingsPanel,\n          text: i18n.getLocalizer('back'),\n        }), new SubtitleSettingsResetButton({}), {\n          role: 'menubar',\n        }),\n      ],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onActive.subscribe(() => {\n      this.overlay.enablePreviewSubtitleLabel();\n    });\n\n    this.onInactive.subscribe(() => {\n      this.overlay.removePreviewSubtitleLabel();\n    });\n  }\n}","import {UIInstanceManager} from '../../uimanager';\nimport {SubtitleSettingsManager} from './subtitlesettingsmanager';\nimport {Button, ButtonConfig} from '../button';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A button that resets all subtitle settings to their defaults.\n *\n * @category Buttons\n */\nexport class SubtitleSettingsResetButton extends Button<ButtonConfig> {\n\n  private settingsManager: SubtitleSettingsManager;\n\n  constructor(config: ButtonConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-subtitlesettingsresetbutton',\n      text: i18n.getLocalizer('reset'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    this.settingsManager = uimanager.getSubtitleSettingsManager();\n\n    this.onClick.subscribe(() => {\n      this.settingsManager.reset();\n    });\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background colors.\n *\n * @category Components\n */\nexport class WindowColorSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingswindowcolorselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('white', i18n.getLocalizer('colors.white'));\n    this.addItem('black', i18n.getLocalizer('colors.black'));\n    this.addItem('red', i18n.getLocalizer('colors.red'));\n    this.addItem('green', i18n.getLocalizer('colors.green'));\n    this.addItem('blue', i18n.getLocalizer('colors.blue'));\n    this.addItem('cyan', i18n.getLocalizer('colors.cyan'));\n    this.addItem('yellow', i18n.getLocalizer('colors.yellow'));\n    this.addItem('magenta', i18n.getLocalizer('colors.magenta'));\n\n\n\n    let setColorAndOpacity = () => {\n      if (this.settingsManager.windowColor.isSet() && this.settingsManager.windowOpacity.isSet()) {\n        this.toggleOverlayClass(\n          'windowcolor-' + this.settingsManager.windowColor.value + this.settingsManager.windowOpacity.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n    };\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.windowColor.value = key;\n    });\n\n    this.settingsManager.windowColor.onChanged.subscribe((sender, property) => {\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.windowColor.isSet()) {\n        // ... clear the opacity when the color is not set\n        this.settingsManager.windowOpacity.clear();\n      } else if (!this.settingsManager.windowOpacity.isSet()) {\n        // ... set an opacity when the color is set\n        this.settingsManager.windowOpacity.value = '100';\n      }\n      this.selectItem(property.value);\n      setColorAndOpacity();\n    });\n\n    this.settingsManager.windowOpacity.onChanged.subscribe(() => {\n      setColorAndOpacity();\n    });\n\n    // Load initial value\n    if (this.settingsManager.windowColor.isSet()) {\n      this.selectItem(this.settingsManager.windowColor.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background opacity.\n *\n * @category Components\n */\nexport class WindowOpacitySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingswindowopacityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('25', i18n.getLocalizer('percent', { value: 25 }));\n    this.addItem('0', i18n.getLocalizer('percent', { value: 0 }));\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.windowOpacity.value = key;\n\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.windowOpacity.isSet()) {\n        // ... clear the color when the opacity is not set\n        this.settingsManager.windowColor.clear();\n      } else if (!this.settingsManager.windowColor.isSet()) {\n        // ... set a color when the opacity is set\n        this.settingsManager.windowColor.value = 'black';\n      }\n    });\n\n    // Update selected item when value is set from somewhere else\n    this.settingsManager.windowOpacity.onChanged.subscribe((sender, property) => {\n      this.selectItem(property.value);\n    });\n\n    // Load initial value\n    if (this.settingsManager.windowOpacity.isSet()) {\n      this.selectItem(this.settingsManager.windowOpacity.value);\n    }\n  }\n}\n","import { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { DOM } from '../dom';\nimport { ComponentConfig } from './component';\nimport { TimelineMarker } from '../uiconfig';\nimport { SeekBarMarker } from './seekbar';\nimport { PlayerUtils } from '../playerutils';\nimport { Timeout } from '../timeout';\n\n/**\n * @category Configs\n */\nexport interface MarkersConfig extends ComponentConfig {\n  /**\n   * Used for seekBar marker snapping range percentage\n   */\n  snappingRange?: number;\n}\n\nexport class TimelineMarkersHandler {\n  private markersContainer: DOM;\n  private timelineMarkers: SeekBarMarker[];\n  private player: PlayerAPI;\n  private uimanager: UIInstanceManager;\n  private pausedTimeshiftUpdater: Timeout;\n  private getSeekBarWidth: () => number;\n  protected config: MarkersConfig;\n\n  constructor(config: MarkersConfig, getSeekBarWidth: () => number, markersContainer: DOM) {\n    this.config = config;\n    this.getSeekBarWidth = getSeekBarWidth;\n    this.markersContainer = markersContainer;\n    this.timelineMarkers = [];\n  }\n\n  public initialize(player: PlayerAPI, uimanager: UIInstanceManager) {\n    this.player = player;\n    this.uimanager = uimanager;\n    this.configureMarkers();\n  }\n\n  private configureMarkers(): void {\n    // Remove markers when unloaded\n    this.player.on(this.player.exports.PlayerEvent.SourceUnloaded, () => this.clearMarkers());\n    this.player.on(this.player.exports.PlayerEvent.AdBreakStarted, () => this.clearMarkers());\n    this.player.on(this.player.exports.PlayerEvent.AdBreakFinished, () => this.updateMarkers());\n    // Update markers when the size of the seekbar changes\n    this.player.on(this.player.exports.PlayerEvent.PlayerResized, () => this.updateMarkersDOM());\n\n    this.player.on(this.player.exports.PlayerEvent.SourceLoaded, () => {\n      if (this.player.isLive()) {\n        // Update marker position as timeshift range changes\n        this.player.on(this.player.exports.PlayerEvent.TimeChanged, () => this.updateMarkers());\n        // Update marker postion when paused as timeshift range changes\n        this.configureLivePausedTimeshiftUpdater(() => this.updateMarkers());\n      }\n    });\n    this.uimanager.getConfig().events.onUpdated.subscribe(() => this.updateMarkers());\n    this.uimanager.onRelease.subscribe(() => this.uimanager.getConfig().events.onUpdated.unsubscribe(() => this.updateMarkers()));\n\n    // Init markers at startup\n    this.updateMarkers();\n  }\n\n  public getMarkerAtPosition(percentage: number): SeekBarMarker | null {\n    const snappingRange = this.config.snappingRange;\n\n    const matchingMarker = this.timelineMarkers.find(marker => {\n      const hasDuration = marker.duration > 0;\n      // Handle interval markers\n      const intervalMarkerMatch =\n        hasDuration &&\n        percentage >= marker.position - snappingRange &&\n        percentage <= marker.position + marker.duration + snappingRange;\n\n      // Handle position markers\n      const positionMarkerMatch =\n        percentage >= marker.position - snappingRange &&\n        percentage <= marker.position + snappingRange;\n\n      return intervalMarkerMatch || positionMarkerMatch;\n    });\n\n    return matchingMarker || null;\n  }\n\n  private clearMarkers(): void {\n    this.timelineMarkers = [];\n    this.markersContainer.empty();\n  }\n\n  private removeMarkerFromConfig(marker: TimelineMarker): void {\n    this.uimanager.getConfig().metadata.markers = this.uimanager.getConfig().metadata.markers.filter(_marker => marker !== _marker);\n  }\n\n  private filterRemovedMarkers(): void {\n    this.timelineMarkers = this.timelineMarkers.filter(seekbarMarker => {\n      const matchingMarker = this.uimanager.getConfig().metadata.markers.find(_marker => seekbarMarker.marker === _marker);\n      if (!matchingMarker) {\n        this.removeMarkerFromDOM(seekbarMarker);\n      }\n      return matchingMarker;\n    });\n  }\n\n  private removeMarkerFromDOM(marker: SeekBarMarker): void {\n    if (marker.element) {\n      marker.element.remove();\n    }\n  }\n\n  private updateMarkers(): void {\n    if (!shouldProcessMarkers(this.player, this.uimanager)) {\n      this.clearMarkers();\n      return;\n    }\n\n    this.filterRemovedMarkers();\n\n    this.uimanager.getConfig().metadata.markers.forEach(marker => {\n      const { markerPosition, markerDuration } = getMarkerPositions(this.player, marker);\n\n      if (shouldRemoveMarker(markerPosition, markerDuration)) {\n        this.removeMarkerFromConfig(marker);\n      } else if (markerPosition <= 100) {\n        const matchingMarker = this.timelineMarkers.find(seekbarMarker => seekbarMarker.marker === marker);\n\n        if (matchingMarker) {\n          matchingMarker.position = markerPosition;\n          matchingMarker.duration = markerDuration;\n\n          this.updateMarkerDOM(matchingMarker);\n        } else {\n          const newMarker: SeekBarMarker = { marker, position: markerPosition, duration: markerDuration };\n          this.timelineMarkers.push(newMarker);\n\n          this.createMarkerDOM(newMarker);\n        }\n      }\n    });\n  }\n\n  private getMarkerCssProperties(marker: SeekBarMarker): { [propertyName: string]: string } {\n    const seekBarWidthPx = this.getSeekBarWidth();\n\n    const positionInPx = (seekBarWidthPx / 100) * (marker.position < 0 ? 0 : marker.position);\n    const cssProperties: { [propertyName: string]: string } = {\n      'transform': `translateX(${positionInPx}px)`,\n    };\n\n    if (marker.duration > 0) {\n      const markerWidthPx = Math.round(seekBarWidthPx / 100 * marker.duration);\n      cssProperties['width'] = `${markerWidthPx}px`;\n    }\n\n    return cssProperties;\n  }\n\n  private updateMarkerDOM(marker: SeekBarMarker): void {\n    marker.element.css(this.getMarkerCssProperties(marker));\n  }\n\n  private createMarkerDOM(marker: SeekBarMarker): void {\n    const markerClasses = ['seekbar-marker'].concat(marker.marker.cssClasses || [])\n      .map(cssClass => this.prefixCss(cssClass));\n\n    const markerElement = new DOM('div', {\n      'class': markerClasses.join(' '),\n      'data-marker-time': String(marker.marker.time),\n      'data-marker-title': String(marker.marker.title),\n    }).css(this.getMarkerCssProperties(marker));\n\n    if (marker.marker.imageUrl) {\n      const removeImage = () => {\n        imageElement.remove();\n      };\n\n      const imageElement = new DOM('img', {\n        'class': this.prefixCss('seekbar-marker-image'),\n        'src': marker.marker.imageUrl,\n      }).on('error', removeImage);\n\n      markerElement.append(imageElement);\n    }\n\n    marker.element = markerElement;\n    this.markersContainer.append(markerElement);\n  }\n\n  private updateMarkersDOM(): void {\n    this.timelineMarkers.forEach(marker => {\n      if (marker.element) {\n        this.updateMarkerDOM(marker);\n      } else {\n        this.createMarkerDOM(marker);\n      }\n    });\n  }\n\n  private configureLivePausedTimeshiftUpdater(\n    handler: () => void,\n  ): void {\n    // Regularly update the marker position while the timeout is active\n    this.pausedTimeshiftUpdater = new Timeout(1000, handler, true);\n\n    this.player.on(this.player.exports.PlayerEvent.Paused, () => {\n      if (this.player.isLive() && this.player.getMaxTimeShift() < 0) {\n        this.pausedTimeshiftUpdater.start();\n      }\n    });\n\n    // Stop updater when playback continues (no matter if the updater was started before)\n    this.player.on(this.player.exports.PlayerEvent.Play, () => this.pausedTimeshiftUpdater.clear());\n    this.player.on(this.player.exports.PlayerEvent.Destroy, () => this.pausedTimeshiftUpdater.clear());\n  }\n\n  protected prefixCss(cssClassOrId: string): string {\n    return this.config.cssPrefix + '-' + cssClassOrId;\n  }\n}\n\nfunction getMarkerPositions(player: PlayerAPI, marker: TimelineMarker) {\n  const duration = getDuration(player);\n\n  const markerPosition = 100 / duration * getMarkerTime(marker, player, duration); // convert absolute time to percentage\n  let markerDuration = 100 / duration * marker.duration;\n\n  if (markerPosition < 0 && !isNaN(markerDuration)) {\n    // Shrink marker duration for on live streams as they reach end\n    markerDuration = markerDuration + markerPosition;\n  }\n\n  if (100 - markerPosition < markerDuration) {\n    // Shrink marker if it overflows timeline\n    markerDuration = 100 - markerPosition;\n  }\n\n  return { markerDuration, markerPosition };\n}\n\nfunction getMarkerTime(marker: TimelineMarker, player: PlayerAPI, duration: number): number {\n  if (!player.isLive()) {\n    return marker.time;\n  }\n\n  return duration - (PlayerUtils.getSeekableRangeRespectingLive(player).end - marker.time);\n}\n\nfunction getDuration(player: PlayerAPI): number {\n  if (!player.isLive()) {\n    return player.getDuration();\n  }\n  const { start, end } = PlayerUtils.getSeekableRangeRespectingLive(player);\n\n  return end - start;\n}\n\nfunction shouldRemoveMarker(markerPosition: number, markerDuration: number): boolean {\n  return (markerDuration < 0 || isNaN(markerDuration)) && markerPosition < 0;\n}\n\nfunction shouldProcessMarkers(player: PlayerAPI, uimanager: UIInstanceManager): boolean {\n  // Don't generate timeline markers if we don't yet have a duration\n  // The duration check is for buggy platforms where the duration is not available instantly (Chrome on Android 4.3)\n  const validToProcess = player.getDuration() !== Infinity || player.isLive();\n  const hasMarkers = uimanager.getConfig().metadata.markers.length > 0;\n\n  return validToProcess && hasMarkers;\n}\n","import {Container, ContainerConfig} from './container';\nimport {UIInstanceManager} from '../uimanager';\nimport {MetadataLabel, MetadataLabelContent} from './metadatalabel';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for a {@link TitleBar}.\n *\n * @category Configs\n */\nexport interface TitleBarConfig extends ContainerConfig {\n  /**\n   * Specifies if the title bar should stay hidden when no metadata label contains any text. Does not make a lot\n   * of sense if the title bar contains other components than just MetadataLabels (like in the default configuration).\n   * Default: false\n   */\n  keepHiddenWithoutMetadata?: boolean;\n}\n\n/**\n * Displays a title bar containing a label with the title of the video.\n *\n * @category Components\n */\nexport class TitleBar extends Container<TitleBarConfig> {\n\n  constructor(config: TitleBarConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-titlebar',\n      hidden: true,\n      components: [\n        new MetadataLabel({ content: MetadataLabelContent.Title }),\n        new MetadataLabel({ content: MetadataLabelContent.Description }),\n      ],\n      keepHiddenWithoutMetadata: false,\n    }, <TitleBarConfig>this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let shouldBeShown = !this.isHidden();\n    let hasMetadataText = true; // Flag to track if any metadata label contains text\n\n    let checkMetadataTextAndUpdateVisibility = () => {\n      hasMetadataText = false;\n\n      // Iterate through metadata labels and check if at least one of them contains text\n      for (let component of this.getComponents()) {\n        if (component instanceof MetadataLabel) {\n          if (!component.isEmpty()) {\n            hasMetadataText = true;\n            break;\n          }\n        }\n      }\n\n      if (this.isShown()) {\n        // Hide a visible titlebar if it does not contain any text and the hidden flag is set\n        if (config.keepHiddenWithoutMetadata && !hasMetadataText) {\n          this.hide();\n        }\n      } else if (shouldBeShown) {\n        // Show a hidden titlebar if it should actually be shown\n        this.show();\n      }\n    };\n\n    // Listen to text change events to update the hasMetadataText flag when the metadata dynamically changes\n    for (let component of this.getComponents()) {\n      if (component instanceof MetadataLabel) {\n        component.onTextChanged.subscribe(checkMetadataTextAndUpdateVisibility);\n      }\n    }\n\n    uimanager.onControlsShow.subscribe(() => {\n      shouldBeShown = true;\n      if (!(config.keepHiddenWithoutMetadata && !hasMetadataText)) {\n        this.show();\n      }\n    });\n    uimanager.onControlsHide.subscribe(() => {\n      shouldBeShown = false;\n      this.hide();\n    });\n\n    // init\n    checkMetadataTextAndUpdateVisibility();\n  }\n}","import {Button, ButtonConfig} from './button';\nimport {NoArgs, EventDispatcher, Event} from '../eventdispatcher';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { LocalizableText } from '../localization/i18n';\n\n/**\n * Configuration interface for a toggle button component.\n *\n * @category Configs\n */\nexport interface ToggleButtonConfig extends ButtonConfig {\n  /**\n   * The CSS class that marks the on-state of the button.\n   */\n  onClass?: string;\n  /**\n   * The CSS class that marks the off-state of the button.\n   */\n  offClass?: string;\n  /**\n   * WCAG20 standard for defining info about the component (usually the name)\n   *\n   * It is recommended to use `onAriaLabel` and `offAriaLabel` for toggle buttons\n   * as the component can then update them as the button is used.\n   *\n   * If both `ariaLabel` and `onAriaLabel` are set, `onAriaLabel` is used.\n   */\n  ariaLabel?: LocalizableText;\n  /**\n   * The aria label that marks the on-state of the button.\n   */\n  onAriaLabel?: LocalizableText;\n  /**\n   * The aria label that marks the off-state of the button.\n   */\n  offAriaLabel?: LocalizableText;\n  /**\n   * The text as string or as localize callback on the button.\n   */\n  text?: LocalizableText;\n}\n\n/**\n * A button that can be toggled between 'on' and 'off' states.\n *\n * @category Components\n */\nexport class ToggleButton<Config extends ToggleButtonConfig> extends Button<Config> {\n\n  private onState: boolean;\n\n  private toggleButtonEvents = {\n    onToggle: new EventDispatcher<ToggleButton<Config>, NoArgs>(),\n    onToggleOn: new EventDispatcher<ToggleButton<Config>, NoArgs>(),\n    onToggleOff: new EventDispatcher<ToggleButton<Config>, NoArgs>(),\n  };\n\n  constructor(config: Config) {\n    super(config);\n\n    const defaultConfig: ToggleButtonConfig = {\n      cssClass: 'ui-togglebutton',\n      onClass: 'on',\n      offClass: 'off',\n    };\n\n    if (config.onAriaLabel) {\n      config.ariaLabel = config.onAriaLabel;\n    }\n\n    this.config = this.mergeConfig(config, defaultConfig as Config, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    const config = this.getConfig();\n    this.getDomElement().addClass(this.prefixCss(config.offClass));\n  }\n\n  /**\n   * Toggles the button to the 'on' state.\n   */\n  on() {\n    if (this.isOff()) {\n      const config = this.getConfig();\n\n      this.onState = true;\n      this.getDomElement().removeClass(this.prefixCss(config.offClass));\n      this.getDomElement().addClass(this.prefixCss(config.onClass));\n\n      this.onToggleEvent();\n      this.onToggleOnEvent();\n\n      this.setAriaAttr('pressed', 'true');\n\n      if (this.config.onAriaLabel) {\n        this.setAriaLabel(this.config.onAriaLabel);\n      }\n    }\n  }\n\n  /**\n   * Toggles the button to the 'off' state.\n   */\n  off() {\n    if (this.isOn()) {\n      const config = this.getConfig();\n\n      this.onState = false;\n      this.getDomElement().removeClass(this.prefixCss(config.onClass));\n      this.getDomElement().addClass(this.prefixCss(config.offClass));\n\n      this.onToggleEvent();\n      this.onToggleOffEvent();\n\n      this.setAriaAttr('pressed', 'false');\n\n      if (this.config.offAriaLabel) {\n        this.setAriaLabel(this.config.offAriaLabel);\n      }\n    }\n  }\n\n  /**\n   * Toggle the button 'on' if it is 'off', or 'off' if it is 'on'.\n   */\n  toggle() {\n    if (this.isOn()) {\n      this.off();\n    } else {\n      this.on();\n    }\n  }\n\n  /**\n   * Checks if the toggle button is in the 'on' state.\n   * @returns {boolean} true if button is 'on', false if 'off'\n   */\n  isOn(): boolean {\n    return this.onState;\n  }\n\n  /**\n   * Checks if the toggle button is in the 'off' state.\n   * @returns {boolean} true if button is 'off', false if 'on'\n   */\n  isOff(): boolean {\n    return !this.isOn();\n  }\n\n  protected onClickEvent() {\n    super.onClickEvent();\n\n    // Fire the toggle event together with the click event\n    // (they are technically the same, only the semantics are different)\n    this.onToggleEvent();\n  }\n\n  protected onToggleEvent() {\n    this.toggleButtonEvents.onToggle.dispatch(this);\n  }\n\n  protected onToggleOnEvent() {\n    this.toggleButtonEvents.onToggleOn.dispatch(this);\n  }\n\n  protected onToggleOffEvent() {\n    this.toggleButtonEvents.onToggleOff.dispatch(this);\n  }\n\n  /**\n   * Gets the event that is fired when the button is toggled.\n   * @returns {Event<ToggleButton<Config>, NoArgs>}\n   */\n  get onToggle(): Event<ToggleButton<Config>, NoArgs> {\n    return this.toggleButtonEvents.onToggle.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the button is toggled 'on'.\n   * @returns {Event<ToggleButton<Config>, NoArgs>}\n   */\n  get onToggleOn(): Event<ToggleButton<Config>, NoArgs> {\n    return this.toggleButtonEvents.onToggleOn.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the button is toggled 'off'.\n   * @returns {Event<ToggleButton<Config>, NoArgs>}\n   */\n  get onToggleOff(): Event<ToggleButton<Config>, NoArgs> {\n    return this.toggleButtonEvents.onToggleOff.getEvent();\n  }\n}","import {Component, ComponentConfig} from './component';\nimport {DOM} from '../dom';\n\n/**\n * Animated analog TV static noise.\n *\n * @category Components\n */\nexport class TvNoiseCanvas extends Component<ComponentConfig> {\n\n  private canvas: DOM;\n\n  private canvasElement: HTMLCanvasElement;\n  private canvasContext: CanvasRenderingContext2D;\n  private canvasWidth = 160;\n  private canvasHeight = 90;\n  private interferenceHeight = 50;\n  private lastFrameUpdate: number = 0;\n  private frameInterval: number = 60;\n  private useAnimationFrame: boolean = !!window.requestAnimationFrame;\n  private noiseAnimationWindowPos: number;\n  private frameUpdateHandlerId: number;\n\n  constructor(config: ComponentConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-tvnoisecanvas',\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    return this.canvas = new DOM('canvas', { 'class': this.getCssClasses() }, this);\n  }\n\n  start(): void {\n    this.canvasElement = <HTMLCanvasElement>this.canvas.get(0);\n    this.canvasContext = this.canvasElement.getContext('2d');\n    this.noiseAnimationWindowPos = -this.canvasHeight;\n    this.lastFrameUpdate = 0;\n\n    this.canvasElement.width = this.canvasWidth;\n    this.canvasElement.height = this.canvasHeight;\n\n    this.renderFrame();\n  }\n\n  stop(): void {\n    if (this.useAnimationFrame) {\n      cancelAnimationFrame(this.frameUpdateHandlerId);\n    } else {\n      clearTimeout(this.frameUpdateHandlerId);\n    }\n  }\n\n  private renderFrame(): void {\n    // This code has been copied from the player controls.js and simplified\n\n    if (this.lastFrameUpdate + this.frameInterval > new Date().getTime()) {\n      // It's too early to render the next frame\n      this.scheduleNextRender();\n      return;\n    }\n\n    let currentPixelOffset;\n    let canvasWidth = this.canvasWidth;\n    let canvasHeight = this.canvasHeight;\n\n    // Create texture\n    let noiseImage = this.canvasContext.createImageData(canvasWidth, canvasHeight);\n\n    // Fill texture with noise\n    for (let y = 0; y < canvasHeight; y++) {\n      for (let x = 0; x < canvasWidth; x++) {\n        currentPixelOffset = (canvasWidth * y * 4) + x * 4;\n        noiseImage.data[currentPixelOffset] = Math.random() * 255;\n        if (y < this.noiseAnimationWindowPos || y > this.noiseAnimationWindowPos + this.interferenceHeight) {\n          noiseImage.data[currentPixelOffset] *= 0.85;\n        }\n        noiseImage.data[currentPixelOffset + 1] = noiseImage.data[currentPixelOffset];\n        noiseImage.data[currentPixelOffset + 2] = noiseImage.data[currentPixelOffset];\n        noiseImage.data[currentPixelOffset + 3] = 50;\n      }\n    }\n\n    // Put texture onto canvas\n    this.canvasContext.putImageData(noiseImage, 0, 0);\n\n    this.lastFrameUpdate = new Date().getTime();\n    this.noiseAnimationWindowPos += 7;\n    if (this.noiseAnimationWindowPos > canvasHeight) {\n      this.noiseAnimationWindowPos = -canvasHeight;\n    }\n\n    this.scheduleNextRender();\n  }\n\n  private scheduleNextRender(): void {\n    if (this.useAnimationFrame) {\n      this.frameUpdateHandlerId = window.requestAnimationFrame(this.renderFrame.bind(this));\n    } else {\n      this.frameUpdateHandlerId = window.setTimeout(this.renderFrame.bind(this), this.frameInterval);\n    }\n  }\n}","import { Container, ContainerConfig } from './container';\nimport { UIInstanceManager } from '../uimanager';\nimport { DOM, HTMLElementWithComponent } from '../dom';\nimport { Timeout } from '../timeout';\nimport { PlayerUtils } from '../playerutils';\nimport { CancelEventArgs, Event as UiEvent, EventDispatcher } from '../eventdispatcher';\nimport { PlayerAPI, PlayerResizedEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { Button, ButtonConfig } from './button';\n\n/**\n * Configuration interface for a {@link UIContainer}.\n *\n * @category Configs\n */\nexport interface UIContainerConfig extends ContainerConfig {\n  /**\n   * The delay in milliseconds after which the control bar will be hidden when there is no user interaction.\n   * Set to -1 for the UI to be always shown.\n   * Default: 5 seconds (5000)\n   */\n  hideDelay?: number;\n  /**\n   * An array of player states in which the UI will not be hidden, no matter what the {@link hideDelay} is.\n   */\n  hidePlayerStateExceptions?: PlayerUtils.PlayerState[];\n  /**\n   * The HTML element on which user interaction events (e.g. mouse and touch events) will be tracked to detect\n   * interaction with the UI. These basically trigger showing and hiding of the UI.\n   * Default: the UI container itself\n   */\n  userInteractionEventSource?: HTMLElement;\n\n  /**\n   * Specify whether the UI should be hidden immediatly if the mouse leaves the userInteractionEventSource.\n   * If false or not set it will wait for the hideDelay.\n   * Default: false\n   */\n  hideImmediatelyOnMouseLeave?: boolean;\n}\n\n/**\n * The base container that contains all of the UI. The UIContainer is passed to the {@link UIManager} to build and\n * setup the UI.\n *\n * @category Containers\n */\nexport class UIContainer extends Container<UIContainerConfig> {\n\n  private static readonly STATE_PREFIX = 'player-state-';\n\n  private static readonly FULLSCREEN = 'fullscreen';\n  private static readonly BUFFERING = 'buffering';\n  private static readonly REMOTE_CONTROL = 'remote-control';\n  private static readonly CONTROLS_SHOWN = 'controls-shown';\n  private static readonly CONTROLS_HIDDEN = 'controls-hidden';\n\n  private uiHideTimeout: Timeout;\n  private playerStateChange: EventDispatcher<UIContainer, PlayerUtils.PlayerState>;\n\n  private userInteractionEventSource: DOM;\n  private userInteractionEvents: { name: string, handler: EventListenerOrEventListenerObject }[];\n  private hidingPrevented: () => boolean;\n\n  public hideUi: () => void = () => {};\n  public showUi: () => void = () => {};\n\n  constructor(config: UIContainerConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <UIContainerConfig>{\n      cssClass: 'ui-uicontainer',\n      role: 'region',\n      ariaLabel: i18n.getLocalizer('player'),\n      hideDelay: 5000,\n      hideImmediatelyOnMouseLeave: false,\n    }, this.config);\n\n    this.playerStateChange = new EventDispatcher<UIContainer, PlayerUtils.PlayerState>();\n    this.hidingPrevented = () => false;\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    const config = this.getConfig();\n\n    if (config.userInteractionEventSource) {\n      this.userInteractionEventSource = new DOM(config.userInteractionEventSource);\n    } else {\n      this.userInteractionEventSource = this.getDomElement();\n    }\n\n    super.configure(player, uimanager);\n\n    this.configureUIShowHide(player, uimanager);\n    this.configurePlayerStates(player, uimanager);\n  }\n\n  private configureUIShowHide(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    let config = this.getConfig();\n\n    if (config.hideDelay === -1) {\n      uimanager.onConfigured.subscribe(() => uimanager.onControlsShow.dispatch(this));\n      return;\n    }\n\n    let isUiShown = false;\n    let isSeeking = false;\n    let isFirstTouch = true;\n    let playerState: PlayerUtils.PlayerState;\n\n    this.hidingPrevented = (): boolean => {\n      return config.hidePlayerStateExceptions && config.hidePlayerStateExceptions.indexOf(playerState) > -1;\n    };\n\n    this.showUi = () => {\n      if (!isUiShown) {\n        // Let subscribers know that they should reveal themselves\n        uimanager.onControlsShow.dispatch(this);\n        isUiShown = true;\n      }\n      // Don't trigger timeout while seeking (it will be triggered once the seek is finished) or casting\n      if (!isSeeking && !player.isCasting() && !this.hidingPrevented()) {\n        this.uiHideTimeout.start();\n      }\n    };\n\n    this.hideUi = () => {\n      // Hide the UI only if it is shown, and if not casting\n      if (isUiShown && !player.isCasting()) {\n        // Issue a preview event to check if we are good to hide the controls\n        let previewHideEventArgs = <CancelEventArgs>{};\n        uimanager.onPreviewControlsHide.dispatch(this, previewHideEventArgs);\n\n        if (!previewHideEventArgs.cancel) {\n          // If the preview wasn't canceled, let subscribers know that they should now hide themselves\n          uimanager.onControlsHide.dispatch(this);\n          isUiShown = false;\n        } else {\n          // If the hide preview was canceled, continue to show UI\n          this.showUi();\n        }\n      }\n    };\n\n    // Timeout to defer UI hiding by the configured delay time\n    this.uiHideTimeout = new Timeout(config.hideDelay, this.hideUi);\n\n    this.userInteractionEvents = [{\n      // On touch displays, the first touch reveals the UI\n      name: 'touchend',\n      handler: (e) => {\n        const shouldPreventDefault = ((e: Event): Boolean => {\n          const findButtonComponent = ((element: HTMLElementWithComponent): Button<ButtonConfig> | null => {\n            if (\n                !element\n                  || element === this.userInteractionEventSource.get(0)\n                  || element.component instanceof UIContainer\n            ) {\n              return null;\n            }\n\n            if (element.component && element.component instanceof Button) {\n              return element.component;\n            } else {\n              return findButtonComponent(element.parentElement);\n            }\n          });\n\n          const buttonComponent = findButtonComponent(e.target as HTMLElementWithComponent);\n          return !(buttonComponent && buttonComponent.getConfig().acceptsTouchWithUiHidden);\n        });\n\n        if (!isUiShown) {\n          // Only if the UI is hidden, we prevent other actions (except for the first touch) and reveal the UI\n          // instead. The first touch is not prevented to let other listeners receive the event and trigger an\n          // initial action, e.g. the huge playback button can directly start playback instead of requiring a double\n          // tap which 1. reveals the UI and 2. starts playback.\n          if (isFirstTouch && !player.isPlaying()) {\n            isFirstTouch = false;\n          } else {\n            // On touch input devices, the first touch is expected to display the UI controls and not be propagated to\n            // other components.\n            // When buttons are always visible this causes UX problems, as the first touch is not recognized.\n            // This is the case for the {@link AdSkipButton} and {@link AdClickOverlay}.\n            // To prevent UX issues where the buttons need to be touched twice, we do not prevent the first touch event.\n            if (shouldPreventDefault(e)) {\n              e.preventDefault();\n            }\n          }\n          this.showUi();\n        }\n      },\n    }, {\n      // When the mouse enters, we show the UI\n      name: 'mouseenter',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      // When the mouse moves within, we show the UI\n      name: 'mousemove',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      name: 'focusin',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      name: 'keydown',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      // When the mouse leaves, we can prepare to hide the UI, except a seek is going on\n      name: 'mouseleave',\n      handler: () => {\n        // When a seek is going on, the seek scrub pointer may exit the UI area while still seeking, and we do not\n        // hide the UI in such cases\n        if (!isSeeking && !this.hidingPrevented()) {\n          if (this.config.hideImmediatelyOnMouseLeave) {\n            this.hideUi();\n          } else {\n            this.uiHideTimeout.start();\n          }\n        }\n      },\n    }];\n\n    this.userInteractionEvents.forEach((event) => this.userInteractionEventSource.on(event.name, event.handler));\n\n    uimanager.onSeek.subscribe(() => {\n      this.uiHideTimeout.clear(); // Don't hide UI while a seek is in progress\n      isSeeking = true;\n    });\n    uimanager.onSeeked.subscribe(() => {\n      isSeeking = false;\n      if (!this.hidingPrevented()) {\n        this.uiHideTimeout.start(); // Re-enable UI hide timeout after a seek\n      }\n    });\n    uimanager.onComponentViewModeChanged.subscribe((_, { mode }) => this.trackComponentViewMode(mode));\n    player.on(player.exports.PlayerEvent.CastStarted, () => {\n      this.showUi(); // Show UI when a Cast session has started (UI will then stay permanently on during the session)\n    });\n    this.playerStateChange.subscribe((_, state) => {\n      playerState = state;\n      if (this.hidingPrevented()) {\n        // Entering a player state that prevents hiding and forces the controls to be shown\n        this.uiHideTimeout.clear();\n        this.showUi();\n      } else {\n        // Entering a player state that allows hiding\n        this.uiHideTimeout.start();\n      }\n    });\n  }\n\n  private configurePlayerStates(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    let container = this.getDomElement();\n\n    // Convert player states into CSS class names\n    let stateClassNames = <any>[];\n    for (let state in PlayerUtils.PlayerState) {\n      if (isNaN(Number(state))) {\n        let enumName = PlayerUtils.PlayerState[<any>PlayerUtils.PlayerState[state]];\n        stateClassNames[PlayerUtils.PlayerState[state]] =\n          this.prefixCss(UIContainer.STATE_PREFIX + enumName.toLowerCase());\n      }\n    }\n\n    let removeStates = () => {\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Idle]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Prepared]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Playing]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Paused]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Finished]);\n    };\n\n    const updateState = (state: PlayerUtils.PlayerState) => {\n      removeStates();\n      container.addClass(stateClassNames[state]);\n      this.playerStateChange.dispatch(this, state);\n    };\n\n    player.on(player.exports.PlayerEvent.SourceLoaded, () => {\n      updateState(PlayerUtils.PlayerState.Prepared);\n    });\n    player.on(player.exports.PlayerEvent.Play, () => {\n      updateState(PlayerUtils.PlayerState.Playing);\n    });\n    player.on(player.exports.PlayerEvent.Playing, () => {\n      updateState(PlayerUtils.PlayerState.Playing);\n    });\n    player.on(player.exports.PlayerEvent.Paused, () => {\n      updateState(PlayerUtils.PlayerState.Paused);\n    });\n    player.on(player.exports.PlayerEvent.PlaybackFinished, () => {\n      updateState(PlayerUtils.PlayerState.Finished);\n    });\n    player.on(player.exports.PlayerEvent.SourceUnloaded, () => {\n      updateState(PlayerUtils.PlayerState.Idle);\n    });\n    uimanager.getConfig().events.onUpdated.subscribe(() => {\n      updateState(PlayerUtils.getState(player));\n    });\n\n    // Fullscreen marker class\n    player.on(player.exports.PlayerEvent.ViewModeChanged, () => {\n      if (player.getViewMode() === player.exports.ViewMode.Fullscreen) {\n        container.addClass(this.prefixCss(UIContainer.FULLSCREEN));\n      } else {\n        container.removeClass(this.prefixCss(UIContainer.FULLSCREEN));\n      }\n    });\n    // Init fullscreen state\n    if (player.getViewMode() === player.exports.ViewMode.Fullscreen) {\n      container.addClass(this.prefixCss(UIContainer.FULLSCREEN));\n    }\n\n    // Buffering marker class\n    player.on(player.exports.PlayerEvent.StallStarted, () => {\n      container.addClass(this.prefixCss(UIContainer.BUFFERING));\n    });\n    player.on(player.exports.PlayerEvent.StallEnded, () => {\n      container.removeClass(this.prefixCss(UIContainer.BUFFERING));\n    });\n    // Init buffering state\n    if (player.isStalled()) {\n      container.addClass(this.prefixCss(UIContainer.BUFFERING));\n    }\n\n    // RemoteControl marker class\n    player.on(player.exports.PlayerEvent.CastStarted, () => {\n      container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));\n    });\n    player.on(player.exports.PlayerEvent.CastStopped, () => {\n      container.removeClass(this.prefixCss(UIContainer.REMOTE_CONTROL));\n    });\n    // Init RemoteControl state\n    if (player.isCasting()) {\n      container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));\n    }\n\n    // Controls visibility marker class\n    uimanager.onControlsShow.subscribe(() => {\n      container.removeClass(this.prefixCss(UIContainer.CONTROLS_HIDDEN));\n      container.addClass(this.prefixCss(UIContainer.CONTROLS_SHOWN));\n    });\n    uimanager.onControlsHide.subscribe(() => {\n      container.removeClass(this.prefixCss(UIContainer.CONTROLS_SHOWN));\n      container.addClass(this.prefixCss(UIContainer.CONTROLS_HIDDEN));\n    });\n\n    // Layout size classes\n    let updateLayoutSizeClasses = (width: number, height: number) => {\n      container.removeClass(this.prefixCss('layout-max-width-400'));\n      container.removeClass(this.prefixCss('layout-max-width-600'));\n      container.removeClass(this.prefixCss('layout-max-width-800'));\n      container.removeClass(this.prefixCss('layout-max-width-1200'));\n\n      if (width <= 400) {\n        container.addClass(this.prefixCss('layout-max-width-400'));\n      } else if (width <= 600) {\n        container.addClass(this.prefixCss('layout-max-width-600'));\n      } else if (width <= 800) {\n        container.addClass(this.prefixCss('layout-max-width-800'));\n      } else if (width <= 1200) {\n        container.addClass(this.prefixCss('layout-max-width-1200'));\n      }\n    };\n    player.on(player.exports.PlayerEvent.PlayerResized, (e: PlayerResizedEvent) => {\n      // Convert strings (with \"px\" suffix) to ints\n      let width = Math.round(Number(e.width.substring(0, e.width.length - 2)));\n      let height = Math.round(Number(e.height.substring(0, e.height.length - 2)));\n\n      updateLayoutSizeClasses(width, height);\n    });\n    // Init layout state\n    updateLayoutSizeClasses(new DOM(player.getContainer()).width(), new DOM(player.getContainer()).height());\n  }\n\n  release(): void {\n    // Explicitly unsubscribe user interaction event handlers because they could be attached to an external element\n    // that isn't owned by the UI and therefore not removed on release.\n    if (this.userInteractionEvents) {\n      this.userInteractionEvents.forEach((event) => this.userInteractionEventSource.off(event.name, event.handler));\n    }\n\n    super.release();\n\n    if (this.uiHideTimeout) {\n      this.uiHideTimeout.clear();\n    }\n  }\n\n  onPlayerStateChange(): UiEvent<UIContainer, PlayerUtils.PlayerState> {\n    return this.playerStateChange.getEvent();\n  }\n\n  protected suspendHideTimeout() {\n    this.uiHideTimeout.suspend();\n  }\n\n  protected resumeHideTimeout() {\n    this.uiHideTimeout.resume(!this.hidingPrevented());\n  }\n\n  protected toDomElement(): DOM {\n    let container = super.toDomElement();\n\n    // Detect flexbox support (not supported in IE9)\n    if (document && typeof document.createElement('p').style.flex !== 'undefined') {\n      container.addClass(this.prefixCss('flexbox'));\n    } else {\n      container.addClass(this.prefixCss('no-flexbox'));\n    }\n\n    return container;\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection between 'auto' and the available video qualities.\n *\n * @category Components\n */\nexport class VideoQualitySelectBox extends SelectBox {\n\n  private hasAuto: boolean;\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-videoqualityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let selectCurrentVideoQuality = () => {\n      this.selectItem(player.getVideoQuality().id);\n    };\n\n    let updateVideoQualities = () => {\n      let videoQualities = player.getAvailableVideoQualities();\n\n      this.clearItems();\n\n      // Progressive streams do not support automatic quality selection\n      this.hasAuto = player.getStreamType() !== 'progressive';\n\n      if (this.hasAuto) {\n        // Add entry for automatic quality switching (default setting)\n        this.addItem('auto', i18n.getLocalizer('auto'));\n      }\n\n      // Add video qualities\n      for (let videoQuality of videoQualities) {\n        this.addItem(videoQuality.id, videoQuality.label);\n      }\n\n      // Select initial quality\n      selectCurrentVideoQuality();\n    };\n\n    this.onItemSelected.subscribe((sender: VideoQualitySelectBox, value: string) => {\n      player.setVideoQuality(value);\n    });\n\n    // Update qualities when source goes away\n    player.on(player.exports.PlayerEvent.SourceUnloaded, updateVideoQualities);\n    // Update qualities when the period within a source changes\n    player.on(player.exports.PlayerEvent.PeriodSwitched, updateVideoQualities);\n    // Update quality selection when quality is changed (from outside)\n    player.on(player.exports.PlayerEvent.VideoQualityChanged, selectCurrentVideoQuality);\n\n    if ((player.exports.PlayerEvent as any).VideoQualityAdded) {\n      // Update qualities when their availability changed\n      // TODO: remove any cast after next player release\n      player.on((player.exports.PlayerEvent as any).VideoQualityAdded, updateVideoQualities);\n      player.on((player.exports.PlayerEvent as any).VideoQualityRemoved, updateVideoQualities);\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(updateVideoQualities);\n  }\n\n  /**\n   * Returns true if the select box contains an 'auto' item for automatic quality selection mode.\n   * @return {boolean}\n   */\n  hasAutoItem(): boolean {\n    return this.hasAuto;\n  }\n}","import {Container, ContainerConfig} from './container';\nimport {VolumeSlider} from './volumeslider';\nimport {VolumeToggleButton} from './volumetogglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport {Timeout} from '../timeout';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for a {@link VolumeControlButton}.\n *\n * @category Configs\n */\nexport interface VolumeControlButtonConfig extends ContainerConfig {\n  /**\n   * The delay after which the volume slider will be hidden when there is no user interaction.\n   * Care must be taken that the delay is long enough so users can reach the slider from the toggle button, e.g. by\n   * mouse movement. If the delay is too short, the sliders disappears before the mouse pointer has reached it and\n   * the user is not able to use it.\n   * Default: 500ms\n   */\n  hideDelay?: number;\n  /**\n   * Specifies if the volume slider should be vertically or horizontally aligned.\n   * Default: true\n   */\n  vertical?: boolean;\n}\n\n/**\n * A composite volume control that consists of and internally manages a volume control button that can be used\n * for muting, and a (depending on the CSS style, e.g. slide-out) volume control bar.\n *\n * @category Buttons\n */\nexport class VolumeControlButton extends Container<VolumeControlButtonConfig> {\n\n  private volumeToggleButton: VolumeToggleButton;\n  private volumeSlider: VolumeSlider;\n\n  private volumeSliderHideTimeout: Timeout;\n\n  constructor(config: VolumeControlButtonConfig = {}) {\n    super(config);\n\n    this.volumeToggleButton = new VolumeToggleButton();\n    this.volumeSlider = new VolumeSlider({\n      vertical: config.vertical != null ? config.vertical : true,\n      hidden: true,\n    });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-volumecontrolbutton',\n      components: [this.volumeToggleButton, this.volumeSlider],\n      hideDelay: 500,\n    }, <VolumeControlButtonConfig>this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let volumeToggleButton = this.getVolumeToggleButton();\n    let volumeSlider = this.getVolumeSlider();\n\n    this.volumeSliderHideTimeout = new Timeout(this.getConfig().hideDelay, () => {\n      volumeSlider.hide();\n    });\n\n    /*\n     * Volume Slider visibility handling\n     *\n     * The volume slider shall be visible while the user hovers the mute toggle button, while the user hovers the\n     * volume slider, and while the user slides the volume slider. If none of these situations are true, the slider\n     * shall disappear.\n     */\n    let volumeSliderHovered = false;\n    volumeToggleButton.getDomElement().on('mouseenter', () => {\n      // Show volume slider when mouse enters the button area\n      if (volumeSlider.isHidden()) {\n        volumeSlider.show();\n      }\n      // Avoid hiding of the slider when button is hovered\n      this.volumeSliderHideTimeout.clear();\n    });\n    volumeToggleButton.getDomElement().on('mouseleave', () => {\n      // Hide slider delayed when button is left\n      this.volumeSliderHideTimeout.reset();\n    });\n    volumeSlider.getDomElement().on('mouseenter', () => {\n      // When the slider is entered, cancel the hide timeout activated by leaving the button\n      this.volumeSliderHideTimeout.clear();\n      volumeSliderHovered = true;\n    });\n    volumeSlider.getDomElement().on('mouseleave', () => {\n      // When mouse leaves the slider, only hide it if there is no slide operation in progress\n      if (volumeSlider.isSeeking()) {\n        this.volumeSliderHideTimeout.clear();\n      } else {\n        this.volumeSliderHideTimeout.reset();\n      }\n      volumeSliderHovered = false;\n    });\n    volumeSlider.onSeeked.subscribe(() => {\n      // When a slide operation is done and the slider not hovered (mouse outside slider), hide slider delayed\n      if (!volumeSliderHovered) {\n        this.volumeSliderHideTimeout.reset();\n      }\n    });\n  }\n\n  release(): void {\n    super.release();\n    this.volumeSliderHideTimeout.clear();\n  }\n\n  /**\n   * Provides access to the internally managed volume toggle button.\n   * @returns {VolumeToggleButton}\n   */\n  getVolumeToggleButton(): VolumeToggleButton {\n    return this.volumeToggleButton;\n  }\n\n  /**\n   * Provides access to the internally managed volume silder.\n   * @returns {VolumeSlider}\n   */\n  getVolumeSlider(): VolumeSlider {\n    return this.volumeSlider;\n  }\n}","import { SeekBar, SeekBarConfig, SeekPreviewEventArgs } from './seekbar';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { VolumeTransition } from '../volumecontroller';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for the {@link VolumeSlider} component.\n *\n * @category Configs\n */\nexport interface VolumeSliderConfig extends SeekBarConfig {\n  /**\n   * Specifies if the volume slider should be automatically hidden when volume control is prohibited by the\n   * browser or platform. This currently only applies to iOS.\n   * Default: true\n   */\n  hideIfVolumeControlProhibited?: boolean;\n}\n\n/**\n * A simple volume slider component to adjust the player's volume setting.\n *\n * @category Components\n */\nexport class VolumeSlider extends SeekBar {\n  private volumeTransition: VolumeTransition;\n\n  constructor(config: VolumeSliderConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <VolumeSliderConfig>{\n      cssClass: 'ui-volumeslider',\n      hideIfVolumeControlProhibited: true,\n      ariaLabel: i18n.getLocalizer('settings.audio.volume'),\n      tabIndex: 0,\n    }, this.config);\n  }\n\n  private setVolumeAriaSliderValues(value: number) {\n    this.getDomElement().attr('aria-valuenow', Math.ceil(value).toString());\n    this.getDomElement().attr('aria-valuetext', `${i18n.performLocalization(i18n.getLocalizer('seekBar.value'))}: ${Math.ceil(value)}`);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager, false);\n\n    this.setAriaSliderMinMax('0', '100');\n\n    let config = <VolumeSliderConfig>this.getConfig();\n\n    const volumeController = uimanager.getConfig().volumeController;\n\n    if (config.hideIfVolumeControlProhibited && !this.detectVolumeControlAvailability()) {\n      this.hide();\n\n      // We can just return from here, because the user will never interact with the control and any configured\n      // functionality would only eat resources for no reason.\n      return;\n    }\n\n    volumeController.onChanged.subscribe((_, args) => {\n      if (args.muted) {\n        this.setVolumeAriaSliderValues(0);\n        this.setPlaybackPosition(0);\n      } else {\n        this.setPlaybackPosition(args.volume);\n        this.setVolumeAriaSliderValues(args.volume);\n      }\n    });\n\n    this.onSeek.subscribe(() => {\n      this.volumeTransition = volumeController.startTransition();\n    });\n\n    this.onSeekPreview.subscribeRateLimited(this.updateVolumeWhileScrubbing, 50);\n    this.onSeeked.subscribe((sender, percentage) => {\n      if (this.volumeTransition) {\n        this.volumeTransition.finish(percentage);\n      }\n    });\n\n    // Update the volume slider marker when the player resized, a source is loaded,\n    // or the UI is configured. Check the seekbar for a detailed description.\n    player.on(player.exports.PlayerEvent.PlayerResized, () => {\n      this.refreshPlaybackPosition();\n    });\n    uimanager.onConfigured.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n\n    uimanager.getConfig().events.onUpdated.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n\n    uimanager.onComponentShow.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n    uimanager.onComponentHide.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n\n    // Init volume bar\n    volumeController.onChangedEvent();\n  }\n\n  private updateVolumeWhileScrubbing = (sender: VolumeSlider, args: SeekPreviewEventArgs) => {\n    if (args.scrubbing && this.volumeTransition) {\n      this.volumeTransition.update(args.position);\n    }\n  };\n\n  private detectVolumeControlAvailability(): boolean {\n    /*\n     * \"On iOS devices, the audio level is always under the user’s physical control. The volume property is not\n     * settable in JavaScript. Reading the volume property always returns 1.\"\n     * https://developer.apple.com/library/content/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n     */\n    // as muted autoplay gets paused as soon as we unmute it, we may not touch the volume of the actual player so we\n    // probe a dummy audio element\n    const dummyVideoElement = document.createElement('video');\n    // try setting the volume to 0.7 and if it's still 1 we are on a volume control restricted device\n    dummyVideoElement.volume = 0.7;\n    return dummyVideoElement.volume !== 1;\n  }\n\n  release(): void {\n    super.release();\n\n    this.onSeekPreview.unsubscribe(this.updateVolumeWhileScrubbing);\n  }\n}\n","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles audio muting.\n *\n * @category Buttons\n */\nexport class VolumeToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    const defaultConfig: ToggleButtonConfig = {\n      cssClass: 'ui-volumetogglebutton',\n      text: i18n.getLocalizer('settings.audio.mute'),\n      onClass: 'muted',\n      offClass: 'unmuted',\n      ariaLabel: i18n.getLocalizer('settings.audio.mute'),\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    const volumeController = uimanager.getConfig().volumeController;\n\n    volumeController.onChanged.subscribe((_, args) => {\n      if (args.muted) {\n        this.on();\n      } else {\n        this.off();\n      }\n\n      const volumeLevelTens = Math.ceil(args.volume / 10);\n      this.getDomElement().data(this.prefixCss('volume-level-tens'), String(volumeLevelTens));\n    });\n\n    this.onClick.subscribe(() => {\n      volumeController.toggleMuted();\n    });\n\n    // Startup init\n    volumeController.onChangedEvent();\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI, PlayerEventBase, WarningEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles the video view between normal/mono and VR/stereo.\n *\n * @category Buttons\n */\nexport class VRToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-vrtogglebutton',\n      text: i18n.getLocalizer('vr'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let isVRConfigured = () => {\n      // VR availability cannot be checked through getVRStatus() because it is asynchronously populated and not\n      // available at UI initialization. As an alternative, we check the VR settings in the config.\n      // TODO use getVRStatus() through isVRStereoAvailable() once the player has been rewritten and the status is\n      // available in Ready\n      const source = player.getSource();\n      return source && Boolean(source.vr);\n    };\n\n    let isVRStereoAvailable = () => {\n      const source = player.getSource();\n      return player.vr && Boolean(source.vr);\n    };\n\n    let vrStateHandler = (ev: PlayerEventBase) => {\n      if (ev.type === player.exports.PlayerEvent.Warning\n        && (ev as WarningEvent).code !== player.exports.WarningCode.VR_RENDERING_ERROR) {\n        return;\n      }\n\n      if (isVRConfigured() && isVRStereoAvailable()) {\n        this.show(); // show button in case it is hidden\n\n        if (player.vr && player.vr.getStereo()) {\n          this.on();\n        } else {\n          this.off();\n        }\n      } else {\n        this.hide(); // hide button if no stereo mode available\n      }\n    };\n\n    let vrButtonVisibilityHandler = () => {\n      if (isVRConfigured()) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.VRStereoChanged, vrStateHandler);\n    player.on(player.exports.PlayerEvent.Warning, vrStateHandler);\n    // Hide button when VR source goes away\n    player.on(player.exports.PlayerEvent.SourceUnloaded, vrButtonVisibilityHandler);\n    uimanager.getConfig().events.onUpdated.subscribe(vrButtonVisibilityHandler);\n\n    this.onClick.subscribe(() => {\n      if (!isVRStereoAvailable()) {\n        if (console) {\n          console.log('No VR content');\n        }\n      } else {\n        if (player.vr && player.vr.getStereo()) {\n          player.vr.setStereo(false);\n        } else {\n          player.vr.setStereo(true);\n        }\n      }\n    });\n\n    // Set startup visibility\n    vrButtonVisibilityHandler();\n  }\n}","import {ClickOverlay, ClickOverlayConfig} from './clickoverlay';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link ClickOverlay}.\n *\n * @category Configs\n */\nexport interface WatermarkConfig extends ClickOverlayConfig {\n  // nothing yet\n}\n\n/**\n * A watermark overlay with a clickable logo.\n *\n * @category Components\n */\nexport class Watermark extends ClickOverlay {\n\n  constructor(config: WatermarkConfig = {}) {\n    super(config);\n\n    /* this.config = this.mergeConfig(config, {\n      cssClass: 'ui-watermark',\n      url: 'http://bitmovin.com',\n      role: 'link',\n      text: 'logo',\n      ariaLabel: i18n.getLocalizer('watermarkLink'),\n    }, <WatermarkConfig>this.config); */\n  }\n}\n","import {VRToggleButton} from './components/vrtogglebutton';\nimport {SettingsToggleButton} from './components/settingstogglebutton';\nimport {VolumeSlider} from './components/volumeslider';\nimport {PlaybackTimeLabel, PlaybackTimeLabelMode} from './components/playbacktimelabel';\nimport {AirPlayToggleButton} from './components/airplaytogglebutton';\nimport {ErrorMessageOverlay} from './components/errormessageoverlay';\nimport {ControlBar} from './components/controlbar';\nimport {CastToggleButton} from './components/casttogglebutton';\nimport {FullscreenToggleButton} from './components/fullscreentogglebutton';\nimport {RecommendationOverlay} from './components/recommendationoverlay';\nimport {PlaybackSpeedSelectBox} from './components/playbackspeedselectbox';\nimport {AudioQualitySelectBox} from './components/audioqualityselectbox';\nimport {CastStatusOverlay} from './components/caststatusoverlay';\nimport {UIContainer} from './components/uicontainer';\nimport {Watermark} from './components/watermark';\nimport {SubtitleOverlay} from './components/subtitleoverlay';\nimport {SettingsPanel} from './components/settingspanel';\nimport {SeekBarLabel} from './components/seekbarlabel';\nimport {PlaybackToggleOverlay} from './components/playbacktoggleoverlay';\nimport {PictureInPictureToggleButton} from './components/pictureinpicturetogglebutton';\nimport {Spacer} from './components/spacer';\nimport {Container} from './components/container';\nimport {VolumeToggleButton} from './components/volumetogglebutton';\nimport {PlaybackToggleButton} from './components/playbacktogglebutton';\nimport {SeekBar} from './components/seekbar';\nimport {VideoQualitySelectBox} from './components/videoqualityselectbox';\nimport {UIConditionContext, UIManager} from './uimanager';\nimport {TitleBar} from './components/titlebar';\nimport {BufferingOverlay} from './components/bufferingoverlay';\nimport {SubtitleListBox} from './components/subtitlelistbox';\nimport {AudioTrackListBox} from './components/audiotracklistbox';\nimport {SettingsPanelItem} from './components/settingspanelitem';\nimport {SettingsPanelPage} from './components/settingspanelpage';\nimport { UIFactory } from './uifactory';\nimport { UIConfig } from './uiconfig';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { QuickSeekButton } from './main';\n\nexport namespace DemoFactory {\n\n  export function buildDemoWithSeparateAudioSubtitlesButtons(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    // show smallScreen UI only on mobile/handheld devices\n    let smallScreenSwitchWidth = 600;\n\n    return new UIManager(player, [{\n      ui: UIFactory.modernSmallScreenAdsUI(),\n      condition: (context: UIConditionContext) => {\n        return context.isMobile && context.documentWidth < smallScreenSwitchWidth\n          && context.isAd && context.adRequiresUi;\n      },\n    }, {\n      ui: UIFactory.modernAdsUI(),\n      condition: (context: UIConditionContext) => {\n        return context.isAd && context.adRequiresUi;\n      },\n    }, {\n      ui: UIFactory.modernSmallScreenUI({ radioModeAvailable: false }),\n      condition: (context: UIConditionContext) => {\n        return context.isMobile && context.documentWidth < smallScreenSwitchWidth;\n      },\n    }, {\n      ui: modernUIWithSeparateAudioSubtitlesButtons(),\n    }], config);\n  }\n\n  function modernUIWithSeparateAudioSubtitlesButtons() {\n    let subtitleOverlay = new SubtitleOverlay();\n\n    let settingsPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [\n            new SettingsPanelItem('Video Quality', new VideoQualitySelectBox()),\n            new SettingsPanelItem('Speed', new PlaybackSpeedSelectBox()),\n            new SettingsPanelItem('Audio Quality', new AudioQualitySelectBox()),\n          ],\n        }),\n      ],\n      hidden: true,\n    });\n\n    let subtitleListBox = new SubtitleListBox();\n    let subtitleSettingsPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [\n            new SettingsPanelItem(null, subtitleListBox),\n          ],\n        }),\n      ],\n      hidden: true,\n    });\n\n    let audioTrackListBox = new AudioTrackListBox();\n    let audioTrackSettingsPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [\n            new SettingsPanelItem(null, audioTrackListBox),\n          ],\n        }),\n      ],\n      hidden: true,\n    });\n\n    let controlBar = new ControlBar({\n      components: [\n        audioTrackSettingsPanel,\n        subtitleSettingsPanel,\n        settingsPanel,\n        new Container({\n          components: [\n            new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),\n            new SeekBar({ label: new SeekBarLabel() }),\n            new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n        new Container({\n          components: [\n            new PlaybackToggleButton(),\n            new QuickSeekButton({ seekSeconds: -10 }),\n            new QuickSeekButton({ seekSeconds: 10 }),\n            new VolumeToggleButton(),\n            new VolumeSlider(),\n            new Spacer(),\n            new PictureInPictureToggleButton(),\n            new AirPlayToggleButton(),\n            new CastToggleButton(),\n            new VRToggleButton(),\n            new SettingsToggleButton({\n              settingsPanel: audioTrackSettingsPanel,\n              cssClass: 'ui-audiotracksettingstogglebutton',\n            }),\n            new SettingsToggleButton({\n              settingsPanel: subtitleSettingsPanel,\n              cssClass: 'ui-subtitlesettingstogglebutton',\n            }),\n            new SettingsToggleButton({ settingsPanel: settingsPanel }),\n            new FullscreenToggleButton(),\n          ],\n          cssClasses: ['controlbar-bottom'],\n        }),\n      ],\n    });\n\n    return new UIContainer({\n      components: [\n        subtitleOverlay,\n        new BufferingOverlay(),\n        new PlaybackToggleOverlay(),\n        new CastStatusOverlay(),\n        controlBar,\n        new TitleBar(),\n        new RecommendationOverlay(),\n        new ErrorMessageOverlay(),\n      ],\n    });\n  }\n}\n","import { Component, ComponentConfig } from './components/component';\n\nexport interface Offset {\n  left: number;\n  top: number;\n}\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface CssProperties {\n  [propertyName: string]: string;\n}\n\n/**\n * Extends the {@link HTMLElement} interface with a component attribute to store the associated component.\n */\nexport interface HTMLElementWithComponent extends HTMLElement {\n  component?: Component<ComponentConfig>;\n}\n\n/**\n * Simple DOM manipulation and DOM element event handling modeled after jQuery (as replacement for jQuery).\n *\n * Like jQuery, DOM operates on single elements and lists of elements. For example: creating an element returns a DOM\n * instance with a single element, selecting elements returns a DOM instance with zero, one, or many elements. Similar\n * to jQuery, setters usually affect all elements, while getters operate on only the first element.\n * Also similar to jQuery, most methods (except getters) return the DOM instance facilitating easy chaining of method\n * calls.\n *\n * Built with the help of: http://youmightnotneedjquery.com/\n */\nexport class DOM {\n\n  private document: Document;\n\n  /**\n   * The list of elements that the instance wraps. Take care that not all methods can operate on the whole list,\n   * getters usually just work on the first element.\n   */\n  private elements: HTMLElementWithComponent[];\n\n  /**\n   * Creates a DOM element.\n   * @param tagName the tag name of the DOM element\n   * @param attributes a list of attributes of the element\n   * @param component the {@link Component} the DOM element is associated with\n   */\n  constructor(tagName: string, attributes: {[name: string]: string}, component?: Component<ComponentConfig>);\n  /**\n   * Selects all elements from the DOM that match the specified selector.\n   * @param selector the selector to match DOM elements with\n   */\n  constructor(selector: string);\n  /**\n   * Wraps a plain HTMLElement with a DOM instance.\n   * @param element the HTMLElement to wrap with DOM\n   */\n  constructor(element: HTMLElement);\n  /**\n   * Wraps a list of plain HTMLElements with a DOM instance.\n   * @param elements the HTMLElements to wrap with DOM\n   */\n  constructor(elements: HTMLElement[]);\n  /**\n   * Wraps the document with a DOM instance. Useful to attach event listeners to the document.\n   * @param document the document to wrap\n   */\n  constructor(document: Document);\n  constructor(\n      something: string | HTMLElement | HTMLElement[] | Document,\n      attributes?: {[name: string]: string},\n      component?: Component<ComponentConfig>,\n  ) {\n    this.document = document; // Set the global document to the local document field\n\n    if (something instanceof Array) {\n      if (something.length > 0 && something[0] instanceof HTMLElement) {\n        let elements = something as HTMLElementWithComponent[];\n        this.elements = elements;\n      }\n    }\n    else if (something instanceof HTMLElement) {\n      let element = something as HTMLElementWithComponent;\n      this.elements = [element];\n    }\n    else if (something instanceof Document) {\n      // When a document is passed in, we do not do anything with it, but by setting this.elements to null\n      // we give the event handling method a means to detect if the events should be registered on the document\n      // instead of elements.\n      this.elements = null;\n    }\n    else if (attributes) {\n      let tagName = something;\n      let element = document.createElement(tagName) as HTMLElementWithComponent;\n\n      for (let attributeName in attributes) {\n        let attributeValue = attributes[attributeName];\n        if (attributeValue != null) {\n          element.setAttribute(attributeName, attributeValue);\n        }\n      }\n\n      if (component) {\n        element.component = component;\n      }\n\n      this.elements = [element];\n    }\n    else {\n      let selector = something;\n      this.elements = this.findChildElements(selector) as HTMLElementWithComponent[];\n    }\n  }\n\n  /**\n   * Gets the number of elements that this DOM instance currently holds.\n   * @returns {number} the number of elements\n   */\n  get length(): number {\n    return this.elements ? this.elements.length : 0;\n  }\n\n  /**\n   * Gets the HTML elements that this DOM instance currently holds.\n   * @returns {HTMLElement[]} the raw HTML elements\n   */\n  get(): HTMLElementWithComponent[];\n  /**\n   * Gets an HTML element from the list elements that this DOM instance currently holds.\n   * @param index The zero-based index into the element list. Can be negative to return an element from the end,\n   *    e.g. -1 returns the last element.\n   */\n  get(index: number): HTMLElementWithComponent;\n  get(index?: number): HTMLElementWithComponent | HTMLElementWithComponent[] {\n    if (index === undefined) {\n      return this.elements;\n    } else if (!this.elements || index >= this.elements.length || index < -this.elements.length) {\n      return undefined;\n    } else if (index < 0) {\n      return this.elements[this.elements.length - index];\n    } else {\n      return this.elements[index];\n    }\n  }\n\n  /**\n   * A shortcut method for iterating all elements. Shorts this.elements.forEach(...) to this.forEach(...).\n   * @param handler the handler to execute an operation on an element\n   */\n  private forEach(handler: (element: HTMLElement) => void): void {\n    if (!this.elements) {\n      return;\n    }\n    this.elements.forEach((element) => {\n      handler(element);\n    });\n  }\n\n  private findChildElementsOfElement(element: HTMLElement | Document, selector: string): HTMLElement[] {\n    let childElements = element.querySelectorAll(selector);\n\n    // Convert NodeList to Array\n    // https://toddmotto.com/a-comprehensive-dive-into-nodelists-arrays-converting-nodelists-and-understanding-the-dom/\n    return [].slice.call(childElements);\n  }\n\n  private findChildElements(selector: string): HTMLElement[] {\n    let allChildElements = <HTMLElement[]>[];\n\n    if (this.elements) {\n      this.forEach((element) => {\n        allChildElements = allChildElements.concat(this.findChildElementsOfElement(element, selector));\n      });\n    }\n    else {\n      return this.findChildElementsOfElement(document, selector);\n    }\n\n    return allChildElements;\n  }\n\n  /**\n   * Finds all child elements of all elements matching the supplied selector.\n   * @param selector the selector to match with child elements\n   * @returns {DOM} a new DOM instance representing all matched children\n   */\n  find(selector: string): DOM {\n    let allChildElements = this.findChildElements(selector) as HTMLElementWithComponent[];\n    return new DOM(allChildElements);\n  }\n\n  /**\n   * Focuses to the first input element\n   */\n  focusToFirstInput() {\n    const inputElements = this.findChildElements('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n    if (inputElements.length > 0) {\n      inputElements[0].focus();\n    }\n  }\n\n  /**\n   * Focuses to the first input element\n   */\n  scrollTo(x: number, y: number) {\n    this.elements[0].scrollTo(x, y);\n  }\n\n  /**\n   * Returns a string of the inner HTML content of the first element.\n   */\n  html(): string;\n  /**\n   * Sets the inner HTML content of all elements.\n   * @param content a string of plain text or HTML markup\n   */\n  html(content: string): DOM;\n  html(content?: string): string | DOM {\n    if (arguments.length > 0) {\n      return this.setHtml(content);\n    }\n    else {\n      return this.getHtml();\n    }\n  }\n\n  private getHtml(): string | null {\n    return this.elements[0].innerHTML;\n  }\n\n  private setHtml(content: string): DOM {\n    if (content === undefined || content == null) {\n      // Set to empty string to avoid innerHTML getting set to 'undefined' (all browsers) or 'null' (IE9)\n      content = '';\n    }\n\n    this.forEach((element) => {\n      element.innerHTML = content;\n    });\n\n    return this;\n  }\n\n  /**\n   * Clears the inner HTML of all elements (deletes all children).\n   * @returns {DOM}\n   */\n  empty(): DOM {\n    this.forEach((element) => {\n      element.innerHTML = '';\n    });\n    return this;\n  }\n\n  /**\n   * Returns the current value of the first form element, e.g. the selected value of a select box or the text if an\n   * input field.\n   * @returns {string} the value of a form element\n   */\n  val(): string {\n    let element = this.elements[0];\n\n    if (element instanceof HTMLSelectElement || element instanceof HTMLInputElement) {\n      return element.value;\n    }\n    else {\n      // TODO add support for missing form elements\n      throw new Error(`val() not supported for ${typeof element}`);\n    }\n  }\n\n  /**\n   * Returns the value of an attribute on the first element.\n   * @param attribute\n   */\n  attr(attribute: string): string | null;\n  /**\n   * Sets an attribute on all elements.\n   * @param attribute the name of the attribute\n   * @param value the value of the attribute\n   */\n  attr(attribute: string, value: string): DOM;\n  attr(attribute: string, value?: string): string | null | DOM {\n    if (arguments.length > 1) {\n      return this.setAttr(attribute, value);\n    }\n    else {\n      return this.getAttr(attribute);\n    }\n  }\n\n  /**\n   * Removes the attribute of the element.\n   * @param attribute\n   */\n  removeAttr(attribute: string) {\n    this.forEach((element) => {\n      element.removeAttribute(attribute);\n    });\n  }\n\n  private getAttr(attribute: string): string | null {\n    return this.elements[0].getAttribute(attribute);\n  }\n\n  private setAttr(attribute: string, value: string): DOM {\n    this.forEach((element) => {\n      element.setAttribute(attribute, value);\n    });\n    return this;\n  }\n\n  /**\n   * Returns the value of a data element on the first element.\n   * @param dataAttribute the name of the data attribute without the 'data-' prefix\n   */\n  data(dataAttribute: string): string | null;\n  /**\n   * Sets a data attribute on all elements.\n   * @param dataAttribute the name of the data attribute without the 'data-' prefix\n   * @param value the value of the data attribute\n   */\n  data(dataAttribute: string, value: string): DOM;\n  data(dataAttribute: string, value?: string): string | null | DOM {\n    if (arguments.length > 1) {\n      return this.setData(dataAttribute, value);\n    }\n    else {\n      return this.getData(dataAttribute);\n    }\n  }\n\n  private getData(dataAttribute: string): string | null {\n    return this.elements[0].getAttribute('data-' + dataAttribute);\n  }\n\n  private setData(dataAttribute: string, value: string): DOM {\n    this.forEach((element) => {\n      element.setAttribute('data-' + dataAttribute, value);\n    });\n    return this;\n  }\n\n  /**\n   * Appends one or more DOM elements as children to all elements.\n   * @param childElements the chrild elements to append\n   * @returns {DOM}\n   */\n  append(...childElements: DOM[]): DOM {\n    this.forEach((element) => {\n      childElements.forEach((childElement) => {\n        childElement.elements.forEach((_, index) => {\n          element.appendChild(childElement.elements[index]);\n        });\n      });\n    });\n    return this;\n  }\n\n  /**\n   * Removes all elements from the DOM.\n   */\n  remove(): void {\n    this.forEach((element) => {\n      let parent = element.parentNode;\n      if (parent) {\n        parent.removeChild(element);\n      }\n    });\n  }\n\n  /**\n   * Returns the offset of the first element from the document's top left corner.\n   * @returns {Offset}\n   */\n  offset(): Offset {\n    let element = this.elements[0];\n    let elementRect = element.getBoundingClientRect();\n    let htmlRect = document.body.parentElement.getBoundingClientRect();\n\n    // Virtual viewport scroll handling (e.g. pinch zoomed viewports in mobile browsers or desktop Chrome/Edge)\n    // 'normal' zooms and virtual viewport zooms (aka layout viewport) result in different\n    // element.getBoundingClientRect() results:\n    //  - with normal scrolls, the clientRect decreases with an increase in scroll(Top|Left)/page(X|Y)Offset\n    //  - with pinch zoom scrolls, the clientRect stays the same while scroll/pageOffset changes\n    // This means, that the combination of clientRect + scroll/pageOffset does not work to calculate the offset\n    // from the document's upper left origin when pinch zoom is used.\n    // To work around this issue, we do not use scroll/pageOffset but get the clientRect of the html element and\n    // subtract it from the element's rect, which always results in the offset from the document origin.\n    // NOTE: the current way of offset calculation was implemented specifically to track event positions on the\n    // seek bar, and it might break compatibility with jQuery's offset() method. If this ever turns out to be a\n    // problem, this method should be reverted to the old version and the offset calculation moved to the seek bar.\n\n    return {\n      top: elementRect.top - htmlRect.top,\n      left: elementRect.left - htmlRect.left,\n    };\n  }\n\n  /**\n   * Returns the width of the first element.\n   * @returns {number} the width of the first element\n   */\n  width(): number {\n    // TODO check if this is the same as jQuery's width() (probably not)\n    return this.elements[0].offsetWidth;\n  }\n\n  /**\n   * Returns the height of the first element.\n   * @returns {number} the height of the first element\n   */\n  height(): number {\n    // TODO check if this is the same as jQuery's height() (probably not)\n    return this.elements[0].offsetHeight;\n  }\n\n  /**\n   * Returns the size of the first element.\n   * @return {Size} the size of the first element\n   */\n  size(): Size {\n    return { width: this.width(), height: this.height() };\n  }\n\n  /**\n   * Attaches an event handler to one or more events on all elements.\n   * @param eventName the event name (or multiple names separated by space) to listen to\n   * @param eventHandler the event handler to call when the event fires\n   * @param options the options for this event handler\n   * @returns {DOM}\n   */\n  on(eventName: string, eventHandler: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): DOM {\n    let events = eventName.split(' ');\n\n    events.forEach((event) => {\n      if (this.elements == null) {\n        this.document.addEventListener(event, eventHandler, options);\n      }\n      else {\n        this.forEach((element) => {\n          element.addEventListener(event, eventHandler, options);\n        });\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Removes an event handler from one or more events on all elements.\n   * @param eventName the event name (or multiple names separated by space) to remove the handler from\n   * @param eventHandler the event handler to remove\n   * @param options the options for this event handler\n   * @returns {DOM}\n   */\n  off(eventName: string, eventHandler: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): DOM {\n    let events = eventName.split(' ');\n\n    events.forEach((event) => {\n      if (this.elements == null) {\n        this.document.removeEventListener(event, eventHandler, options);\n      }\n      else {\n        this.forEach((element) => {\n          element.removeEventListener(event, eventHandler, options);\n        });\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds the specified class(es) to all elements.\n   * @param className the class(es) to add, multiple classes separated by space\n   * @returns {DOM}\n   */\n  addClass(className: string): DOM {\n    this.forEach((element) => {\n      if (element.classList) {\n        const classNames = className.split(' ')\n          .filter(className => className.length > 0);\n\n        if (classNames.length > 0) {\n          element.classList.add(...classNames);\n        }\n      }\n      else {\n        element.className += ' ' + className;\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Removed the specified class(es) from all elements.\n   * @param className the class(es) to remove, multiple classes separated by space\n   * @returns {DOM}\n   */\n  removeClass(className: string): DOM {\n    this.forEach((element) => {\n      if (element.classList) {\n        const classNames = className.split(' ')\n          .filter(className => className.length > 0);\n\n        if (classNames.length > 0) {\n          element.classList.remove(...classNames);\n        }\n      }\n      else {\n        element.className = element.className.replace(\n          new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Checks if any of the elements has the specified class.\n   * @param className the class name to check\n   * @returns {boolean} true if one of the elements has the class attached, else if no element has it attached\n   */\n  hasClass(className: string): boolean {\n    let hasClass = false;\n\n    this.forEach((element) => {\n      if (element.classList) {\n        if (element.classList.contains(className)) {\n          // Since we are inside a handler, we can't just 'return true'. Instead, we save it to a variable\n          // and return it at the end of the function body.\n          hasClass = true;\n        }\n      }\n      else {\n        if (new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className)) {\n          // See comment above\n          hasClass = true;\n        }\n      }\n    });\n\n    return hasClass;\n  }\n\n  /**\n   * Returns the value of a CSS property of the first element.\n   * @param propertyName the name of the CSS property to retrieve the value of\n   */\n  css(propertyName: string): string | null;\n  /**\n   * Sets the value of a CSS property on all elements.\n   * @param propertyName the name of the CSS property to set the value for\n   * @param value the value to set for the given CSS property\n   */\n  css(propertyName: string, value: string): DOM;\n  /**\n   * Sets a collection of CSS properties and their values on all elements.\n   * @param propertyValueCollection an object containing pairs of property names and their values\n   */\n  css(propertyValueCollection: CssProperties): DOM;\n  css(propertyNameOrCollection: string | CssProperties, value?: string): string | null | DOM {\n    if (typeof propertyNameOrCollection === 'string') {\n      let propertyName = propertyNameOrCollection;\n\n      if (arguments.length === 2) {\n        return this.setCss(propertyName, value);\n      }\n      else {\n        return this.getCss(propertyName);\n      }\n    }\n    else {\n      let propertyValueCollection = propertyNameOrCollection;\n      return this.setCssCollection(propertyValueCollection);\n    }\n  }\n\n  /**\n   * Removes an inline CSS property if it exists\n   * @param propertyName name of the property to remove\n   * @param elementIndex index of the element whose CSS property should get removed\n   */\n  removeCss(propertyName: string, elementIndex = 0): string {\n    return this.elements[elementIndex].style.removeProperty(propertyName);\n  }\n\n  private getCss(propertyName: string): string | null {\n    return getComputedStyle(this.elements[0])[<any>propertyName];\n  }\n\n  private setCss(propertyName: string, value: string): DOM {\n    this.forEach((element) => {\n      // <any> cast to resolve TS7015: http://stackoverflow.com/a/36627114/370252\n      element.style[<any>propertyName] = value;\n    });\n    return this;\n  }\n\n  private setCssCollection(ruleValueCollection: {[ruleName: string]: string}): DOM {\n    this.forEach((element) => {\n      // http://stackoverflow.com/a/34490573/370252\n      Object.assign(element.style, ruleValueCollection);\n    });\n\n    return this;\n  }\n}\n","import {ErrorMessageMap, ErrorMessageTranslator} from './components/errormessageoverlay';\nimport { ErrorEvent } from 'bitmovin-player';\nimport { MobileV3PlayerErrorEvent, MobileV3SourceErrorEvent } from './mobilev3playerapi';\n\n/**\n * @category Utils\n */\nexport namespace ErrorUtils {\n\n  export const defaultErrorMessages: ErrorMessageMap = {\n    1000: 'Error is unknown',\n    1001: 'The player API is not available after a call to PlayerAPI.destroy.',\n    1100: 'General setup error',\n    1101: 'There was an error when inserting the HTML video element',\n    1102: 'No configuration was provided',\n    1103: 'The license is not valid',\n    1104: 'The the domain-locked player is not authorized to playback on this domain',\n    1105: 'The domain is not allowlisted',\n    1106: 'The license server URL is invalid',\n    1107: 'The impression server URL is invalid',\n    1108: 'Could not initialize a rendering engine',\n    1109: 'The used flash version does not support playback',\n    1110: 'Native Flash is not authorized by a valid Adobe token',\n    1111: 'Flash doesn\\'t have sufficient resources',\n    1112: 'Flash container API not available',\n    1113: 'Protocol not supported. This site has been loaded using \"file\" protocol, but unfortunately this is not supported. Please load the page using a web server (using http or https)',\n    1200: 'General source error',\n    1201: 'No valid source was provided',\n    1202: 'The downloaded manifest is invalid',\n    1203: 'There was no technology detected to playback the provided source',\n    1204: 'The stream type is not supported',\n    1205: 'The forced technology is not supported',\n    1206: 'No stream found for supported technologies.',\n    1207: 'The downloaded segment is empty',\n    1208: 'The manifest could not be loaded',\n    1209: 'Progressive stream type not supported or the stream has an error',\n    1210: 'HLS stream has an error',\n    1211: 'The encryption method is not supported',\n    1300: 'General playback error',\n    1301: 'Video decoder or demuxer had an error with the content',\n    1302: 'General error if Flash renderer has an error',\n    1303: 'Flash doesn\\'t have sufficient resources',\n    1304: 'The transmuxer could not be initialized',\n    1400: 'Network error while downloading',\n    1401: 'The manifest download timed out',\n    1402: 'The segment download timed out',\n    1403: 'The progressive stream download timed out',\n    1404: 'The Certificate could not be loaded',\n    2000: 'General DRM error',\n    2001: 'Required DRM configuration is missing',\n    2002: 'The licensing server URL is missing',\n    2003: 'License request failed',\n    2004: 'Key or KeyId is missing',\n    2005: 'Key size is not supported',\n    2006: 'Unable to instantiate a key system supporting the required combinations',\n    2007: 'Unable to create or initialize key session',\n    2008: 'The MediaKey object could not be created/initialized',\n    2009: 'Key error',\n    2010: 'The key system is not supported',\n    2011: 'The certificate is not valid',\n    2012: 'Invalid header key/value pair for PlayReady license request',\n    2013: 'Content cannot be played back because the output is restricted on this machine',\n    2014: 'DRM error for the Flash renderer',\n    2100: 'General VR error',\n    2101: 'Player technology not compatible with VR playback',\n    3000: 'General module error',\n    3001: 'The definition of the module is invalid (e.g. incomplete).',\n    3002: 'The module definition specifies dependencies but the module is not provided via a function for deferred loading.',\n    3003: 'A module cannot be loaded because it has not been added to the player core.',\n    3004: 'A module cannot be loaded because one or more dependencies are missing.',\n    3100: 'An Advertising module error has occurred. Refer to the attached AdvertisingError.',\n  };\n\n  export const defaultMobileV3ErrorMessageTranslator = (error: MobileV3PlayerErrorEvent | MobileV3SourceErrorEvent) => {\n    return error.message;\n  };\n\n  export const defaultWebErrorMessageTranslator: ErrorMessageTranslator = (error: ErrorEvent) => {\n    const errorMessage = ErrorUtils.defaultErrorMessages[error.code];\n\n    if (errorMessage) {\n      // Use the error message text if there is one\n      return `${errorMessage}\\n(${error.name})`; // default error message style\n    } else {\n      // Fallback to error code/name if no message is defined\n      return `${error.code} ${error.name}`;\n    }\n  };\n}\n","import {ArrayUtils} from './arrayutils';\nimport { Timeout } from './timeout';\n/**\n * Function interface for event listeners on the {@link EventDispatcher}.\n */\nexport interface EventListener<Sender, Args> {\n  (sender: Sender, args: Args): void;\n}\n\n/**\n * Empty type for creating {@link EventDispatcher event dispatchers} that do not carry any arguments.\n */\nexport interface NoArgs {\n}\n\n/**\n * Event args for an event that can be canceled.\n */\nexport interface CancelEventArgs extends NoArgs {\n  /**\n   * Gets or sets a flag whether the event should be canceled.\n   */\n  cancel?: boolean;\n}\n\n/**\n * Public interface that represents an event. Can be used to subscribe to and unsubscribe from events.\n */\nexport interface Event<Sender, Args> {\n  /**\n   * Subscribes an event listener to this event dispatcher.\n   * @param listener the listener to add\n   */\n  subscribe(listener: EventListener<Sender, Args>): void;\n\n  /**\n   * Subscribes an event listener to this event dispatcher that is only called once.\n   * @param listener the listener to add\n   */\n  subscribeOnce(listener: EventListener<Sender, Args>): void;\n\n  /**\n   * Subscribes an event listener to this event dispatcher that will be called at a limited rate with a minimum\n   * interval of the specified milliseconds.\n   * @param listener the listener to add\n   * @param rateMs the rate in milliseconds to which calling of the listeners should be limited\n   */\n  subscribeRateLimited(listener: EventListener<Sender, Args>, rateMs: number): void;\n\n  /**\n   * Unsubscribes a subscribed event listener from this dispatcher.\n   * @param listener the listener to remove\n   * @returns {boolean} true if the listener was successfully unsubscribed, false if it isn't subscribed on this\n   *   dispatcher\n   */\n  unsubscribe(listener: EventListener<Sender, Args>): boolean;\n}\n\n/**\n * Event dispatcher to subscribe and trigger events. Each event should have its own dispatcher.\n */\nexport class EventDispatcher<Sender, Args> implements Event<Sender, Args> {\n\n  private listeners: EventListenerWrapper<Sender, Args>[] = [];\n\n  constructor() {\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  subscribe(listener: EventListener<Sender, Args>) {\n    this.listeners.push(new EventListenerWrapper(listener));\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  subscribeOnce(listener: EventListener<Sender, Args>) {\n    this.listeners.push(new EventListenerWrapper(listener, true));\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  subscribeRateLimited(listener: EventListener<Sender, Args>, rateMs: number) {\n    this.listeners.push(new RateLimitedEventListenerWrapper(listener, rateMs));\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  unsubscribe(listener: EventListener<Sender, Args>): boolean {\n    // Iterate through listeners, compare with parameter, and remove if found\n    // NOTE: In case we ever remove all matching listeners instead of just the first, we need to reverse-iterate here\n    for (let i = 0; i < this.listeners.length; i++) {\n      let subscribedListener = this.listeners[i];\n      if (subscribedListener.listener === listener) {\n        subscribedListener.clear();\n        ArrayUtils.remove(this.listeners, subscribedListener);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all listeners from this dispatcher.\n   */\n  unsubscribeAll(): void {\n    // In case of RateLimitedEventListenerWrapper we need to make sure that the timeout callback won't be called\n    for (let listener of this.listeners) {\n      listener.clear();\n    }\n\n    this.listeners = [];\n  }\n\n  /**\n   * Dispatches an event to all subscribed listeners.\n   * @param sender the source of the event\n   * @param args the arguments for the event\n   */\n  dispatch(sender: Sender, args: Args = null) {\n    let listenersToRemove = [];\n\n    // Call every listener\n    // We iterate over a copy of the array of listeners to avoid the case where events are not fired on listeners when\n    // listeners are unsubscribed from within the event handlers during a dispatch (because the indices change and\n    // listeners are shifted within the array).\n    // This means that listener x+1 will still be called if unsubscribed from within the handler of listener x, as well\n    // as listener y+1 will not be called when subscribed from within the handler of listener y.\n    // Array.slice(0) is the fastest array copy method according to: https://stackoverflow.com/a/21514254/370252\n    const listeners = this.listeners.slice(0);\n    for (let listener of listeners) {\n      listener.fire(sender, args);\n\n      if (listener.isOnce()) {\n        listenersToRemove.push(listener);\n      }\n    }\n\n    // Remove one-time listener\n    for (let listenerToRemove of listenersToRemove) {\n      ArrayUtils.remove(this.listeners, listenerToRemove);\n    }\n  }\n\n  /**\n   * Returns the event that this dispatcher manages and on which listeners can subscribe and unsubscribe event handlers.\n   * @returns {Event}\n   */\n  getEvent(): Event<Sender, Args> {\n    // For now, just cast the event dispatcher to the event interface. At some point in the future when the\n    // codebase grows, it might make sense to split the dispatcher into separate dispatcher and event classes.\n    return <Event<Sender, Args>>this;\n  }\n}\n\n/**\n * A basic event listener wrapper to manage listeners within the {@link EventDispatcher}. This is a 'private' class\n * for internal dispatcher use and it is therefore not exported.\n */\nclass EventListenerWrapper<Sender, Args> {\n\n  private eventListener: EventListener<Sender, Args>;\n  private once: boolean;\n\n  constructor(listener: EventListener<Sender, Args>, once: boolean = false) {\n    this.eventListener = listener;\n    this.once = once;\n  }\n\n  /**\n   * Returns the wrapped event listener.\n   * @returns {EventListener<Sender, Args>}\n   */\n  get listener(): EventListener<Sender, Args> {\n    return this.eventListener;\n  }\n\n  /**\n   * Fires the wrapped event listener with the given arguments.\n   * @param sender\n   * @param args\n   */\n  fire(sender: Sender, args: Args) {\n    this.eventListener(sender, args);\n  }\n\n  /**\n   * Checks if this listener is scheduled to be called only once.\n   * @returns {boolean} once if true\n   */\n  isOnce(): boolean {\n    return this.once;\n  }\n\n  clear(): void {\n  }\n}\n\ninterface EventAttributes<Sender, Args> {\n  sender: Sender;\n  args: Args;\n}\n\n/**\n * Extends the basic {@link EventListenerWrapper} with rate-limiting functionality.\n */\nclass RateLimitedEventListenerWrapper<Sender, Args> extends EventListenerWrapper<Sender, Args> {\n\n  private readonly rateMs: number;\n  private readonly rateLimitingEventListener: EventListener<Sender, Args>;\n\n  // save last seen event attributes\n  private lastSeenEvent: EventAttributes<Sender, Args>;\n\n  private rateLimitTimout: Timeout;\n\n  constructor(listener: EventListener<Sender, Args>, rateMs: number) {\n    super(listener); // sets the event listener sink\n\n    this.rateMs = rateMs;\n\n    // starting limiting the events to the given value\n    const startRateLimiting = () => {\n      this.rateLimitTimout.start();\n    };\n\n    // timout for limiting the events\n    this.rateLimitTimout = new Timeout(this.rateMs, () => {\n      if (this.lastSeenEvent) {\n        this.fireSuper(this.lastSeenEvent.sender, this.lastSeenEvent.args);\n        startRateLimiting(); // start rateLimiting again to keep rate limit active even after firing the last seen event\n        this.lastSeenEvent = null;\n      }\n    });\n\n    // In case the events stopping during the rateLimiting we need to track the last seen one and delegate after the\n    // rate limiting is finished. This prevents missing the last update due to the rate limit.\n    this.rateLimitingEventListener = (sender: Sender, args: Args) => {\n      // only fire events if the rateLimiting is not running\n      if (this.shouldFireEvent()) {\n        this.fireSuper(sender, args);\n        startRateLimiting();\n        return;\n      }\n\n      this.lastSeenEvent = {\n        sender: sender,\n        args: args,\n      };\n    };\n  }\n\n  private shouldFireEvent(): boolean {\n    return !this.rateLimitTimout.isActive();\n  }\n\n  private fireSuper(sender: Sender, args: Args) {\n    // Fire the actual external event listener\n    super.fire(sender, args);\n  }\n\n  fire(sender: Sender, args: Args) {\n    // Fire the internal rate-limiting listener instead of the external event listener\n    this.rateLimitingEventListener(sender, args);\n  }\n\n  clear(): void {\n    super.clear();\n    this.rateLimitTimout.clear();\n  }\n}\n","const FocusVisibleCssClassName = '{{PREFIX}}-focus-visible';\n\nexport class FocusVisibilityTracker {\n  private readonly eventHandlerMap: { [eventName: string]: EventListenerOrEventListenerObject };\n  private lastInteractionWasKeyboard: boolean = true;\n\n  constructor(private bitmovinUiPrefix: string) {\n    this.eventHandlerMap = {\n      mousedown: this.onMouseOrPointerOrTouch,\n      pointerdown: this.onMouseOrPointerOrTouch,\n      touchstart: this.onMouseOrPointerOrTouch,\n      keydown: this.onKeyDown,\n      focus: this.onFocus,\n      blur: this.onBlur,\n    };\n    this.registerEventListeners();\n  }\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.metaKey || e.altKey || e.ctrlKey) {\n      return;\n    }\n\n    this.lastInteractionWasKeyboard = true;\n  };\n\n  private onMouseOrPointerOrTouch = () => (this.lastInteractionWasKeyboard = false);\n\n  private onFocus = ({ target: element }: FocusEvent) => {\n    if (\n      this.lastInteractionWasKeyboard &&\n      isHtmlElement(element) &&\n      isBitmovinUi(element, this.bitmovinUiPrefix) &&\n      !element.classList.contains(FocusVisibleCssClassName)\n    ) {\n      element.classList.add(FocusVisibleCssClassName);\n    }\n  };\n\n  private onBlur = ({ target: element }: FocusEvent) => {\n    if (isHtmlElement(element)) {\n      element.classList.remove(FocusVisibleCssClassName);\n    }\n  };\n\n  private registerEventListeners(): void {\n    for (const event in this.eventHandlerMap) {\n      document.addEventListener(event, this.eventHandlerMap[event], true);\n    }\n  }\n\n  private unregisterEventListeners(): void {\n    for (const event in this.eventHandlerMap) {\n      document.removeEventListener(event, this.eventHandlerMap[event], true);\n    }\n  }\n\n  public release(): void {\n    this.unregisterEventListeners();\n  }\n}\n\nfunction isBitmovinUi(element: Element, bitmovinUiPrefix: string): boolean {\n  return element.id.indexOf(bitmovinUiPrefix) === 0;\n}\n\nfunction isHtmlElement(element: unknown): element is HTMLElement & { classList: DOMTokenList } {\n  return (\n    element instanceof HTMLElement && element.classList instanceof DOMTokenList\n  );\n}\n","import { PlayerAPI } from 'bitmovin-player';\n/**\n * The Group Playback API offers control over synchronized playback of a group of clients, e.g. for Apple SharePlay\n * sessions.\n\n * Note: The API currently only covers the immediate needs of the iOS SDK in combination with our UI which is regarding\n * temporarily suspending synchronization of the player from the group. But it is open to be extended as needed in the\n * future.\n */\n\n/**\n * Reason for suspending the synchronization with the group.\n */\nexport enum GroupPlaybackSuspensionReason {\n  UserIsScrubbing = 'userIsScrubbing',\n}\n\n/**\n * A representation of a temporary break in participation.\n */\nexport interface GroupPlaybackSuspension {\n  /**\n   * The reason for the suspension.\n   */\n  reason: GroupPlaybackSuspensionReason;\n\n  /**\n   * A unique identifier.\n   */\n  id: string;\n}\n\n/**\n * Options to be considered upon ending a suspension.\n */\ninterface EndGroupPlaybackSuspensionOptions {\n  /**\n   * A proposed time for the group to seek to.\n   */\n  proposedPlaybackTime?: number;\n}\n\n/**\n * Group Playback API offering control over the player's participation in synchronized playback of a group of clients.\n * For example, an Apple SharePlay session.\n */\ninterface GroupPlaybackAPI {\n  /**\n   * Begins a new suspension.\n   *\n   * Temporarily suspends the local player's synchronization with the group. While suspended, any local playback control\n   * action (e.g. play, pause, seek) will not be forwarded to the group and any action originating from another group\n   * participant will not be performed on the local player.\n   *\n   * @remarks\n   * It is possible for multiple suspensions to exist exist simultaneously with different suspension reasons. The player\n   * will re-synchronize with the group once all existing suspensions have ended.\n   *\n   * @param reason - The reason for the suspension.\n   * @returns A suspension object.\n   */\n  beginSuspension(reason: GroupPlaybackSuspensionReason): GroupPlaybackSuspension;\n\n  /**\n   * Ends the given suspension.\n   *\n   * @param suspension - The suspension to be ended.\n   * @param options - Optional. Options to be considered when ending the suspension, e.g. a proposed seek time for the group.\n   */\n  endSuspension(suspension: GroupPlaybackSuspension, options?: EndGroupPlaybackSuspensionOptions): void;\n\n  /**\n   * Whether the player is currently participating in a group playback session.\n   */\n  hasJoined(): boolean;\n\n  /**\n   * Whether the player is currently suspending synchronization with the group.\n   * Can only return true if `hasJoined()` also is true.\n   */\n  isSuspended(): boolean;\n}\n\n\nexport interface ExtendedPlayerAPI extends PlayerAPI {\n  /**\n   * Group Playback API\n   *\n   * @remarks\n   * This API is optional as not every platform supports group playback.\n   */\n  groupPlayback?: GroupPlaybackAPI;\n}\n","export namespace Guid {\n\n  let guid = 1;\n\n  export function next() {\n    return guid++;\n  }\n}\n","import {DOM} from './dom';\n\nexport interface ImageLoadedCallback {\n  (url: string, width: number, height: number): void;\n}\n\ninterface ImageLoaderState {\n  url: string;\n  image: DOM;\n  loadedCallback: ImageLoadedCallback;\n  loaded: boolean;\n  width: number;\n  height: number;\n}\n\n/**\n * Tracks the loading state of images.\n */\nexport class ImageLoader {\n\n  private state: { [url: string]: ImageLoaderState; } = {};\n\n  /**\n   * Loads an image and call the callback once the image is loaded. If the image is already loaded, the callback\n   * is called immediately, else it is called once loading has finished. Calling this method multiple times for the\n   * same image while it is loading calls only let callback passed into the last call.\n   * @param url The url to the image to load\n   * @param loadedCallback The callback that is called when the image is loaded\n   */\n  load(url: string, loadedCallback: ImageLoadedCallback): void {\n    if (!this.state[url]) {\n      // When the image was never attempted to be loaded before, we create a state and store it in the state map\n      // for later use when the same image is requested to be loaded again.\n      let state: ImageLoaderState = {\n        url: url,\n        image: new DOM('img', {}),\n        loadedCallback: loadedCallback,\n        loaded: false,\n        width: 0,\n        height: 0,\n      };\n      this.state[url] = state;\n\n      // Listen to the load event, update the state and call the callback once the image is loaded\n      state.image.on('load', (e) => {\n        state.loaded = true;\n        state.width = (<HTMLImageElement>state.image.get(0)).width;\n        state.height = (<HTMLImageElement>state.image.get(0)).height;\n\n        this.callLoadedCallback(state);\n      });\n\n      // Set the image URL to start the loading\n      state.image.attr('src', state.url);\n    } else {\n      // We have a state for the requested image, so it is either already loaded or currently loading\n      let state = this.state[url];\n\n      // We overwrite the callback to make sure that only the callback of the latest call gets executed.\n      // Earlier callbacks become invalid once a new load call arrives, and they are not called as long as the image\n      // is not loaded.\n      state.loadedCallback = loadedCallback;\n\n      // When the image is already loaded, we directly execute the callback instead of waiting for the load event\n      if (state.loaded) {\n        this.callLoadedCallback(state);\n      }\n    }\n  }\n\n  private callLoadedCallback(state: ImageLoaderState): void {\n    state.loadedCallback(state.url, state.width, state.height);\n  }\n}\n","import vocabularyDe from './languages/de.json';\nimport vocabularyEn from './languages/en.json';\nimport vocabularyEs from './languages/es.json';\nimport vocabularyNl from './languages/nl.json';\n\nimport { LocalizationConfig } from '../uimanager.js';\n\nexport const defaultVocabularies: Vocabularies = {\n  'en': vocabularyEn,\n  'de': vocabularyDe,\n  'es': vocabularyEs,\n  'nl': vocabularyNl,\n};\n\nconst defaultLocalizationConfig: LocalizationConfig = {\n  language: 'en',\n  vocabularies: defaultVocabularies,\n};\n\n/**\n * @category Localization\n */\nexport type Localizer = () => string;\n/**\n * @category Localization\n */\nexport type LocalizableText = string | Localizer;\n\n/**\n * @category Localization\n */\nexport interface Vocabulary {\n  'settings.video.quality': string;\n  'settings.audio.quality': string;\n  'settings.audio.track': string;\n  'settings.audio.mute': string;\n  'settings.audio.volume': string;\n  'settings.subtitles': string;\n  'settings.subtitles.font.color': string;\n  'settings.subtitles.font.opacity': string;\n  'settings.subtitles.background.color': string;\n  'settings.subtitles.background.opacity': string;\n  'settings.subtitles.font.size': string;\n  'settings.subtitles.characterEdge': string;\n  'settings.subtitles.characterEdge.raised': string;\n  'settings.subtitles.characterEdge.depressed': string;\n  'settings.subtitles.characterEdge.uniform': string;\n  'settings.subtitles.characterEdge.dropshadowed': string;\n  'settings.subtitles.font.family': string;\n  'settings.subtitles.font.family.monospacedserif': string;\n  'settings.subtitles.font.family.proportionalserif': string;\n  'settings.subtitles.font.family.monospacedsansserif': string;\n  'settings.subtitles.font.family.proportionalsansserif': string;\n  'settings.subtitles.font.family.casual': string;\n  'settings.subtitles.font.family.cursive': string;\n  'settings.subtitles.font.family.smallcapital': string;\n  'settings.subtitles.window.color': string;\n  'settings.subtitles.window.opacity': string;\n  'play': string;\n  'settings.time.hours': string;\n  'settings.time.minutes': string;\n  'settings.time.seconds': string;\n  'colors.white': string;\n  'colors.black': string;\n  'colors.red': string;\n  'colors.green': string;\n  'colors.blue': string;\n  'colors.cyan': string;\n  'colors.yellow': string;\n  'colors.magenta': string;\n  'percent': string;\n  'settings': string;\n  'ads.remainingTime': string;\n  'pictureInPicture': string;\n  'appleAirplay': string;\n  'googleCast': string;\n  'vr': string;\n  'off': string;\n  'auto': string;\n  'back': string;\n  'reset': string;\n  'replay': string;\n  'normal': string;\n  'default': string;\n  'open': string;\n  'close': string;\n  'fullscreen': string;\n  'speed': string;\n  'playPause': string;\n  'live': string;\n  'subtitle.example': string;\n  'subtitle.select': string;\n  'playingOn': string;\n  'connectingTo': string;\n  'watermarkLink': string;\n  'controlBar': string;\n  'player': string;\n  'seekBar': string;\n  'seekBar.value': string;\n  'seekBar.timeshift': string;\n  'seekBar.durationText': string;\n  'ecoMode': string;\n  'ecoMode.title': string;\n}\n\n/**\n * @category Localization\n */\nexport type CustomVocabulary<V> = V & Partial<Vocabulary>;\n\n/**\n * @category Localization\n */\nexport interface Vocabularies {\n  [key: string]: CustomVocabulary<Record<string, string>>;\n}\n\n/**\n * @category Localization\n */\nexport class I18n {\n  private language: string;\n  private vocabulary: CustomVocabulary<Record<string, string>>;\n\n  constructor(config: LocalizationConfig) {\n    this.setConfig(config);\n  }\n\n  public setConfig(config: LocalizationConfig) {\n    const mergedConfig = { ...defaultLocalizationConfig, ...config };\n    const detectBrowserLanguage = mergedConfig.language === 'auto';\n    const vocabularies = this.mergeVocabulariesWithDefaultVocabularies(mergedConfig.vocabularies);\n    this.initializeLanguage(mergedConfig.language, detectBrowserLanguage, vocabularies);\n    this.initializeVocabulary(vocabularies);\n  }\n\n  private static containsLanguage(vocabularies: Vocabularies, language: string) {\n    return vocabularies.hasOwnProperty(language);\n  }\n\n  private mergeVocabulariesWithDefaultVocabularies(vocabularies: Vocabularies = {}) {\n    const rawVocabularies: Vocabularies = { ...defaultVocabularies, ...vocabularies };\n    return Object.keys(rawVocabularies).reduce((mergedVocabularies, language) => {\n      let vocabulary = rawVocabularies[language];\n      if (I18n.containsLanguage(defaultVocabularies, language) && I18n.containsLanguage(vocabularies, language)) {\n        vocabulary = { ...defaultVocabularies[language], ...vocabularies[language] };\n      }\n      return { ...mergedVocabularies, [language]: vocabulary };\n    }, {});\n  }\n\n  private initializeLanguage(\n    language: string,\n    browserLanguageDetectionEnabled: boolean,\n    vocabularies: Vocabularies,\n  ) {\n    if (browserLanguageDetectionEnabled) {\n      const userLanguage = window.navigator.language;\n\n      if (I18n.containsLanguage(vocabularies, userLanguage)) {\n        this.language = userLanguage;\n        return;\n      }\n      const shortenedUserLanguage = userLanguage.slice(0, 2);\n      if (I18n.containsLanguage(vocabularies, shortenedUserLanguage)) {\n        this.language = shortenedUserLanguage;\n        return;\n      }\n    }\n\n    this.language = language;\n  }\n\n  private initializeVocabulary(vocabularies: Vocabularies) {\n    this.vocabulary = ['en', this.language]\n      .reduce((vocab, lang) => ({ ...vocab, ...(vocabularies[lang] || {}) }), {});\n  }\n\n  private replaceVariableWithPlaceholderIfExists(text: string, config: any) {\n    const matches = text.match(new RegExp('{[a-zA-Z0-9]+}', 'g'));\n    if (matches.length === 0) {\n      return text;\n    }\n\n    return matches\n      .map((m: string) => ({ match: m, key: m.slice(1, -1) }))\n      .reduce((str, { key, match }) => config.hasOwnProperty(key) ? str.replace(match, config[key]) : str, text);\n  }\n\n  public getLocalizer<V extends CustomVocabulary<Record<string, string>> = CustomVocabulary<Record<string, string>>>(\n    key: keyof V,\n    config?: Record<string, string | number>,\n  ): Localizer {\n    return () => {\n      if (key == null) { // because sometimes we call toDomElement() without configuring the component or setting text...\n        return undefined;\n      }\n      let vocabularyString = this.vocabulary[key as string];\n\n      if (vocabularyString == null) {\n        vocabularyString = key as string;\n      }\n\n      if (config != null) {\n        vocabularyString = this.replaceVariableWithPlaceholderIfExists(vocabularyString, config);\n      }\n\n      return vocabularyString;\n    };\n  }\n\n  public performLocalization(text: LocalizableText) {\n    return typeof text === 'function' ? text() : text;\n  }\n}\n\n/**\n * @category Localization\n */\nexport const i18n = new I18n(defaultLocalizationConfig);\n","module.exports={\n  \"settings.video.quality\": \"Videoqualität\",\n  \"settings.audio.quality\": \"Audioqualität\",\n  \"settings.audio.track\": \"Audiospur\",\n  \"speed\": \"Geschwindigkeit\",\n  \"play\": \"Abspielen\",\n  \"pause\": \"Pause\",\n  \"playPause\": \"Abspielen/Pause\",\n  \"open\": \"öffnen\",\n  \"close\": \"Schließen\",\n  \"settings.audio.mute\": \"Stummschaltung\",\n  \"settings.audio.volume\": \"Lautstärke\",\n  \"pictureInPicture\": \"Bild im Bild\",\n  \"appleAirplay\": \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\": \"VR\",\n  \"settings\": \"Einstellungen\",\n  \"fullscreen\": \"Vollbild\",\n  \"off\": \"aus\",\n  \"settings.subtitles\": \"Untertitel\",\n  \"settings.subtitles.font.size\": \"Größe\",\n  \"settings.subtitles.font.family\": \"Schriftart\",\n  \"settings.subtitles.font.color\": \"Farbe\",\n  \"settings.subtitles.font.opacity\": \"Deckkraft\",\n  \"settings.subtitles.characterEdge\": \"Ränder\",\n  \"settings.subtitles.background.color\": \"Hintergrundfarbe\",\n  \"settings.subtitles.background.opacity\": \"Hintergrunddeckkraft\",\n  \"settings.subtitles.window.color\": \"Hintergrundfarbe\",\n  \"settings.subtitles.window.opacity\": \"Hintergrunddeckkraft\",\n  \"settings.time.hours\": \"Stunden\",\n  \"settings.time.minutes\": \"Minuten\",\n  \"settings.time.seconds\": \"Sekunden\",\n  \"back\": \"Zurück\",\n  \"reset\": \"Zurücksetzen\",\n  \"replay\": \"Wiederholen\",\n  \"ads.remainingTime\": \"Diese Anzeige endet in {remainingTime} Sekunden\",\n  \"default\": \"standard\",\n  \"colors.white\": \"weiß\",\n  \"colors.black\": \"schwarz\",\n  \"colors.red\": \"rot\",\n  \"colors.green\": \"grün\",\n  \"colors.blue\": \"blau\",\n  \"colors.yellow\": \"gelb\",\n  \"subtitle.example\": \"Beispiel Untertitel\",\n  \"subtitle.select\": \"Untertitel auswählen\",\n  \"playingOn\": \"Spielt auf <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Verbindung mit <strong>{castDeviceName}</strong> wird hergestellt...\",\n  \"watermarkLink\": \"Link zum Homepage\",\n  \"controlBar\": \"Videoplayer Kontrollen\",\n  \"player\": \"Video player\",\n  \"seekBar\": \"Video-Timeline\",\n  \"seekBar.value\": \"Wert\",\n  \"seekBar.timeshift\": \"Timeshift\",\n  \"seekBar.durationText\": \"aus\",\n  \"quickseek.forward\": \"Vor\",\n  \"quickseek.rewind\": \"Zurück\",\n  \"ecoMode\": \"ecoMode\",\n  \"ecoMode.title\":\"Eco Mode\"\n}\n","module.exports={\n  \"settings.video.quality\": \"Video Quality\",\n  \"settings.audio.quality\": \"Audio Quality\",\n  \"settings.audio.track\": \"Audio Track\",\n  \"settings.audio.mute\" : \"Mute\",\n  \"settings.audio.volume\" : \"Volume\",\n  \"settings.subtitles.window.color\" : \"Window color\",\n  \"settings.subtitles.window.opacity\" : \"Window opacity\",\n  \"settings.subtitles\" : \"Subtitles\",\n  \"settings.subtitles.font.color\" : \"Font color\",\n  \"settings.subtitles.font.opacity\" : \"Font opacity\",\n  \"settings.subtitles.background.color\" : \"Background color\",\n  \"settings.subtitles.background.opacity\": \"Background opacity\",\n  \"colors.white\": \"white\",\n  \"colors.black\": \"black\",\n  \"colors.red\": \"red\",\n  \"colors.green\": \"green\",\n  \"colors.blue\": \"blue\",\n  \"colors.cyan\": \"cyan\",\n  \"colors.yellow\": \"yellow\",\n  \"colors.magenta\": \"magenta\",\n  \"percent\": \"{value}%\",\n  \"settings.subtitles.font.size\": \"Font size\",\n  \"settings.subtitles.characterEdge\": \"Character edge\",\n  \"settings.subtitles.characterEdge.raised\": \"raised\",\n  \"settings.subtitles.characterEdge.depressed\": \"depressed\",\n  \"settings.subtitles.characterEdge.uniform\": \"uniform\",\n  \"settings.subtitles.characterEdge.dropshadowed\": \"drop shadowed\",\n  \"settings.subtitles.font.family\": \"Font family\",\n  \"settings.subtitles.font.family.monospacedserif\": \"monospaced serif\",\n  \"settings.subtitles.font.family.proportionalserif\": \"proportional serif\",\n  \"settings.subtitles.font.family.monospacedsansserif\": \"monospaced sans serif\",\n  \"settings.subtitles.font.family.proportionalsansserif\": \"proportional sans serif\",\n  \"settings.subtitles.font.family.casual\": \"casual\",\n  \"settings.subtitles.font.family.cursive\": \"cursive\",\n  \"settings.subtitles.font.family.smallcapital\": \"small capital\",\n  \"settings.time.hours\": \"Hours\",\n  \"settings.time.minutes\": \"Minutes\",\n  \"settings.time.seconds\": \"Seconds\",\n  \"ads.remainingTime\": \"This ad will end in {remainingTime} seconds.\",\n  \"settings\": \"Settings\",\n  \"fullscreen\" : \"Fullscreen\",\n  \"speed\": \"Speed\",\n  \"playPause\" : \"Play/Pause\",\n  \"play\": \"Play\",\n  \"pause\": \"Pause\",\n  \"open\": \"open\",\n  \"close\": \"Close\",\n  \"pictureInPicture\": \"Picture-in-Picture\",\n  \"appleAirplay\" : \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\" : \"VR\",\n  \"off\": \"off\",\n  \"auto\": \"auto\",\n  \"ecoMode\": \"ecoMode\",\n  \"ecoMode.title\":\"Eco Mode\",\n  \"back\" : \"Back\",\n  \"reset\": \"Reset\",\n  \"replay\": \"Replay\",\n  \"normal\": \"normal\",\n  \"default\": \"default\",\n  \"live\": \"Live\",\n  \"subtitle.example\": \"example subtitle\",\n  \"subtitle.select\": \"Select subtitle\",\n  \"playingOn\": \"Playing on <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Connecting to <strong>{castDeviceName}</strong>...\",\n  \"watermarkLink\": \"Link to Homepage\",\n  \"controlBar\": \"Video player controls\",\n  \"player\": \"Video player\",\n  \"seekBar\": \"Video timeline\",\n  \"seekBar.value\": \"Value\",\n  \"seekBar.timeshift\": \"Timeshift\",\n  \"seekBar.durationText\": \"out of\",\n  \"quickseek.forward\": \"Fast Forward\",\n  \"quickseek.rewind\": \"Rewind\"\n}\n","module.exports={\n  \"settings.video.quality\": \"Calidad de Video\",\n  \"settings.audio.quality\": \"Calidad de Audio\",\n  \"settings.audio.track\": \"Pista de Audio\",\n  \"settings.audio.mute\" : \"Silencio\",\n  \"settings.audio.volume\" : \"Volumen\",\n  \"settings.subtitles.window.color\" : \"color de Ventana\",\n  \"settings.subtitles.window.opacity\" : \"opacidad de Ventana\",\n  \"settings.subtitles\" : \"Subtítulos\",\n  \"settings.subtitles.font.color\" : \"color de Fuente\",\n  \"settings.subtitles.font.opacity\" : \"opacidad de Fuente\",\n  \"settings.subtitles.background.color\" : \"color de Fondo\",\n  \"settings.subtitles.background.opacity\": \"opacidad de Fondo\",\n  \"colors.white\": \"blanco\",\n  \"colors.black\": \"negro\",\n  \"colors.red\": \"rojo\",\n  \"colors.green\": \"verde\",\n  \"colors.blue\": \"azul\",\n  \"colors.cyan\": \"cian\",\n  \"colors.yellow\": \"amarillo\",\n  \"colors.magenta\": \"magenta\",\n  \"percent\": \"{value}%\",\n  \"settings.subtitles.font.size\": \"tamaño de Fuente\",\n  \"settings.subtitles.characterEdge\": \"borde del Caracter\",\n  \"settings.subtitles.characterEdge.raised\": \"alzado\",\n  \"settings.subtitles.characterEdge.depressed\": \"discreto\",\n  \"settings.subtitles.characterEdge.uniform\": \"uniforme\",\n  \"settings.subtitles.characterEdge.dropshadowed\": \"sombreado\",\n  \"settings.subtitles.font.family\": \"tipo de Fuente\",\n  \"settings.subtitles.font.family.monospacedserif\": \"monospaced serif\",\n  \"settings.subtitles.font.family.proportionalserif\": \"proportional serif\",\n  \"settings.subtitles.font.family.monospacedsansserif\": \"monospaced sans serif\",\n  \"settings.subtitles.font.family.proportionalsansserif\": \"proportional sans serif\",\n  \"settings.subtitles.font.family.casual\": \"casual\",\n  \"settings.subtitles.font.family.cursive\": \"cursiva\",\n  \"settings.subtitles.font.family.smallcapital\": \"small capital\",\n  \"settings.time.hours\": \"Horas\",\n  \"settings.time.minutes\": \"Minutos\",\n  \"settings.time.seconds\": \"Segundos\",\n  \"ads.remainingTime\": \"Este anuncio acabará en {remainingTime} segundos.\",\n  \"settings\": \"Configuración\",\n  \"fullscreen\" : \"Pantalla Completa\",\n  \"speed\": \"Velocidad\",\n  \"playPause\" : \"Reproducir/Pausa\",\n  \"play\": \"Reproducir\",\n  \"pause\": \"Pausa\",\n  \"open\": \"Abrir\",\n  \"close\": \"Cerrar\",\n  \"pictureInPicture\": \"Imagen en Imagen\",\n  \"appleAirplay\" : \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\" : \"VR\",\n  \"off\": \"off\",\n  \"auto\": \"auto\",\n  \"ecoMode\": \"ecoMode\",\n  \"ecoMode.title\": \"Eco Mode\",\n  \"back\" : \"Atrás\",\n  \"reset\": \"Reiniciar\",\n  \"replay\": \"Rebobinar\",\n  \"normal\": \"normal\",\n  \"default\": \"predeterminado\",\n  \"live\": \"Directo\",\n  \"subtitle.example\": \"Ejemplo de Subtítulo\",\n  \"subtitle.select\": \"Seleccionar subtítulo\",\n  \"playingOn\": \"Reproduciendo en <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Conectando a <strong>{castDeviceName}</strong>...\",\n  \"watermarkLink\": \"Enlace al inicio\",\n  \"controlBar\": \"Controles del Reproductor\",\n  \"player\": \"Reproductor de Video\",\n  \"seekBar\": \"Línea de Tiempo\",\n  \"seekBar.value\": \"posición\",\n  \"seekBar.timeshift\": \"cambio de posición\",\n  \"seekBar.durationText\": \"de\",\n  \"quickseek.forward\": \"Adelantar\",\n  \"quickseek.rewind\": \"Rebobinar\"\n}","module.exports={\n  \"settings.video.quality\": \"Videokwaliteit\",\n  \"settings.audio.quality\": \"Audiokwaliteit\",\n  \"settings.audio.track\": \"Audiospoor\",\n  \"settings.audio.mute\": \"Dempen\",\n  \"settings.audio.volume\": \"Volume\",\n  \"settings.subtitles.window.color\": \"Vensterkleur\",\n  \"settings.subtitles.window.opacity\": \"Venster doorzichtigheid\",\n  \"settings.subtitles\": \"Ondertiteling\",\n  \"settings.subtitles.font.color\": \"Lettertype kleur\",\n  \"settings.subtitles.font.opacity\": \"Lettertype doorzichtigheid\",\n  \"settings.subtitles.background.color\": \"Achtergrondkleur\",\n  \"settings.subtitles.background.opacity\": \"Achtergrond doorzichtigheid\",\n  \"colors.white\": \"wit\",\n  \"colors.black\": \"zwart\",\n  \"colors.red\": \"rood\",\n  \"colors.green\": \"groen\",\n  \"colors.blue\": \"blauw\",\n  \"colors.cyan\": \"cyaan\",\n  \"colors.yellow\": \"geel\",\n  \"colors.magenta\": \"magenta\",\n  \"percent\": \"{value}%\",\n  \"settings.subtitles.font.size\": \"Lettertype grootte\",\n  \"settings.subtitles.characterEdge\": \"Lettertype rand\",\n  \"settings.subtitles.characterEdge.raised\": \"verhoogd\",\n  \"settings.subtitles.characterEdge.depressed\": \"verlaagd\",\n  \"settings.subtitles.characterEdge.uniform\": \"uniform\",\n  \"settings.subtitles.characterEdge.dropshadowed\": \"schaduw\",\n  \"settings.subtitles.font.family\": \"Standaard lettertype\",\n  \"settings.subtitles.font.family.monospacedserif\": \"monospace serif\",\n  \"settings.subtitles.font.family.proportionalserif\": \"proportioneel serif\",\n  \"settings.subtitles.font.family.monospacedsansserif\": \"monospace sans-serif\",\n  \"settings.subtitles.font.family.proportionalsansserif\": \"proportioneel sans-serif\",\n  \"settings.subtitles.font.family.casual\": \"casual\",\n  \"settings.subtitles.font.family.cursive\": \"cursief\",\n  \"settings.subtitles.font.family.smallcapital\": \"kleine hoofdletters\",\n  \"settings.time.hours\": \"Uren\",\n  \"settings.time.minutes\": \"Minuten\",\n  \"settings.time.seconds\": \"Seconden\",\n  \"ads.remainingTime\": \"Deze advertentie eindigt in {remainingTime} seconden.\",\n  \"settings\": \"Instellingen\",\n  \"fullscreen\": \"Volledig scherm\",\n  \"speed\": \"Snelheid\",\n  \"playPause\": \"Afspelen/Pauzeren\",\n  \"play\": \"Afspelen\",\n  \"pause\": \"Pauzeren\",\n  \"open\": \"Openen\",\n  \"close\": \"Sluiten\",\n  \"pictureInPicture\": \"Picture-in-Picture\",\n  \"appleAirplay\": \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\": \"VR\",\n  \"off\": \"uit\",\n  \"auto\": \"automatisch\",\n  \"ecoMode\": \"Eco-modus\",\n  \"ecoMode.title\": \"Eco-modus\",\n  \"back\": \"Terug\",\n  \"reset\": \"Reset\",\n  \"replay\": \"Opnieuw afspelen\",\n  \"normal\": \"normaal\",\n  \"default\": \"standaard\",\n  \"live\": \"Live\",\n  \"subtitle.example\": \"voorbeeld ondertiteling\",\n  \"subtitle.select\": \"Selecteer ondertiteling\",\n  \"playingOn\": \"Speelt af op <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Verbinden met <strong>{castDeviceName}</strong>...\",\n  \"watermarkLink\": \"Link naar homepage\",\n  \"controlBar\": \"Videospeler bediening\",\n  \"player\": \"Videospeler\",\n  \"seekBar\": \"Video tijdlijn\",\n  \"seekBar.value\": \"Waarde\",\n  \"seekBar.timeshift\": \"Tijdverschuiving\",\n  \"seekBar.durationText\": \"van\",\n  \"quickseek.forward\": \"Vooruitspoelen\",\n  \"quickseek.rewind\": \"Terugspoelen\"\n}","export const version: string = '{{VERSION}}';\n// Management\nexport * from './uimanager';\nexport * from './uiconfig';\n// Factories\nexport { UIFactory } from './uifactory';\nexport { DemoFactory } from './demofactory';\n// Utils\nexport { ArrayUtils } from './arrayutils';\nexport { StringUtils } from './stringutils';\nexport { PlayerUtils } from './playerutils';\nexport { UIUtils } from './uiutils';\nexport { BrowserUtils } from './browserutils';\nexport { StorageUtils } from './storageutils';\nexport { ErrorUtils } from './errorutils';\n// Localization\nexport { i18n, I18n, Vocabulary, Vocabularies, CustomVocabulary, LocalizableText, Localizer } from './localization/i18n';\n// Spatial Navigation\nexport { SpatialNavigation } from './spatialnavigation/spatialnavigation';\nexport { NavigationGroup } from './spatialnavigation/navigationgroup';\nexport { RootNavigationGroup } from './spatialnavigation/rootnavigationgroup';\nexport {\n  ListNavigationGroup,\n  ListOrientation,\n} from './spatialnavigation/ListNavigationGroup';\n// Components\nexport { Button, ButtonConfig } from './components/button';\nexport { ControlBar, ControlBarConfig } from './components/controlbar';\nexport { FullscreenToggleButton } from './components/fullscreentogglebutton';\nexport { HugePlaybackToggleButton } from './components/hugeplaybacktogglebutton';\nexport { PlaybackTimeLabel, PlaybackTimeLabelConfig, PlaybackTimeLabelMode } from './components/playbacktimelabel';\nexport { PlaybackToggleButton, PlaybackToggleButtonConfig } from './components/playbacktogglebutton';\nexport { SeekBar, SeekBarConfig, SeekPreviewEventArgs, SeekBarMarker } from './components/seekbar';\nexport { SelectBox } from './components/selectbox';\nexport { ItemSelectionList } from './components/itemselectionlist';\nexport { SettingsPanel, SettingsPanelConfig } from './components/settingspanel';\nexport { SettingsToggleButton, SettingsToggleButtonConfig } from './components/settingstogglebutton';\nexport { ToggleButton, ToggleButtonConfig } from './components/togglebutton';\nexport { VideoQualitySelectBox } from './components/videoqualityselectbox';\nexport { VolumeToggleButton } from './components/volumetogglebutton';\nexport { VRToggleButton } from './components/vrtogglebutton';\nexport { Watermark, WatermarkConfig } from './components/watermark';\nexport { UIContainer, UIContainerConfig } from './components/uicontainer';\nexport { Container, ContainerConfig } from './components/container';\nexport { Label, LabelConfig } from './components/label';\nexport { AudioQualitySelectBox } from './components/audioqualityselectbox';\nexport { AudioTrackSelectBox } from './components/audiotrackselectbox';\nexport { CastStatusOverlay } from './components/caststatusoverlay';\nexport { CastToggleButton } from './components/casttogglebutton';\nexport { Component, ComponentConfig, ComponentHoverChangedEventArgs } from './components/component';\nexport { ErrorMessageOverlay, ErrorMessageOverlayConfig, ErrorMessageTranslator, ErrorMessageMap } from './components/errormessageoverlay';\nexport { RecommendationOverlay } from './components/recommendationoverlay';\nexport { SeekBarLabel, SeekBarLabelConfig } from './components/seekbarlabel';\nexport { SubtitleOverlay } from './components/subtitleoverlay';\nexport { SubtitleSelectBox } from './components/subtitleselectbox';\nexport { TitleBar, TitleBarConfig } from './components/titlebar';\nexport { VolumeControlButton, VolumeControlButtonConfig } from './components/volumecontrolbutton';\nexport { ClickOverlay, ClickOverlayConfig } from './components/clickoverlay';\nexport { AdSkipButton, AdSkipButtonConfig } from './components/adskipbutton';\nexport { AdMessageLabel } from './components/admessagelabel';\nexport { AdClickOverlay } from './components/adclickoverlay';\nexport { PlaybackSpeedSelectBox } from './components/playbackspeedselectbox';\nexport { HugeReplayButton } from './components/hugereplaybutton';\nexport { BufferingOverlay, BufferingOverlayConfig } from './components/bufferingoverlay';\nexport { CastUIContainer } from './components/castuicontainer';\nexport { PlaybackToggleOverlay, PlaybackToggleOverlayConfig } from './components/playbacktoggleoverlay';\nexport { CloseButton, CloseButtonConfig } from './components/closebutton';\nexport { MetadataLabel, MetadataLabelContent, MetadataLabelConfig } from './components/metadatalabel';\nexport { AirPlayToggleButton } from './components/airplaytogglebutton';\nexport { VolumeSlider, VolumeSliderConfig } from './components/volumeslider';\nexport { PictureInPictureToggleButton } from './components/pictureinpicturetogglebutton';\nexport { Spacer } from './components/spacer';\nexport { BackgroundColorSelectBox } from './components/subtitlesettings/backgroundcolorselectbox';\nexport { BackgroundOpacitySelectBox } from './components/subtitlesettings/backgroundopacityselectbox';\nexport { CharacterEdgeSelectBox } from './components/subtitlesettings/characteredgeselectbox';\nexport { FontColorSelectBox } from './components/subtitlesettings/fontcolorselectbox';\nexport { FontFamilySelectBox } from './components/subtitlesettings/fontfamilyselectbox';\nexport { FontOpacitySelectBox } from './components/subtitlesettings/fontopacityselectbox';\nexport { FontSizeSelectBox } from './components/subtitlesettings/fontsizeselectbox';\nexport { SubtitleSettingSelectBox } from './components/subtitlesettings/subtitlesettingselectbox';\nexport { SubtitleSettingsLabel } from './components/subtitlesettings/subtitlesettingslabel';\nexport { WindowColorSelectBox } from './components/subtitlesettings/windowcolorselectbox';\nexport { WindowOpacitySelectBox } from './components/subtitlesettings/windowopacityselectbox';\nexport { SubtitleSettingsResetButton } from './components/subtitlesettings/subtitlesettingsresetbutton';\nexport { ListBox } from './components/listbox';\nexport { SubtitleListBox } from './components/subtitlelistbox';\nexport { AudioTrackListBox } from './components/audiotracklistbox';\nexport { SettingsPanelPage } from './components/settingspanelpage';\nexport { SettingsPanelPageBackButton } from './components/settingspanelpagebackbutton';\nexport { SettingsPanelPageOpenButton } from './components/settingspanelpageopenbutton';\nexport { SubtitleSettingsPanelPage, SubtitleSettingsPanelPageConfig } from './components/subtitlesettings/subtitlesettingspanelpage';\nexport { SettingsPanelItem } from './components/settingspanelitem';\nexport { ReplayButton } from './components/replaybutton';\nexport { QuickSeekButton, QuickSeekButtonConfig } from './components/quickseekbutton';\nexport { ListSelector, ListSelectorConfig, ListItem, ListItemFilter, ListItemLabelTranslator } from './components/listselector';\n\ndeclare global {\n  interface Window {\n    isRadioModeActive: boolean | null;\n    isRadioModeAvailable: boolean | null;\n    isQuanteecDisplayed:  boolean | null;\n  }\n}\n\nconst state = {\n  isRadioModeActive: null as boolean | null,\n  isRadioModeAvailable: null as boolean | null,\n  isQuanteecDisplayed: null as boolean | null,\n};\n\nif (typeof window.isRadioModeActive === 'undefined') {\n  Object.defineProperty(window, 'isRadioModeActive', {\n    get() {\n      return state.isRadioModeActive;\n    },\n    set(value) {\n      state.isRadioModeActive = value;\n      const event = new CustomEvent('isRadioModeActiveChange', {\n        detail: value,\n      });\n      window.dispatchEvent(event);\n    },\n  });\n}\n\nif (typeof window.isRadioModeAvailable === 'undefined') {\n  Object.defineProperty(window, 'isRadioModeAvailable', {\n    get() {\n      return state.isRadioModeAvailable;\n    },\n    set(value) {\n      state.isRadioModeAvailable = value;\n      const event = new CustomEvent('isRadioModeAvailableChange', {\n        detail: value,\n      });\n      window.dispatchEvent(event);\n    },\n  });\n}\n\nif (typeof window.isQuanteecDisplayed === 'undefined') {\n  Object.defineProperty(window, 'isQuanteecDisplayed', {\n    get() {\n      return state.isQuanteecDisplayed;\n    },\n    set(value) {\n      state.isQuanteecDisplayed = value;\n      const event = new CustomEvent('isQuanteecDisplayedChange', {\n        detail: value,\n      });\n      window.dispatchEvent(event);\n    },\n  });\n}\n\n// Object.assign polyfill for ES5/IE9\n// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  Object.assign = function (target: any) {\n    'use strict';\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (let index = 1; index < arguments.length; index++) {\n      let source = arguments[index];\n      if (source != null) {\n        for (let key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n}\n","import { PlayerAPI, PlayerEvent, PlayerEventBase, PlayerEventCallback } from 'bitmovin-player';\nimport { WrappedPlayer } from './uimanager';\n\nexport enum MobileV3PlayerEvent {\n  SourceError = 'sourceerror',\n  PlayerError = 'playererror',\n  PlaylistTransition = 'playlisttransition',\n}\n\nexport interface MobileV3PlayerErrorEvent extends PlayerEventBase {\n  code: number;\n  message: string;\n}\n\nexport interface MobileV3SourceErrorEvent extends PlayerEventBase {\n  code: number;\n  message: string;\n}\n\nexport type MobileV3PlayerEventType = PlayerEvent | MobileV3PlayerEvent;\n\nexport interface MobileV3PlayerAPI extends PlayerAPI {\n  on(eventType: MobileV3PlayerEventType, callback: PlayerEventCallback): void;\n  exports: PlayerAPI['exports'] & { PlayerEvent: MobileV3PlayerEventType };\n}\n\nexport function isMobileV3PlayerAPI(player: WrappedPlayer | PlayerAPI | MobileV3PlayerAPI): player is MobileV3PlayerAPI {\n  for (const key in MobileV3PlayerEvent) {\n    if (MobileV3PlayerEvent.hasOwnProperty(key) && !player.exports.PlayerEvent.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import {Event, EventDispatcher, NoArgs} from './eventdispatcher';\nimport {BrowserUtils} from './browserutils';\nimport { UIInstanceManager } from './uimanager';\nimport { PlayerAPI, TimeRange } from 'bitmovin-player';\n\n/**\n * @category Utils\n */\nexport namespace PlayerUtils {\n\n  export enum PlayerState {\n    Idle,\n    Prepared,\n    Playing,\n    Paused,\n    Finished,\n  }\n\n  export function isTimeShiftAvailable(player: PlayerAPI): boolean {\n    return player.isLive() && player.getMaxTimeShift() !== 0;\n  }\n\n  export function getState(player: PlayerAPI): PlayerState {\n    if (player.hasEnded()) {\n      return PlayerState.Finished;\n    } else if (player.isPlaying()) {\n      return PlayerState.Playing;\n    } else if (player.isPaused()) {\n      return PlayerState.Paused;\n    } else if (player.getSource() != null) {\n      return PlayerState.Prepared;\n    } else {\n      return PlayerState.Idle;\n    }\n  }\n\n  /**\n   * Returns the currentTime - seekableRange.start. This ensures a user-friendly currentTime after a live stream\n   * transitioned to VoD.\n   * @param player\n   */\n  export function getCurrentTimeRelativeToSeekableRange(player: PlayerAPI): number {\n    const currentTime = player.getCurrentTime();\n    if (player.isLive()) {\n      return currentTime;\n    }\n\n    const seekableRangeStart = PlayerUtils.getSeekableRangeStart(player, 0);\n    return currentTime - seekableRangeStart;\n  }\n\n  /**\n   * Returns the start value of the seekable range or the defaultValue if no seekableRange is present.\n   * For now this happens only in combination with Mobile SDKs.\n   *\n   * TODO: remove this function in next major release\n   *\n   * @param player\n   * @param defaultValue\n   */\n  export function getSeekableRangeStart(player: PlayerAPI, defaultValue: number = 0) {\n    return player.getSeekableRange() && player.getSeekableRange().start || defaultValue;\n  }\n\n  /**\n   * Calculates player seekable time range for live.\n   * As the player returns `{ start: -1, end: -1 }` for live streams we need to calculate the `seekableRange` based on `maxTimeshift`.\n   *\n   * @param player\n   */\n  export function getSeekableRangeRespectingLive(player: PlayerAPI): TimeRange {\n    if (!player.isLive()) {\n      return player.getSeekableRange();\n    }\n\n    const currentTimeshift = -player.getTimeShift();\n    const maxTimeshift = -player.getMaxTimeShift();\n    const currentTime = player.getCurrentTime();\n\n    const end = currentTime + (currentTimeshift);\n    const start = currentTime - (maxTimeshift - currentTimeshift);\n\n    return { start, end };\n  }\n\n  export interface TimeShiftAvailabilityChangedArgs extends NoArgs {\n    timeShiftAvailable: boolean;\n  }\n\n  export class TimeShiftAvailabilityDetector {\n\n    private player: PlayerAPI;\n    private timeShiftAvailable: boolean;\n    private timeShiftAvailabilityChangedEvent = new EventDispatcher<PlayerAPI, TimeShiftAvailabilityChangedArgs>();\n\n    constructor(player: PlayerAPI) {\n      this.player = player;\n      this.timeShiftAvailable = undefined;\n\n      let timeShiftDetector = () => {\n        this.detect();\n      };\n      // Try to detect timeshift availability when source is loaded, which works for DASH streams\n      player.on(player.exports.PlayerEvent.SourceLoaded, timeShiftDetector);\n      // With HLS/NativePlayer streams, getMaxTimeShift can be 0 before the buffer fills, so we need to additionally\n      // check timeshift availability in TimeChanged\n      player.on(player.exports.PlayerEvent.TimeChanged, timeShiftDetector);\n    }\n\n    detect(): void {\n      if (this.player.isLive()) {\n        let timeShiftAvailableNow = PlayerUtils.isTimeShiftAvailable(this.player);\n\n        // When the availability changes, we fire the event\n        if (timeShiftAvailableNow !== this.timeShiftAvailable) {\n          this.timeShiftAvailabilityChangedEvent.dispatch(this.player, { timeShiftAvailable: timeShiftAvailableNow });\n          this.timeShiftAvailable = timeShiftAvailableNow;\n        }\n      }\n    }\n\n    get onTimeShiftAvailabilityChanged(): Event<PlayerAPI, TimeShiftAvailabilityChangedArgs> {\n      return this.timeShiftAvailabilityChangedEvent.getEvent();\n    }\n  }\n\n  export interface LiveStreamDetectorEventArgs extends NoArgs {\n    live: boolean;\n  }\n\n  /**\n   * Detects changes of the stream type, i.e. changes of the return value of the player#isLive method.\n   * Normally, a stream cannot change its type during playback, it's either VOD or live. Due to bugs on some\n   * platforms or browsers, it can still change. It is therefore unreliable to just check #isLive and this detector\n   * should be used as a workaround instead.\n   *\n   * Additionally starting with player v8.19.0 we have the use-case that a live stream changes into a vod.\n   * The DurationChanged event indicates this switch.\n   *\n   * Known cases:\n   *\n   * - HLS VOD on Android 4.3\n   * Video duration is initially 'Infinity' and only gets available after playback starts, so streams are wrongly\n   * reported as 'live' before playback (the live-check in the player checks for infinite duration).\n   *\n   * @deprecated since UI v3.9.0 in combination with player v8.19.0 use PlayerEvent.DurationChanged instead\n   *\n   * TODO: remove this class in next major release\n   */\n  export class LiveStreamDetector {\n\n    private player: PlayerAPI;\n    private live: boolean;\n    private liveChangedEvent = new EventDispatcher<PlayerAPI, LiveStreamDetectorEventArgs>();\n    private uimanager: UIInstanceManager;\n\n    constructor(player: PlayerAPI, uimanager: UIInstanceManager) {\n      this.player = player;\n      this.uimanager = uimanager;\n      this.live = undefined;\n\n      let liveDetector = () => {\n        this.detect();\n      };\n      this.uimanager.getConfig().events.onUpdated.subscribe(liveDetector);\n      // Re-evaluate when playback starts\n      player.on(player.exports.PlayerEvent.Play, liveDetector);\n\n      // HLS live detection workaround for Android:\n      // Also re-evaluate during playback, because that is when the live flag might change.\n      // (Doing it only in Android Chrome saves unnecessary overhead on other platforms)\n      if (BrowserUtils.isAndroid && BrowserUtils.isChrome) {\n        player.on(player.exports.PlayerEvent.TimeChanged, liveDetector);\n      }\n\n      // DurationChanged event was introduced with player v8.19.0\n      if (player.exports.PlayerEvent.DurationChanged) {\n        player.on(player.exports.PlayerEvent.DurationChanged, liveDetector);\n      }\n\n      // Ad video's isLive() might be different than the actual video's isLive().\n      player.on(player.exports.PlayerEvent.AdBreakStarted, liveDetector);\n      player.on(player.exports.PlayerEvent.AdBreakFinished, liveDetector);\n    }\n\n    detect(): void {\n      let liveNow = this.player.isLive();\n\n      // Compare current to previous live state flag and fire event when it changes. Since we initialize the flag\n      // with undefined, there is always at least an initial event fired that tells listeners the live state.\n      if (liveNow !== this.live) {\n        this.liveChangedEvent.dispatch(this.player, { live: liveNow });\n        this.live = liveNow;\n      }\n    }\n\n    get onLiveChanged(): Event<PlayerAPI, LiveStreamDetectorEventArgs> {\n      return this.liveChangedEvent.getEvent();\n    }\n  }\n\n  export function clampValueToRange(value: number, boundary1: number, boundary2: number): number {\n    const lowerBoundary = Math.min(boundary1, boundary2);\n    const upperBoundary = Math.max(boundary1, boundary2);\n    return Math.min(Math.max(value, lowerBoundary), upperBoundary);\n  }\n}\n","import { NavigationGroup } from './navigationgroup';\nimport { Action, Direction } from './types';\nimport { Container } from '../components/container';\nimport { Component } from '../components/component';\n\nexport enum ListOrientation {\n  Horizontal = 'horizontal',\n  Vertical = 'vertical',\n}\n\n/**\n * @category Components\n */\nexport class ListNavigationGroup extends NavigationGroup {\n  private readonly listNavigationDirections: Direction[];\n\n  constructor(orientation: ListOrientation, container: Container<unknown>, ...components: Component<unknown>[]) {\n    super(container, ...components);\n\n    switch (orientation) {\n      case ListOrientation.Vertical:\n        this.listNavigationDirections = [Direction.UP, Direction.DOWN];\n        break;\n\n      case ListOrientation.Horizontal:\n        this.listNavigationDirections = [Direction.LEFT, Direction.RIGHT];\n        break;\n    }\n  }\n\n  public handleAction(action: Action): void {\n    super.handleAction(action);\n\n    if (action === Action.SELECT) {\n      // close the container when a list entry is selected\n      this.handleAction(Action.BACK);\n    }\n  }\n\n  public handleNavigation(direction: Direction): void {\n    super.handleNavigation(direction);\n\n    if (!this.listNavigationDirections.includes(direction)) {\n      // close the container on navigation inputs that don't align\n      // with the orientation of the list\n      this.handleAction(Action.BACK);\n    }\n  }\n}\n","import { Component } from '../components/component';\nimport { Container } from '../components/container';\nimport { isComponent, isContainer, isListBox } from './typeguards';\n\n/**\n * Recursively resolves a container and the components contained within them, building a flat list of components.\n *\n * @param container The container to get the contained components from\n */\nfunction resolveAllComponents(container: Container<unknown>): Component<unknown>[] {\n  const childComponents: Component<unknown>[] = [];\n\n  container.getComponents().forEach(containerOrComponent => {\n    if (isContainer(containerOrComponent)) {\n      childComponents.push(...resolveAllComponents(containerOrComponent));\n    } else if (isComponent(containerOrComponent)) {\n      childComponents.push(containerOrComponent);\n    }\n  });\n\n  return childComponents;\n}\n\n/**\n * Returns the HTML elements associated to the provided component.\n *\n * @param component The component to get the HTML elements from\n */\nfunction toHtmlElement(component: Component<unknown>): HTMLElement[] {\n  if (isListBox(component)) {\n    return [].slice.call(component.getDomElement().get()[0].children);\n  } else {\n    return component.getDomElement().get().slice(0, 1);\n  }\n}\n\n/**\n * Takes the provided list of components and flat-maps them to a list of their respective HTML elements. In case a\n * provided component is a container, the children of that container will be resolved recursively. Ignores components\n * that are hidden.\n *\n * @param components The components to map to HTML elements\n */\nexport function getHtmlElementsFromComponents(components: Component<unknown>[]): HTMLElement[] {\n  const htmlElements: HTMLElement[] = [];\n\n  components\n    .filter(component => !component.isHidden())\n    .forEach(component => {\n      const elementsToConsider = component instanceof Container ? resolveAllComponents(component) : [component];\n\n      elementsToConsider.forEach(component => {\n        htmlElements.push(...toHtmlElement(component));\n      });\n    });\n\n  return htmlElements;\n}\n","import { Action, Direction, KeyMap } from './types';\nimport { BrowserUtils } from '../browserutils';\n\nconst TizenKeyMap = {\n  isApplicable: () => BrowserUtils.isTizen,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // D-pad OK\n    13: Action.SELECT,\n    // Back\n    10009: Action.BACK,\n  },\n};\n\nconst WebOsKeyMap = {\n  isApplicable: () => BrowserUtils.isWebOs,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // D-pad OK\n    13: Action.SELECT,\n    // Back\n    461: Action.BACK,\n  },\n};\n\nconst PlayStationKeyMap = {\n  isApplicable: () => BrowserUtils.isPlayStation,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // Cross\n    13: Action.SELECT,\n    // Circle\n    27: Action.BACK,\n  },\n};\n\nconst AndroidKeyMap = {\n  isApplicable: () => BrowserUtils.isAndroid,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // D-pad OK\n    13: Action.SELECT,\n    // Back\n    27: Action.BACK,\n  },\n};\n\nconst HisenseKeyMap = {\n  isApplicable: () => BrowserUtils.isHisense,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // OK\n    13: Action.SELECT,\n    // Back\n    8: Action.BACK,\n  },\n};\n\n// Default key map used on desktops\nconst DefaultKeyMap = {\n  // Arrow Up\n  38: Direction.UP,\n  // Arrow Down\n  40: Direction.DOWN,\n  // Arrow Left\n  37: Direction.LEFT,\n  // Arrow Right\n  39: Direction.RIGHT,\n  // Enter\n  13: Action.SELECT,\n  // Escape\n  27: Action.BACK,\n};\n\n/**\n * Returns the matching key map for the current platform.\n */\nexport function getKeyMapForPlatform(): KeyMap {\n  const applicableKeyMap = [\n    WebOsKeyMap,\n    TizenKeyMap,\n    PlayStationKeyMap,\n    HisenseKeyMap,\n    AndroidKeyMap,\n  ].find(keyMap => keyMap.isApplicable());\n\n  if (applicableKeyMap) {\n    return applicableKeyMap.keyCodes;\n  } else {\n    return DefaultKeyMap;\n  }\n}\n","import { Direction } from './types';\n\ninterface Vector {\n  x: number;\n  y: number;\n}\n\n/**\n * Calculates the length of a vector.\n *\n * @param vector The vector to calculate the length of\n */\nfunction length(vector: Vector): number {\n  return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n}\n\n/**\n * Normalizes the given vector.\n *\n * @param vector The vector to normalize\n */\nfunction normalize(vector: Vector): Vector {\n  const len = length(vector);\n\n  return {\n    x: vector.x / len,\n    y: vector.y / len,\n  };\n}\n\n/**\n * Calculates the dot product between 2 vectors.\n *\n * @param a The first vector\n * @param b The second vector\n */\nfunction dotProduct(a: Vector, b: Vector): number {\n  return a.x * b.x + a.y * b.y;\n}\n\n/**\n * Calculates the distance between the 2 points pointed to by the provided vectors.\n *\n * @param a The first vector\n * @param b The second vector\n */\nfunction distance(a: Vector, b: Vector): number {\n  return length({\n    x: b.x - a.x,\n    y: b.y - a.y,\n  });\n}\n\n/**\n * Returns a vector that corresponds to the center of the provided element.\n *\n * @param element The element to get the center of\n */\nfunction getElementVector(element: HTMLElement): Vector {\n  const boundingRect = getBoundingRectFromElement(element);\n\n  return {\n    x: boundingRect.x + boundingRect.width / 2,\n    y: boundingRect.y + boundingRect.height / 2,\n  };\n}\n\n/**\n * Returns the angle in degrees between the unit vector pointing in the given {Direction} and the unit vector that\n * points from the current element to another element.\n *\n * @param a The vector of the current element\n * @param b The vector of the other element\n * @param direction The direction to move along\n */\nfunction calculateAngle(a: Vector, b: Vector, direction: Direction): number {\n  const directionVector = {\n    x: (direction === Direction.LEFT ? -1 : direction === Direction.RIGHT ? 1 : 0),\n    y: (direction === Direction.UP ? -1 : direction === Direction.DOWN ? 1 : 0),\n  };\n\n  const elementVector = normalize({\n    x: b.x - a.x,\n    y: b.y - a.y,\n  });\n\n  const angleCos = dotProduct(directionVector, elementVector) / (length(directionVector) * length(elementVector));\n\n  return Math.acos(angleCos) * 180 / Math.PI;\n}\n\n/**\n * Returns the closest element to the current element when trying to navigate in the provided direction. Returns\n * undefined, if there is not element in the given direction.\n *\n * @param activeElement The currently selected element\n * @param elements The list of all elements that can be navigated to\n * @param direction The direction in which to navigate\n */\nexport function getElementInDirection(\n  activeElement: HTMLElement,\n  elements: HTMLElement[],\n  direction: Direction,\n): HTMLElement | undefined {\n  if (!activeElement) return undefined;\n\n  const cutoffAngle = 45;\n  const activeElemVector = getElementVector(activeElement);\n\n  return elements\n    // don't take the current element into account\n    .filter(elem => elem !== activeElement)\n    // get the angle between, and distance to any other element from the current element\n    .map(element => {\n      const elementVector = getElementVector(element);\n      const dist = distance(activeElemVector, elementVector);\n      const angle = calculateAngle(activeElemVector, elementVector, direction);\n\n      return { angle, dist, element };\n    })\n    // filter out any elements that don't align with the direction we're trying to move in\n    .filter(({ angle }) => angle <= cutoffAngle)\n    // sort the resulting elements based on their distance to the current element in ascending order\n    .sort(({ angle: angleA, dist: distA }, { angle: angleB, dist: distB }) => (angleA - angleB) + (distA - distB))\n    // return the element closest to the current element\n    .shift()?.element;\n}\n\n/**\n * Returns DOMRect like object containing horizontal X and vertical Y coordinates from and HTMLElement.\n * Handles use-cases for getBoundingClientRect when the return type can be either\n * a ClientRect or DOMRect object type.\n *\n * @param element The currently selected element\n */\nexport function getBoundingRectFromElement(element: HTMLElement) {\n  const boundingRect = element.getBoundingClientRect();\n\n  if (typeof boundingRect.x !== 'number' && typeof boundingRect.y !== 'number') {\n    boundingRect.x = boundingRect.left;\n    boundingRect.y = boundingRect.top;\n  }\n\n  return boundingRect;\n}\n\n","import { Container } from '../components/container';\nimport { Component } from '../components/component';\nimport { getElementInDirection } from './navigationalgorithm';\nimport { getHtmlElementsFromComponents } from './gethtmlelementsfromcomponents';\nimport { NodeEventSubscriber } from './nodeeventsubscriber';\nimport { isSettingsPanel } from './typeguards';\nimport { Action, ActionCallback, Callback, Direction, NavigationCallback } from './types';\n\n/**\n * Used as part of spatial navigation. Groups together different components to which you can navigate to, in a single\n * navigation group.\n *\n * Responsible for finding elements in direction on navigation and for tracking active element inside the group.\n * Triggers blur and focus on element when active element is changed, as well as click on element on `Action.SELECT`.\n * Will call `hideUi()` on passed in container if `Action.BACK` is called.\n *\n * @category Components\n */\nexport class NavigationGroup {\n  private activeElement?: HTMLElement;\n  private activeElementBeforeDisable?: HTMLElement;\n  private readonly components: Component<unknown>[];\n  private removeElementHoverEventListeners = () => {};\n  private readonly eventSubscriber: NodeEventSubscriber;\n\n  constructor(public readonly container: Container<unknown>, ...components: Component<unknown>[]) {\n    this.components = components;\n    this.eventSubscriber = new NodeEventSubscriber();\n  }\n\n  /**\n   * If overwritten, allows to implement custom navigation behavior. Per default, the internal handler will still be\n   * executed. To prevent execution of the default navigation handler, call `preventDefault()`;\n   *\n   * @param direction {Direction} The direction to move along\n   * @param target {HTMLElement} The target element for the event\n   * @param preventDefault {() => void} A function that, when called, will prevent the execution of the default handler\n   */\n  public onNavigation?: NavigationCallback;\n\n  /**\n   * If overwritten, allows to implement custom action behavior. Per default, the internal handler will still be\n   * executed. To prevent execution of the default action handler, call `preventDefault()`;\n   *\n   * @param action {Action} The action that was called\n   * @param target {HTMLElement} The target element that action was called on\n   * @param preventDefault {() => void} A function that, when called, will prevent the execution of the default handler\n   */\n  public onAction?: ActionCallback;\n\n  /**\n   * Returns the active HTMLElement.\n   */\n  public getActiveElement(): HTMLElement | undefined {\n    return this.activeElement;\n  }\n\n  private focusElement(element: HTMLElement): void {\n    this.blurActiveElement();\n    this.activeElement = element;\n    this.activeElement.focus();\n  }\n\n  private blurActiveElement(): void {\n    this.activeElement?.blur();\n  }\n\n  private focusFirstElement(): void {\n    const element = getHtmlElementsFromComponents(this.components)[0];\n    if (element) {\n      this.focusElement(element);\n    }\n  }\n\n  protected defaultNavigationHandler(direction: Direction): void {\n    const targetElement = getElementInDirection(\n      this.activeElement,\n      getHtmlElementsFromComponents(this.components),\n      direction,\n    );\n\n    if (targetElement) {\n      this.focusElement(targetElement);\n    }\n  }\n\n  protected defaultActionHandler(action: Action): void {\n    switch (action) {\n      case(Action.SELECT):\n        this.activeElement.click();\n        break;\n      case(Action.BACK):\n        this.container.hide();\n        break;\n    }\n  }\n\n  private handleInput<T>(data: T, defaultHandler: (data: T) => void, userHandler?: Callback<T>): void {\n    let handleDefault = true;\n    const preventDefault = () => (handleDefault = false);\n\n    userHandler?.(data, this.activeElement, preventDefault);\n\n    if (handleDefault) {\n      defaultHandler.call(this, data);\n    }\n  }\n\n  /**\n   * Handles a navigation event.\n   *\n   * @param direction The direction of the navigation event\n   */\n  public handleNavigation(direction: Direction): void {\n    if (!this.activeElement) {\n      // If we do not have an active element, the active element has been disabled by a mouseleave\n      // event. We should continue the navigation at the exact place where we left off.\n      if (this.activeElementBeforeDisable) {\n        this.focusElement(this.activeElementBeforeDisable);\n      } else {\n        this.focusFirstElement();\n      }\n      return;\n    }\n    this.handleInput(direction, this.defaultNavigationHandler, this.onNavigation);\n  }\n\n  /**\n   * Handles an action event.\n   *\n   * @param action The action of the event\n   */\n  public handleAction(action: Action): void {\n    this.handleInput(action, this.defaultActionHandler, this.onAction);\n  }\n\n  /**\n   * Disable navigation group\n   *\n   * Call blur on active element, set as undefined, and track it as element before disable.\n   */\n  public disable(): void {\n    if (this.activeElement) {\n      this.activeElementBeforeDisable = this.activeElement;\n      this.blurActiveElement();\n      this.activeElement = undefined;\n    }\n  }\n\n  /**\n   * Enable navigation group\n   *\n   * Sets active element to either element that was active before disable, or first element of tracked elements.\n   * If it is settings panel, it will always focus first element in the list.\n   */\n  public enable(): void {\n    if (this.activeElementBeforeDisable && !isSettingsPanel(this.container)) {\n      this.focusElement(this.activeElementBeforeDisable);\n      this.activeElementBeforeDisable = undefined;\n    } else {\n      this.focusFirstElement();\n    }\n\n    this.trackElementHover();\n  }\n\n  /**\n   * Adds event listener for `mouseenter` on tracked elements to ensure tracking of active element will work together\n   * in combination of using mouse and key events.\n   */\n  private trackElementHover(): void {\n    this.removeElementHoverEventListeners();\n\n    const removeEventListenerFunctions = getHtmlElementsFromComponents(this.components).map(htmlElem => {\n      const enterListener = this.focusElement.bind(this, htmlElem);\n      const exitListener = () => this.disable();\n\n      this.eventSubscriber.on(htmlElem, 'mouseenter', enterListener);\n      this.eventSubscriber.on(htmlElem, 'mouseleave', exitListener);\n\n      return () => {\n        this.eventSubscriber.off(htmlElem, 'mouseenter', enterListener);\n        this.eventSubscriber.off(htmlElem, 'mouseleave', exitListener);\n      };\n    });\n\n    this.removeElementHoverEventListeners = () => removeEventListenerFunctions.forEach(fn => fn());\n  }\n\n  /**\n   * Dispose of navigation group\n   */\n  public release(): void {\n    this.eventSubscriber.release();\n    this.activeElement = undefined;\n    this.components.splice(0, this.components.length);\n    this.removeElementHoverEventListeners();\n  }\n}\n","type Listeners = ([Node, EventListenerOrEventListenerObject, boolean | AddEventListenerOptions])[];\n\n/**\n * Allows to subscribe to Node events.\n */\nexport class NodeEventSubscriber {\n  private readonly attachedListeners: Map<keyof HTMLElementEventMap, Listeners>;\n\n  constructor() {\n    this.attachedListeners = new Map();\n  }\n\n  private getEventListenersOfType(type: keyof HTMLElementEventMap): Listeners {\n    if (!this.attachedListeners.has(type)) {\n      this.attachedListeners.set(type, []);\n    }\n\n    return this.attachedListeners.get(type);\n  }\n\n  /**\n   * Adds the given event listener to the node.\n   *\n   * @param node The node to remove the event listener from\n   * @param type The event to listen to\n   * @param listener The listener to remove\n   * @param options The event listener options\n   */\n  public on(\n    node: Node,\n    type: keyof HTMLElementEventMap,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    node.addEventListener(type, listener, options);\n    this.getEventListenersOfType(type).push([node, listener, options]);\n  }\n\n  /**\n   * Removes the given event listener from the node.\n   *\n   * @param node The node to attach the event listener to\n   * @param type The event to listen to\n   * @param listener The listener to add\n   * @param options The event listener options\n   */\n  public off(\n    node: Node,\n    type: keyof HTMLElementEventMap,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    const listenersOfType = this.getEventListenersOfType(type);\n    const listenerIndex = listenersOfType.findIndex(([otherNode, otherListener, otherOptions]) => {\n      return otherNode === node && otherListener === listener && otherOptions === options;\n    });\n\n    node.removeEventListener(type, listener, options);\n\n    if (listenerIndex > -1) {\n      listenersOfType.splice(listenerIndex, 1);\n    }\n  }\n\n  /**\n   * Removes all attached event listeners.\n   */\n  public release(): void {\n    this.attachedListeners.forEach((listenersOfType, type) => {\n      listenersOfType.forEach(([element, listener, options]) => {\n        this.off(element, type, listener, options);\n      });\n    });\n    this.attachedListeners.clear();\n  }\n}\n","import { NavigationGroup } from './navigationgroup';\nimport { Component } from '../components/component';\nimport { UIContainer } from '../components/uicontainer';\nimport { Action, Direction } from './types';\n\n/**\n * Extends NavigationGroup and provides additional logic for hiding and showing the UI on the root container.\n *\n * @category Components\n */\nexport class RootNavigationGroup extends NavigationGroup {\n  constructor(public readonly container: UIContainer, ...elements: Component<unknown>[]) {\n    super(container, ...elements);\n  }\n\n  public handleAction(action: Action) {\n    this.container.showUi();\n\n    super.handleAction(action);\n  }\n\n  public handleNavigation(direction: Direction) {\n    this.container.showUi();\n\n    super.handleNavigation(direction);\n  }\n\n  protected defaultActionHandler(action: Action): void {\n    if (action === Action.BACK) {\n      this.container.hideUi();\n    } else {\n      super.defaultActionHandler(action);\n    }\n  }\n\n  public release(): void {\n    super.release();\n  }\n}\n","import { RootNavigationGroup } from './rootnavigationgroup';\nimport { NodeEventSubscriber } from './nodeeventsubscriber';\nimport { Action, Direction } from './types';\nimport {getBoundingRectFromElement} from './navigationalgorithm';\n\nconst DefaultScrubSpeedPercentage = 0.005;\nconst ScrubSpeedClearInterval = 100;\nconst ScrubSpeedMultiplier = 1.1;\n\n/**\n * Handles Spatial Navigation interaction with the seek bar. Ensures, that seek operations can be executed and that the\n * scrubbing tooltip is shown as if the user scrubbed using the mouse/touchscreen.\n */\nexport class SeekBarHandler {\n  private readonly cursorPosition = { x: 0, y: 0};\n  private readonly eventSubscriber: NodeEventSubscriber;\n  private isScrubbing = false;\n  private scrubSpeedResetTimeout: number;\n  private scrubSpeedPercentage = DefaultScrubSpeedPercentage;\n\n  constructor(private readonly rootNavigationGroup: RootNavigationGroup) {\n    this.rootNavigationGroup.onAction = this.onAction;\n    this.eventSubscriber = new NodeEventSubscriber();\n    this.rootNavigationGroup.onNavigation = this.onNavigation;\n  }\n\n  private updateScrubSpeedPercentage(): void {\n    clearTimeout(this.scrubSpeedResetTimeout);\n    this.scrubSpeedPercentage *= ScrubSpeedMultiplier;\n    this.scrubSpeedResetTimeout = window.setTimeout(\n      () => this.scrubSpeedPercentage = DefaultScrubSpeedPercentage, ScrubSpeedClearInterval,\n    );\n  }\n\n  private getIncrement(direction: Direction, seekBarWrapper: HTMLElement): number {\n    this.updateScrubSpeedPercentage();\n\n    const seekBarWidth = seekBarWrapper.getBoundingClientRect().width;\n    const increment = seekBarWidth * this.scrubSpeedPercentage;\n\n    return direction === Direction.RIGHT ? increment : -increment;\n  }\n\n  private resetCursorPosition(): void {\n    this.cursorPosition.x = 0;\n    this.cursorPosition.y = 0;\n  }\n\n  private updateCursorPosition(direction: Direction, seekBarWrapper: HTMLElement): void {\n    this.cursorPosition.x += this.getIncrement(direction, seekBarWrapper);\n  }\n\n  private initializeCursorPosition(seekBarWrapper: HTMLElement): void {\n    const playbackPositionMarker = getPlaybackPositionMarker(seekBarWrapper);\n    const rect = getBoundingRectFromElement(playbackPositionMarker);\n\n\n    const startX = rect.x + (rect.width / 2);\n    const startY = rect.y;\n\n    this.cursorPosition.x = startX;\n    this.cursorPosition.y = startY;\n  }\n\n  private initializeOrUpdateCursorPosition(seekBarWrapper: HTMLElement, direction: Direction): void {\n    if (this.isScrubbing) {\n      this.updateCursorPosition(direction, seekBarWrapper);\n    } else {\n      this.initializeCursorPosition(seekBarWrapper);\n    }\n\n    this.isScrubbing = true;\n  }\n\n  private getCursorPositionMouseEventInit(): MouseEventInit {\n    return {\n      clientX: this.cursorPosition.x,\n      clientY: this.cursorPosition.y,\n    };\n  }\n\n  private dispatchMouseMoveEvent(seekBar: Element): void {\n    seekBar.dispatchEvent(new MouseEvent('mousemove', this.getCursorPositionMouseEventInit()));\n  }\n\n  private readonly onNavigation = (direction: Direction, target: HTMLElement, preventDefault: () => void): void => {\n    if (!isSeekBarWrapper(target)) {\n      return;\n    }\n\n    if (direction === Direction.UP || direction === Direction.DOWN) {\n      this.stopSeeking(getSeekBar(target));\n\n      return;\n    }\n\n    this.initializeOrUpdateCursorPosition(target, direction);\n    this.dispatchMouseMoveEvent(getSeekBar(target));\n\n    preventDefault();\n  };\n\n  private dispatchMouseClickEvent(seekBar: Element): void {\n    const mouseDownHandler = () => {\n      const mouseEventInit = this.getCursorPositionMouseEventInit();\n\n      document.dispatchEvent(new MouseEvent('mouseup', mouseEventInit));\n      this.eventSubscriber.off(seekBar, 'mousedown', mouseDownHandler);\n      this.stopSeeking(seekBar);\n    };\n\n    this.eventSubscriber.on(seekBar, 'mousedown', mouseDownHandler);\n    seekBar.dispatchEvent(new MouseEvent('mousedown'));\n  }\n\n  private stopSeeking(seekBar: Element): void {\n    this.resetCursorPosition();\n    this.isScrubbing = false;\n    this.dispatchMouseLeaveEvent(seekBar);\n  }\n\n  private dispatchMouseLeaveEvent(seekBar: Element): void {\n    seekBar.dispatchEvent(new MouseEvent('mouseleave'));\n  }\n\n  private readonly onAction = (action: Action, target: HTMLElement, preventDefault: () => void): void => {\n    if (!isSeekBarWrapper(target)) {\n      return;\n    }\n\n    const seekBar = getSeekBar(target);\n\n    if (action === Action.SELECT && this.isScrubbing) {\n      this.dispatchMouseClickEvent(seekBar);\n      preventDefault();\n    } else if (action === Action.BACK) {\n      this.stopSeeking(seekBar);\n      preventDefault();\n    }\n  };\n\n  /**\n   * Releases the SeekBraHandler, making sure all event subscribers are removed.\n   */\n  public release(): void {\n    this.eventSubscriber.release();\n    this.rootNavigationGroup.onAction = undefined;\n    this.rootNavigationGroup.onNavigation = undefined;\n  }\n}\n\nfunction isSeekBarWrapper(element: HTMLElement): boolean {\n  return Array.from(element.classList).findIndex(className => /-ui-seekbar$/.test(className)) > -1;\n}\n\nfunction getSeekBar(seekBarWrapper: HTMLElement): Element {\n  return seekBarWrapper.children.item(0);\n}\n\nfunction getPlaybackPositionMarker(seekBarWrapper: HTMLElement): HTMLElement {\n  return seekBarWrapper.querySelector('[class*=\"seekbar-playbackposition-marker\"]');\n}\n","import { NavigationGroup } from './navigationgroup';\nimport { RootNavigationGroup } from './rootnavigationgroup';\nimport { NodeEventSubscriber } from './nodeeventsubscriber';\nimport { SeekBarHandler } from './seekbarhandler';\nimport { getKeyMapForPlatform } from './keymap';\nimport { Action, Direction, KeyMap } from './types';\nimport { isAction, isDirection } from './typeguards';\n\n/**\n * SpatialNavigation keeps track of all navigation groups, and updates the active navigation group when visibility\n * changes on group container.\n *\n * It listens to key events, and triggers either handleNavigation or handleAction on the active group.\n * SeekBarHandler will get instantiated with root navigation group and disposed on release of the spatial navigation.\n */\nexport class SpatialNavigation {\n  private unsubscribeVisibilityChangesFns: (() => void)[];\n  private readonly navigationGroups: NavigationGroup[] = [];\n  private readonly activeNavigationGroups: NavigationGroup[];\n  private readonly eventSubscriber: NodeEventSubscriber;\n  private readonly seekBarHandler: SeekBarHandler;\n  private readonly keyMap: KeyMap;\n\n  constructor(rootNavigationGroup: RootNavigationGroup, ...navigationGroups: NavigationGroup[]) {\n    this.seekBarHandler = new SeekBarHandler(rootNavigationGroup);\n\n    this.activeNavigationGroups = [];\n    this.unsubscribeVisibilityChangesFns = [];\n    this.eventSubscriber = new NodeEventSubscriber();\n    this.navigationGroups = [rootNavigationGroup, ...navigationGroups];\n    this.keyMap = getKeyMapForPlatform();\n\n    this.subscribeToNavigationGroupVisibilityChanges();\n    this.attachKeyEventHandler();\n    this.enableDefaultNavigationGroup();\n  }\n\n  private attachKeyEventHandler(): void {\n    this.eventSubscriber.on(document, 'keydown', this.handleKeyEvent, true);\n  }\n\n  private onShow = (group: NavigationGroup): void => {\n    this.activeNavigationGroups.push(group);\n    this.updateEnabledNavigationGroup();\n  };\n\n  private onHide = (group: NavigationGroup): void => {\n    const groupIndex = this.activeNavigationGroups.findIndex(other => other === group);\n\n    if (groupIndex > -1) {\n      group.disable();\n      this.activeNavigationGroups.splice(groupIndex, 1);\n      this.updateEnabledNavigationGroup();\n    }\n  };\n\n  /**\n   * Subscribes to onHide and onShow on all navigation groups containers as Spatial navigation tracks active navigation\n   * group based on their container visibility.\n   */\n  private subscribeToNavigationGroupVisibilityChanges(): void {\n    this.navigationGroups.forEach(group => {\n      const onShowHandler = () => this.onShow(group);\n      const onHideHandler = () => this.onHide(group);\n\n      group.container.onShow.subscribe(onShowHandler);\n      group.container.onHide.subscribe(onHideHandler);\n\n      this.unsubscribeVisibilityChangesFns.push(\n        () => group.container.onShow.unsubscribe(onShowHandler),\n        () => group.container.onHide.unsubscribe(onHideHandler),\n      );\n    });\n  }\n\n  private unsubscribeFromNavigationGroupVisibilityChanges(): void {\n    this.unsubscribeVisibilityChangesFns.forEach(unsub => unsub());\n    this.unsubscribeVisibilityChangesFns = [];\n  }\n\n  /**\n   * It will enable group of which container is currently shown\n   * If there are no groups with containers that are currently visible, it will enable root navigation group\n   */\n  private enableDefaultNavigationGroup(): void {\n    const isShown = (group: NavigationGroup) => group.container.isShown();\n    const groupToEnable = this.navigationGroups.find(isShown) ?? this.navigationGroups[0];\n\n    if (groupToEnable) {\n      this.activeNavigationGroups.push(groupToEnable);\n      this.updateEnabledNavigationGroup();\n    }\n  }\n\n  /**\n   * Disables navigation groups that are no longer active and calls enable on last pushed navigation group\n   */\n  private updateEnabledNavigationGroup(): void {\n    this.activeNavigationGroups.forEach((group, idx) => {\n      if (idx < this.activeNavigationGroups.length - 1) {\n        group.disable();\n      } else {\n        group.enable();\n      }\n    });\n  }\n\n  /**\n   * Returns currently active navigation group\n   */\n  public getActiveNavigationGroup(): NavigationGroup | undefined {\n    return this.activeNavigationGroups[this.activeNavigationGroups.length - 1];\n  }\n\n  /**\n   * Checks if keyboard event keycode is tracked either as Direction or Action and calls appropriate handler on active\n   * navigation group\n   *\n   * @param e {KeyboardEvent}\n   */\n  private handleKeyEvent = (e: KeyboardEvent): void => {\n    const event: Direction | Action | undefined = this.keyMap[getKeyCode(e)];\n\n    const active = this.getActiveNavigationGroup();\n    if (!active || !active.container || active.container.isHidden() || active.container.isDisabled()) {\n      return;\n    }\n\n    if (isDirection(event)) {\n      active.handleNavigation(event);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (isAction(event)) {\n      active.handleAction(event);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  /**\n   * Dispose of SpatialNavigation\n   *\n   * Remove all event handlers, release seekbar handler and release all navigation groups.\n   */\n  public release(): void {\n    this.unsubscribeFromNavigationGroupVisibilityChanges();\n    this.eventSubscriber.release();\n    this.navigationGroups.forEach(group => group.release());\n    this.seekBarHandler.release();\n  }\n}\n\nfunction getKeyCode(event: KeyboardEvent): number {\n  return event.keyCode;\n}\n","import { Component } from '../components/component';\nimport { SettingsPanel } from '../components/settingspanel';\nimport { Container } from '../components/container';\nimport { ListBox } from '../components/listbox';\nimport { Action, Direction } from './types';\n\nexport function isSettingsPanel(component: Component<unknown>): component is SettingsPanel {\n  return component instanceof SettingsPanel;\n}\n\nexport function isComponent(obj: unknown): obj is Component<unknown> {\n  return obj !== null && obj !== undefined && obj instanceof Component;\n}\n\nexport function isContainer(obj: unknown): obj is Container<unknown> {\n  return obj !== null && obj !== undefined && obj instanceof Container;\n}\n\nexport function isListBox(obj: unknown): obj is ListBox {\n  return obj instanceof ListBox;\n}\n\nexport function isDirection(direction: unknown): direction is Direction {\n  return typeof direction === 'string' && Object.values<string>(Direction).includes(direction);\n}\n\nexport function isAction(action: unknown): action is Action {\n  return typeof action === 'string' && Object.values<string>(Action).includes(action);\n}\n","export type Callback<T> = (data: T, target: HTMLElement, preventDefault: () => void) => void;\nexport type NavigationCallback = Callback<Direction>;\nexport type ActionCallback = Callback<Action>;\nexport type KeyMap = {\n  [keyCode: number]: Action | Direction;\n};\n\nexport enum Direction {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport enum Action {\n  SELECT = 'select',\n  BACK = 'back',\n}\n","import { UIConfig } from './uiconfig';\n\n/**\n * @category Utils\n */\nexport namespace StorageUtils {\n let disableStorageApi: boolean;\n\n  export function setStorageApiDisabled(uiConfig: UIConfig) {\n    disableStorageApi = uiConfig.disableStorageApi;\n  }\n\n  function shouldUseLocalStorage(): boolean {\n    try {\n      return (\n        !disableStorageApi &&\n        window.localStorage &&\n        typeof localStorage.getItem === 'function' &&\n        typeof localStorage.setItem === 'function'\n      );\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Stores a string item into localStorage.\n   * @param key the item's key\n   * @param data the item's data\n   */\n  export function setItem(key: string, data: string): void {\n    if (shouldUseLocalStorage()) {\n      try {\n        window.localStorage.setItem(key, data);\n      } catch (e) {\n        console.debug(`Failed to set storage item ${key}`, e);\n      }\n    }\n  }\n\n  /**\n   * Gets an item's string value from the localStorage.\n   * @param key the key to look up its associated value\n   * @return {string | null} Returns the string if found, null if there is no data stored for the key\n   */\n  export function getItem(key: string): string | null {\n    if (shouldUseLocalStorage()) {\n      try {\n        return window.localStorage.getItem(key);\n      } catch (e) {\n        console.debug(`Failed to get storage item ${key}`, e);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Stores an object into localStorage. The object will be serialized to JSON. The following types are supported\n   * in addition to the default types:\n   *  - ColorUtils.Color\n   *\n   * @param key the key to store the data to\n   * @param data the object to store\n   */\n  export function setObject<T>(key: string, data: T): void {\n    let json = JSON.stringify(data);\n    setItem(key, json);\n  }\n\n  /**\n   * Gets an object for the given key from localStorage. The object will be deserialized from JSON. Beside the\n   * default types, the following types are supported:\n   *  - ColorUtils.Color\n   *\n   * @param key the key to look up its associated object\n   * @return {any} Returns the object if found, null otherwise\n   */\n  export function getObject<T>(key: string): T | null {\n    let json = getItem(key);\n\n    if (json) {\n      let object = JSON.parse(json);\n      return <T>object;\n    }\n    return null;\n  }\n}\n","import { Ad, LinearAd, PlayerAPI } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\n\n/**\n * @category Utils\n */\nexport namespace StringUtils {\n\n  export let FORMAT_HHMMSS: string = 'hh:mm:ss';\n  export let FORMAT_MMSS: string = 'mm:ss';\n\n  /**\n   * Formats a number of seconds into a time string with the pattern hh:mm:ss.\n   *\n   * @param totalSeconds the total number of seconds to format to string\n   * @param format the time format to output (default: hh:mm:ss)\n   * @returns {string} the formatted time string\n   */\n  export function secondsToTime(totalSeconds: number, format: string = FORMAT_HHMMSS): string {\n    let isNegative = totalSeconds < 0;\n\n    if (isNegative) {\n      // If the time is negative, we make it positive for the calculation below\n      // (else we'd get all negative numbers) and reattach the negative sign later.\n      totalSeconds = -totalSeconds;\n    }\n\n    // Split into separate time parts\n    let hours = Math.floor(totalSeconds / 3600);\n    let minutes = Math.floor(totalSeconds / 60) - hours * 60;\n    let seconds = Math.floor(totalSeconds) % 60;\n\n    return (isNegative ? '-' : '') + format\n        .replace('hh', leftPadWithZeros(hours, 2))\n        .replace('mm', leftPadWithZeros(minutes, 2))\n        .replace('ss', leftPadWithZeros(seconds, 2));\n  }\n\n  export function secondsToText(totalSeconds: number): string {\n    const isNegative = totalSeconds < 0;\n\n    if (isNegative) {\n      // If the time is negative, we make it positive for the calculation below\n      // (else we'd get all negative numbers) and reattach the negative sign later.\n      totalSeconds = -totalSeconds;\n    }\n\n    // Split into separate time parts\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds / 60) - hours * 60;\n    const seconds = Math.floor(totalSeconds) % 60;\n\n    return (isNegative ? '-' : '') +\n    (hours !== 0 ? `${leftPadWithZeros(hours, 2)} ${i18n.performLocalization(i18n.getLocalizer('settings.time.hours'))} ` : '') +\n    (minutes !== 0 ? `${leftPadWithZeros(minutes, 2)} ${i18n.performLocalization(i18n.getLocalizer('settings.time.minutes'))} ` : '') +\n    `${leftPadWithZeros(seconds, 2)} ${i18n.performLocalization(i18n.getLocalizer('settings.time.seconds'))}`;\n  }\n\n  /**\n   * Converts a number to a string and left-pads it with zeros to the specified length.\n   * Example: leftPadWithZeros(123, 5) => '00123'\n   *\n   * @param num the number to convert to string and pad with zeros\n   * @param length the desired length of the padded string\n   * @returns {string} the padded number as string\n   */\n  function leftPadWithZeros(num: number | string, length: number): string {\n    let text = num + '';\n    let padding = '0000000000'.substr(0, length - text.length);\n    return padding + text;\n  }\n\n  /**\n   * Fills out placeholders in an ad message.\n   *\n   * Has the placeholders '{remainingTime[formatString]}', '{playedTime[formatString]}',\n   * '{adDuration[formatString]}' and {adBreakRemainingTime[formatString]}, which are replaced by the remaining time until the ad can be skipped, the current\n   * time or the ad duration. The format string is optional. If not specified, the placeholder is replaced by the time\n   * in seconds. If specified, it must be of the following format:\n   * - %d - Inserts the time as an integer.\n   * - %0Nd - Inserts the time as an integer with leading zeroes, if the length of the time string is smaller than N.\n   * - %f - Inserts the time as a float.\n   * - %0Nf - Inserts the time as a float with leading zeroes.\n   * - %.Mf - Inserts the time as a float with M decimal places. Can be combined with %0Nf, e.g. %04.2f (the time\n   * 10.123 would be printed as 0010.12).\n   * - %hh:mm:ss\n   * - %mm:ss\n   *\n   * Examples:\n   * - { text: 'Ad: {remainingTime%mm:ss} secs' }\n   * An input value of 100 would be displayed as: 'Ad: 01:40 secs'\n   * - { text: 'Ad: {remainingTime%f} secs' }\n   * An input value of 100 would be displayed as: 'Ad: 100.0 secs'\n   * - { text: 'Adbreak: {adBreakRemainingTime%f} secs' }\n   * Adbreak with 2 ads each 50 seconds would be displayed as: 'Ad: 100.0 secs'\n   *\n   * @param adMessage an ad message with optional placeholders to fill\n   * @param skipOffset if specified, {remainingTime} will be filled with the remaining time until the ad can be skipped\n   * @param player the player to get the time data from\n   * @returns {string} the ad message with filled placeholders\n   */\n  export function replaceAdMessagePlaceholders(adMessage: string, skipOffset: number, player: PlayerAPI) {\n    let adMessagePlaceholderRegex = new RegExp(\n      '\\\\{(remainingTime|playedTime|adDuration|adBreakRemainingTime)(}|%((0[1-9]\\\\d*(\\\\.\\\\d+(d|f)|d|f)|\\\\.\\\\d+f|d|f)|hh:mm:ss|mm:ss)})',\n      'g',\n    );\n\n    return adMessage.replace(adMessagePlaceholderRegex, (formatString) => {\n      let time = 0;\n      if (formatString.indexOf('remainingTime') > -1) {\n        if (skipOffset) {\n          time = Math.ceil(skipOffset - player.getCurrentTime());\n        } else {\n          time = player.getDuration() - player.getCurrentTime();\n        }\n      } else if (formatString.indexOf('playedTime') > -1) {\n        time = player.getCurrentTime();\n      } else if (formatString.indexOf('adDuration') > -1) {\n        time = player.getDuration();\n      } else if (formatString.indexOf('adBreakRemainingTime') > -1) { // To display the remaining time in the ad break as opposed to in the ad\n        time = 0;\n\n        // compute list of ads and calculate duration of remaining ads based on index of active ad\n        if (player.ads.isLinearAdActive()) {\n          const isActiveAd = (ad: Ad) => player.ads.getActiveAd().id === ad.id;\n          const indexOfActiveAd = player.ads.getActiveAdBreak().ads.findIndex(isActiveAd);\n          const duration = player.ads.getActiveAdBreak().ads\n          .slice(indexOfActiveAd)\n          .reduce((total, ad) => total + (ad.isLinear ? (ad as LinearAd).duration : 0), 0);\n\n          // And remaning ads duration minus time played\n          time = duration - player.getCurrentTime();\n        }\n      }\n\n      return formatNumber(Math.round(time), formatString);\n    });\n  }\n\n  function formatNumber(time: number, format: string) {\n    let formatStringValidationRegex = /%((0[1-9]\\d*(\\.\\d+(d|f)|d|f)|\\.\\d+f|d|f)|hh:mm:ss|mm:ss)/;\n    let leadingZeroesRegex = /(%0[1-9]\\d*)(?=(\\.\\d+f|f|d))/;\n    let decimalPlacesRegex = /\\.\\d*(?=f)/;\n\n    if (!formatStringValidationRegex.test(format)) {\n      // If the format is invalid, we set a default fallback format\n      format = '%d';\n    }\n\n    // Determine the number of leading zeros\n    let leadingZeroes = 0;\n    let leadingZeroesMatches = format.match(leadingZeroesRegex);\n    if (leadingZeroesMatches) {\n      leadingZeroes = parseInt(leadingZeroesMatches[0].substring(2));\n    }\n\n    // Determine the number of decimal places\n    let numDecimalPlaces = null;\n    let decimalPlacesMatches = format.match(decimalPlacesRegex);\n    if (decimalPlacesMatches && !isNaN(parseInt(decimalPlacesMatches[0].substring(1)))) {\n      numDecimalPlaces = parseInt(decimalPlacesMatches[0].substring(1));\n      if (numDecimalPlaces > 20) {\n        numDecimalPlaces = 20;\n      }\n    }\n\n    // Float format\n    if (format.indexOf('f') > -1) {\n      let timeString = '';\n\n      if (numDecimalPlaces !== null) {\n        // Apply fixed number of decimal places\n        timeString = time.toFixed(numDecimalPlaces);\n      } else {\n        timeString = '' + time;\n      }\n\n      // Apply leading zeros\n      if (timeString.indexOf('.') > -1) {\n        return leftPadWithZeros(timeString, timeString.length + (leadingZeroes - timeString.indexOf('.')));\n      } else {\n        return leftPadWithZeros(timeString, leadingZeroes);\n      }\n\n    }\n    // Time format\n    else if (format.indexOf(':') > -1) {\n      let totalSeconds = Math.ceil(time);\n\n      // hh:mm:ss format\n      if (format.indexOf('hh') > -1) {\n        return secondsToTime(totalSeconds);\n      }\n      // mm:ss format\n      else {\n        let minutes = Math.floor(totalSeconds / 60);\n        let seconds = totalSeconds % 60;\n\n        return leftPadWithZeros(minutes, 2) + ':' + leftPadWithZeros(seconds, 2);\n      }\n    }\n    // Integer format\n    else {\n      return leftPadWithZeros(Math.ceil(time), leadingZeroes);\n    }\n  }\n}\n","import { ListItem, ListSelector, ListSelectorConfig } from './components/listselector';\nimport { UIInstanceManager } from './uimanager';\nimport { PlayerAPI, SubtitleEvent, SubtitleTrack } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\n\n/**\n * Helper class to handle all subtitle related events\n *\n * This class listens to player events as well as the `ListSelector` event if selection changed\n *\n * @category Utils\n */\nexport class SubtitleSwitchHandler {\n\n  private static SUBTITLES_OFF_KEY: string = 'null';\n\n  private player: PlayerAPI;\n  private listElement: ListSelector<ListSelectorConfig>;\n  private uimanager: UIInstanceManager;\n\n  constructor(player: PlayerAPI, element: ListSelector<ListSelectorConfig>, uimanager: UIInstanceManager) {\n    this.player = player;\n    this.listElement = element;\n    this.uimanager = uimanager;\n\n    this.bindSelectionEvent();\n    this.bindPlayerEvents();\n    this.refreshSubtitles();\n  }\n\n  private bindSelectionEvent(): void {\n    this.listElement.onItemSelected.subscribe((_, value: string) => {\n      // TODO add support for multiple concurrent subtitle selections\n      if (value === SubtitleSwitchHandler.SUBTITLES_OFF_KEY) {\n        const currentSubtitle = this.player.subtitles.list().filter((subtitle) => subtitle.enabled).pop();\n        if (currentSubtitle) {\n          this.player.subtitles.disable(currentSubtitle.id);\n        }\n      } else {\n        this.player.subtitles.enable(value, true);\n      }\n    });\n  }\n\n  private bindPlayerEvents(): void {\n    this.player.on(this.player.exports.PlayerEvent.SubtitleAdded, this.addSubtitle);\n    this.player.on(this.player.exports.PlayerEvent.SubtitleEnabled, this.selectCurrentSubtitle);\n    this.player.on(this.player.exports.PlayerEvent.SubtitleDisabled, this.selectCurrentSubtitle);\n    this.player.on(this.player.exports.PlayerEvent.SubtitleRemoved, this.removeSubtitle);\n    // Update subtitles when source goes away\n    this.player.on(this.player.exports.PlayerEvent.SourceUnloaded, this.clearSubtitles);\n    // Update subtitles when the period within a source changes\n    this.player.on(this.player.exports.PlayerEvent.PeriodSwitched, this.refreshSubtitles);\n    this.uimanager.getConfig().events.onUpdated.subscribe(this.refreshSubtitles);\n  }\n\n  private addSubtitle = (event: SubtitleEvent) => {\n    const subtitle = event.subtitle;\n    if (!this.listElement.hasItem(subtitle.id)) {\n      this.listElement.addItem(subtitle.id, subtitle.label);\n    }\n  };\n\n  private removeSubtitle = (event: SubtitleEvent) => {\n    const subtitle = event.subtitle;\n    if (this.listElement.hasItem(subtitle.id)) {\n      this.listElement.removeItem(subtitle.id);\n    }\n  };\n\n  private selectCurrentSubtitle = () => {\n    if (!this.player.subtitles) {\n      // Subtitles API not available (yet)\n      return;\n    }\n\n    let currentSubtitle = this.player.subtitles.list().filter((subtitle) => subtitle.enabled).pop();\n    this.listElement.selectItem(currentSubtitle ? currentSubtitle.id : SubtitleSwitchHandler.SUBTITLES_OFF_KEY);\n  };\n\n  private clearSubtitles = () => {\n    this.listElement.clearItems();\n  }\n\n  private refreshSubtitles = () => {\n    if (!this.player.subtitles) {\n      // Subtitles API not available (yet)\n      return;\n    }\n\n    const offListItem: ListItem = {\n      key: SubtitleSwitchHandler.SUBTITLES_OFF_KEY,\n      label: i18n.getLocalizer('off'),\n    };\n\n    const subtitles = this.player.subtitles.list();\n    const subtitleToListItem = (subtitle: SubtitleTrack): ListItem => {\n      return { key: subtitle.id, label: subtitle.label };\n    };\n\n    this.listElement.synchronizeItems([\n      offListItem, ...subtitles.map(subtitleToListItem),\n    ]);\n    this.selectCurrentSubtitle();\n  };\n}\n","// TODO change to internal (not exported) class, how to use in other files?\n/**\n * Executes a callback after a specified amount of time, optionally repeatedly until stopped.\n */\nexport class Timeout {\n\n  private readonly delay: number;\n  private readonly callback: () => void;\n  private readonly repeat: boolean;\n  // There's two setTimeout declarations, one on Window which returns type \"number\" and one in NodeJS which returns\n  // type \"Timer\". For unknown reasons builds on Jenkins fail due to a type mismatch when we use type \"number\" here,\n  // although it works on other platforms (e.g. Windows, Codeship).\n  // To work around the issue we use type \"any\". The type does not matter anyway because we're not working with\n  // this value except providing it to clearTimeout.\n  private timeoutOrIntervalId: any;\n  private active: boolean;\n  private suspended: boolean;\n\n  /**\n   * Creates a new timeout callback handler.\n   * @param delay the delay in milliseconds after which the callback should be executed\n   * @param callback the callback to execute after the delay time\n   * @param repeat if true, call the callback repeatedly in delay intervals\n   */\n  constructor(delay: number, callback: () => void, repeat: boolean = false) {\n    this.delay = delay;\n    this.callback = callback;\n    this.repeat = repeat;\n    this.timeoutOrIntervalId = 0;\n    this.active = false;\n    this.suspended = false;\n  }\n\n  /**\n   * Starts the timeout and calls the callback when the timeout delay has passed. Has no effect when the timeout is\n   * suspended.\n   * @returns {Timeout} the current timeout (so the start call can be chained to the constructor)\n   */\n  start(): this {\n    this.reset();\n    return this;\n  }\n\n  /**\n   * Clears the timeout. The callback will not be called if clear is called during the timeout.\n   */\n  clear(): void {\n    this.clearInternal();\n  }\n\n  /**\n   * Suspends the timeout. The callback will not be called and calls to `start` and `reset` will be ignored until the\n   * timeout is resumed.\n   */\n  suspend() {\n    this.suspended = true;\n    this.clearInternal();\n\n    return this;\n  }\n\n  /**\n   * Resumes the timeout.\n   * @param reset whether to reset the timeout after resuming\n   */\n  resume(reset: boolean) {\n    this.suspended = false;\n\n    if (reset) {\n      this.reset();\n    }\n\n    return this;\n  }\n\n  /**\n   * Resets the passed timeout delay to zero. Can be used to defer the calling of the callback. Has no effect if the\n   * timeout is suspended.\n   */\n  reset(): void {\n    this.clearInternal();\n\n    if (this.suspended) {\n      return;\n    }\n\n    if (this.repeat) {\n      this.timeoutOrIntervalId = setInterval(this.callback, this.delay);\n    } else {\n      this.timeoutOrIntervalId = setTimeout(() => {\n        this.active = false;\n        this.callback();\n      }, this.delay);\n    }\n    this.active = true;\n  }\n\n  isActive(): boolean {\n    return this.active;\n  }\n\n  private clearInternal(): void {\n    if (this.repeat) {\n      clearInterval(this.timeoutOrIntervalId);\n    } else {\n      clearTimeout(this.timeoutOrIntervalId);\n    }\n    this.active = false;\n  }\n}","import { GoBackButton } from './../custom/ts/components/gobackbutton';\nimport { ResetButton } from './../custom/ts/components/resetbutton';\nimport { RadioModeToggleButton } from './../custom/ts/components/radiomode/radiomodetogglebutton';\nimport { QuanteecConsumptions } from './../custom/ts/components/quanteecconsumptions';\n\nimport { PlaybackJumpControlsOverlay } from '../custom/ts/components/playbackjumpoverlay';\nimport { SubtitleOverlay } from './components/subtitleoverlay';\nimport { SettingsPanelPage } from './components/settingspanelpage';\nimport { SettingsPanelItem } from './components/settingspanelitem';\nimport { VideoQualitySelectBox } from './components/videoqualityselectbox';\nimport { PlaybackSpeedSelectBox } from './components/playbackspeedselectbox';\nimport { AudioTrackSelectBox } from './components/audiotrackselectbox';\nimport { AudioQualitySelectBox } from './components/audioqualityselectbox';\nimport { SettingsPanel } from './components/settingspanel';\nimport { SubtitleSettingsPanelPage } from './components/subtitlesettings/subtitlesettingspanelpage';\nimport { SettingsPanelPageOpenButton } from './components/settingspanelpageopenbutton';\nimport { SubtitleSettingsLabel } from './components/subtitlesettings/subtitlesettingslabel';\nimport { SubtitleSelectBox } from './components/subtitleselectbox';\nimport { ControlBar } from './components/controlbar';\nimport { Container, ContainerConfig } from './components/container';\nimport { PlaybackTimeLabel, PlaybackTimeLabelMode } from './components/playbacktimelabel';\nimport { SeekBar } from './components/seekbar';\nimport { SeekBarLabel } from './components/seekbarlabel';\nimport { PlaybackToggleButton } from './components/playbacktogglebutton';\nimport { VolumeToggleButton } from './components/volumetogglebutton';\nimport { VolumeSlider } from './components/volumeslider';\nimport { Spacer } from './components/spacer';\nimport { PictureInPictureToggleButton } from './components/pictureinpicturetogglebutton';\nimport { AirPlayToggleButton } from './components/airplaytogglebutton';\nimport { CastToggleButton } from './components/casttogglebutton';\nimport { VRToggleButton } from './components/vrtogglebutton';\nimport { SettingsToggleButton } from './components/settingstogglebutton';\nimport { FullscreenToggleButton } from './components/fullscreentogglebutton';\nimport { UIContainer } from './components/uicontainer';\nimport { BufferingOverlay } from './components/bufferingoverlay';\nimport { PlaybackToggleOverlay } from './components/playbacktoggleoverlay';\nimport { CastStatusOverlay } from './components/caststatusoverlay';\nimport { TitleBar } from './components/titlebar';\nimport { RecommendationOverlay } from './components/recommendationoverlay';\nimport { Watermark } from './components/watermark';\nimport { ErrorMessageOverlay } from './components/errormessageoverlay';\nimport { AdClickOverlay } from './components/adclickoverlay';\nimport { AdMessageLabel } from './components/admessagelabel';\nimport { AdSkipButton } from './components/adskipbutton';\nimport { CloseButton } from './components/closebutton';\n\nimport {\n  MetadataLabel,\n  MetadataLabelContent,\n} from './components/metadatalabel';\nimport { PlayerUtils } from './playerutils';\nimport { Label } from './components/label';\nimport { CastUIContainer } from './components/castuicontainer';\nimport { UIConditionContext, UIManager } from './uimanager';\nimport { UIConfig } from './uiconfig';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\nimport { SubtitleListBox } from './components/subtitlelistbox';\nimport { AudioTrackListBox } from './components/audiotracklistbox';\nimport { SpatialNavigation } from './spatialnavigation/spatialnavigation';\nimport { RootNavigationGroup } from './spatialnavigation/rootnavigationgroup';\nimport { ListNavigationGroup, ListOrientation } from './spatialnavigation/ListNavigationGroup';\nimport { EcoModeContainer } from './components/ecomodecontainer';\nimport { QuickSeekButton } from './components/quickseekbutton';\n\ndeclare global {\n  interface Window {\n    bitmovin: any;\n  }\n}\n\nlet uiManager: UIManager;\nlet playerApi: PlayerAPI;\nlet uiConfig: UIConfig;\n\nexport namespace UIFactory {\n  export function buildDefaultUI(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    return UIFactory.buildModernUI(player, config);\n  }\n\n  export function buildDefaultSmallScreenUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    uiConfig = config;\n    playerApi = player;\n    uiManager = UIFactory.buildModernSmallScreenUI(player, config);\n    return uiManager;\n  }\n\n  export function buildDefaultCastReceiverUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return UIFactory.buildModernCastReceiverUI(player, config);\n  }\n\n  export function buildDefaultTvUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return UIFactory.buildModernTvUI(player, config);\n  }\n\n  export function modernUI({ ecoMode, radioModeAvailable }: UIConfig) {\n    let subtitleOverlay = new SubtitleOverlay();\n\n    let mainSettingsPanelPage: SettingsPanelPage;\n\n    const components: Container<ContainerConfig>[] = [\n      new SettingsPanelItem(i18n.getLocalizer('settings.video.quality'), new VideoQualitySelectBox()),\n      new SettingsPanelItem(i18n.getLocalizer('speed'), new PlaybackSpeedSelectBox()),\n      new SettingsPanelItem(i18n.getLocalizer('settings.audio.track'), new AudioTrackSelectBox()),\n      new SettingsPanelItem(i18n.getLocalizer('settings.audio.quality'), new AudioQualitySelectBox()),\n    ];\n\n    if (ecoMode) {\n      const ecoModeContainer = new EcoModeContainer();\n\n      ecoModeContainer.setOnToggleCallback(() => {\n        // forces the browser to re-calculate the height of the settings panel when adding/removing elements\n        settingsPanel.getDomElement().css({ width: '', height: '' });\n      });\n\n      components.unshift(ecoModeContainer);\n    }\n\n    mainSettingsPanelPage = new SettingsPanelPage({\n      components,\n    });\n\n    let settingsPanel = new SettingsPanel({\n      components: [mainSettingsPanelPage],\n      hidden: true,\n    });\n\n    let subtitleSettingsPanelPage = new SubtitleSettingsPanelPage({\n      settingsPanel: settingsPanel,\n      overlay: subtitleOverlay,\n    });\n\n    const subtitleSelectBox = new SubtitleSelectBox();\n\n    let subtitleSettingsOpenButton = new SettingsPanelPageOpenButton({\n      targetPage: subtitleSettingsPanelPage,\n      container: settingsPanel,\n      ariaLabel: i18n.getLocalizer('settings.subtitles'),\n      text: i18n.getLocalizer('open'),\n    });\n\n    mainSettingsPanelPage.addComponent(\n      new SettingsPanelItem(\n        new SubtitleSettingsLabel({\n          text: i18n.getLocalizer('settings.subtitles'),\n          opener: subtitleSettingsOpenButton,\n        }),\n        subtitleSelectBox,\n        {\n          role: 'menubar',\n        },\n      ),\n    );\n\n    settingsPanel.addComponent(subtitleSettingsPanelPage);\n\n    let containerComponents = [\n      new PlaybackToggleButton(),\n      new VolumeToggleButton(),\n      new VolumeSlider(),\n      new Spacer(),\n      new PictureInPictureToggleButton(),\n      new AirPlayToggleButton(),\n      new CastToggleButton(),\n      new VRToggleButton(),\n      new QuanteecConsumptions(),\n      new SettingsToggleButton({ settingsPanel: settingsPanel }),\n      new FullscreenToggleButton(),\n    ];\n\n    if (radioModeAvailable) {\n      containerComponents.splice(\n        7,\n        0,\n        new RadioModeToggleButton({ active: false }),\n      );\n    }\n\n    let controlBar = new ControlBar({\n      components: [\n        settingsPanel,\n        new Container({\n          components: [\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n              hideInLivePlayback: true,\n            }),\n            new SeekBar({ label: new SeekBarLabel() }),\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.TotalTime,\n              cssClasses: ['text-right'],\n            }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n        new Container({\n          components: containerComponents,\n          cssClasses: ['controlbar-bottom'],\n        }),\n      ],\n    });\n\n    return new UIContainer({\n      components: [\n        subtitleOverlay,\n        new BufferingOverlay(),\n        new PlaybackToggleOverlay(),\n        new QuickSeekButton({ seekSeconds: -10 }),\n        new QuickSeekButton({ seekSeconds: 10 }),\n        // new PlaybackJumpControlsOverlay(),\n        new CastStatusOverlay(),\n        controlBar,\n        new TitleBar(),\n        new RecommendationOverlay(),\n        new ErrorMessageOverlay(),\n      ],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernAdsUI() {\n    return new UIContainer({\n      components: [\n        new BufferingOverlay(),\n        new AdClickOverlay(),\n        new PlaybackToggleOverlay(),\n        new Container({\n          components: [new AdMessageLabel({ text: i18n.getLocalizer('ads.remainingTime') }), new AdSkipButton()],\n          cssClass: 'ui-ads-status',\n        }),\n        new ControlBar({\n          components: [\n            new Container({\n              components: [\n                new PlaybackToggleButton(),\n                new VolumeToggleButton(),\n                new VolumeSlider(),\n                new Spacer(),\n                new FullscreenToggleButton(),\n              ],\n              cssClasses: ['controlbar-bottom'],\n            }),\n          ],\n        }),\n      ],\n      cssClasses: ['ui-skin-ads'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernSmallScreenUI({\n    radioModeAvailable,\n  }: {\n    radioModeAvailable: boolean;\n  }) {\n    let subtitleOverlay = new SubtitleOverlay();\n\n    let mainSettingsPanelPage = new SettingsPanelPage({\n      components: [\n        new SettingsPanelItem(\n          i18n.getLocalizer('settings.video.quality'),\n          new VideoQualitySelectBox(),\n        ),\n        new SettingsPanelItem(\n          i18n.getLocalizer('speed'),\n          new PlaybackSpeedSelectBox(),\n        ),\n        new SettingsPanelItem(\n          i18n.getLocalizer('settings.audio.track'),\n          new AudioTrackSelectBox(),\n        ),\n        new SettingsPanelItem(\n          i18n.getLocalizer('settings.audio.quality'),\n          new AudioQualitySelectBox(),\n        ),\n      ],\n    });\n\n    let settingsPanel = new SettingsPanel({\n      components: [mainSettingsPanelPage],\n      hidden: true,\n      pageTransitionAnimation: false,\n      hideDelay: -1,\n    });\n\n    let subtitleSettingsPanelPage = new SubtitleSettingsPanelPage({\n      settingsPanel: settingsPanel,\n      overlay: subtitleOverlay,\n    });\n\n    let subtitleSettingsOpenButton = new SettingsPanelPageOpenButton({\n      targetPage: subtitleSettingsPanelPage,\n      container: settingsPanel,\n      ariaLabel: i18n.getLocalizer('settings.subtitles'),\n      text: i18n.getLocalizer('open'),\n    });\n\n    const subtitleSelectBox = new SubtitleSelectBox();\n\n    mainSettingsPanelPage.addComponent(\n      new SettingsPanelItem(\n        new SubtitleSettingsLabel({\n          text: i18n.getLocalizer('settings.subtitles'),\n          opener: subtitleSettingsOpenButton,\n        }),\n        subtitleSelectBox,\n        {\n          role: 'menubar',\n        },\n      ),\n    );\n\n    settingsPanel.addComponent(subtitleSettingsPanelPage);\n\n    settingsPanel.addComponent(new CloseButton({ target: settingsPanel }));\n    subtitleSettingsPanelPage.addComponent(\n      new CloseButton({ target: settingsPanel }),\n    );\n\n    let controlBar = new ControlBar({\n      components: [\n        new Container({\n          components: [\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n              hideInLivePlayback: true,\n            }),\n            new SeekBar({ label: new SeekBarLabel() }),\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.TotalTime,\n              cssClasses: ['text-right'],\n            }),\n            new FullscreenToggleButton({\n              cssClasses: ['controlbar-fullscreen-toggle-button'],\n            }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n      ],\n    });\n\n    let titleBarComponents = [];\n    const isBrowser = !window.bitmovin.customMessageHandler;\n\n    if (!isBrowser) {\n      titleBarComponents.push(new GoBackButton());\n    } else {\n      titleBarComponents.push(new QuanteecConsumptions());\n    }\n\n    titleBarComponents = [\n      ...titleBarComponents,\n      new MetadataLabel({ content: MetadataLabelContent.Title }),\n      new CastToggleButton(),\n      new VRToggleButton(),\n      new PictureInPictureToggleButton(),\n      new AirPlayToggleButton(),\n      new SettingsToggleButton({ settingsPanel: settingsPanel }),\n    ];\n\n    if (radioModeAvailable) {\n      titleBarComponents.splice(\n        !isBrowser ? 5 : 4,\n        0,\n        new RadioModeToggleButton({ active: false }),\n      );\n    }\n\n    return new UIContainer({\n      components: [\n        subtitleOverlay,\n        new BufferingOverlay(),\n        new CastStatusOverlay(),\n        new PlaybackToggleOverlay(),\n        new QuickSeekButton({ seekSeconds: -10 }),\n        new QuickSeekButton({ seekSeconds: 10 }),\n        // new PlaybackJumpControlsOverlay(),\n        new RecommendationOverlay(),\n        controlBar,\n        new TitleBar({\n          components: titleBarComponents,\n        }),\n        settingsPanel,\n        new ErrorMessageOverlay(),\n      ],\n      cssClasses: ['ui-skin-smallscreen'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernSmallScreenAdsUI() {\n    return new UIContainer({\n      components: [\n        new BufferingOverlay(),\n        new AdClickOverlay(),\n        new PlaybackToggleOverlay(),\n        new TitleBar({\n          components: [\n            // dummy label with no content to move buttons to the right\n            new Label({ cssClass: 'label-metadata-title' }),\n            new FullscreenToggleButton(),\n          ],\n        }),\n        new Container({\n          components: [new AdMessageLabel({ text: 'Ad: {remainingTime} secs' }), new AdSkipButton()],\n          cssClass: 'ui-ads-status',\n        }),\n      ],\n      cssClasses: ['ui-skin-ads', 'ui-skin-smallscreen'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernCastReceiverUI() {\n    let controlBar = new ControlBar({\n      components: [\n        new Container({\n          components: [\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n              hideInLivePlayback: true,\n            }),\n            new SeekBar({ smoothPlaybackPositionUpdateIntervalMs: -1 }),\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.TotalTime,\n              cssClasses: ['text-right'],\n            }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n      ],\n    });\n\n    return new CastUIContainer({\n      components: [\n        new SubtitleOverlay(),\n        new BufferingOverlay(),\n        new PlaybackToggleOverlay(),\n        controlBar,\n        new TitleBar({ keepHiddenWithoutMetadata: true }),\n        new ErrorMessageOverlay(),\n      ],\n      cssClasses: ['ui-skin-cast-receiver'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function buildModernUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    // show smallScreen UI only on mobile/handheld devices\n    let smallScreenSwitchWidth = 600;\n\n    return new UIManager(\n      player,\n      [\n        {\n          ui: modernRadioModeUI(),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && context.isRadioModeActive;\n          },\n        },\n        {\n          ui: modernSmallScreenAdsUI(),\n          condition: (context: UIConditionContext) => {\n            return (\n              context.isMobile && context.documentWidth < smallScreenSwitchWidth && context.isAd && context.adRequiresUi\n            );\n          },\n        },\n        {\n          ui: modernAdsUI(),\n          condition: (context: UIConditionContext) => {\n            return context.isAd && context.adRequiresUi;\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: true }),\n          condition: (context: UIConditionContext) => {\n            return (\n              !context.isAd &&\n              !context.adRequiresUi &&\n              context.isMobile &&\n              context.documentWidth < smallScreenSwitchWidth &&\n              !context.isRadioModeActive &&\n              context.isRadioModeAvailable\n            );\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: false }),\n          condition: (context: UIConditionContext) => {\n            return (\n              !context.isAd &&\n              !context.adRequiresUi &&\n              context.isMobile &&\n              context.documentWidth < smallScreenSwitchWidth &&\n              !context.isRadioModeActive &&\n              !context.isRadioModeAvailable\n            );\n          },\n        },\n        {\n          ui: modernUI({ ...config, radioModeAvailable: true }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && context.isRadioModeAvailable;\n          },\n        },\n        {\n          ui: modernUI({ ...config, radioModeAvailable: false }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && !context.isRadioModeAvailable;\n          },\n        },\n      ],\n      config,\n    );\n  }\n\n  export function buildModernSmallScreenUI(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    return new UIManager(\n      player,\n      [\n        {\n          ui: modernRadioModeUI(),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && context.isRadioModeActive;\n          },\n        },\n        {\n          ui: modernSmallScreenAdsUI(),\n          condition: (context: UIConditionContext) => {\n            return context.isAd && context.adRequiresUi;\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: true }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && context.isRadioModeAvailable;\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: false }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && !context.isRadioModeAvailable;\n          },\n        },\n      ],\n      config,\n    );\n  }\n\n  export function buildModernCastReceiverUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return new UIManager(player, modernCastReceiverUI(), config);\n  }\n\n  export function buildModernTvUI(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    return new UIManager(\n      player,\n      [\n        {\n          ...modernTvUI(),\n        },\n      ],\n      config,\n    );\n  }\n\n  export function modernTvUI() {\n    const subtitleListBox = new SubtitleListBox();\n    const subtitleListPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [new SettingsPanelItem(null, subtitleListBox)],\n        }),\n      ],\n      hidden: true,\n    });\n\n    const audioTrackListBox = new AudioTrackListBox();\n    const audioTrackListPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [new SettingsPanelItem(null, audioTrackListBox)],\n        }),\n      ],\n      hidden: true,\n    });\n\n    const seekBar = new SeekBar({ label: new SeekBarLabel() });\n    const playbackToggleOverlay = new PlaybackToggleOverlay();\n    const subtitleToggleButton = new SettingsToggleButton({\n      settingsPanel: subtitleListPanel,\n      autoHideWhenNoActiveSettings: true,\n      cssClass: 'ui-subtitlesettingstogglebutton',\n      text: i18n.getLocalizer('settings.subtitles'),\n    });\n    const audioToggleButton = new SettingsToggleButton({\n      settingsPanel: audioTrackListPanel,\n      autoHideWhenNoActiveSettings: true,\n      cssClass: 'ui-audiotracksettingstogglebutton',\n      ariaLabel: i18n.getLocalizer('settings.audio.track'),\n      text: i18n.getLocalizer('settings.audio.track'),\n    });\n    const uiContainer = new UIContainer({\n      components: [\n        new SubtitleOverlay(),\n        new BufferingOverlay(),\n        playbackToggleOverlay,\n        new ControlBar({\n          components: [\n            new Container({\n              components: [\n                new PlaybackTimeLabel({\n                  timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n                  hideInLivePlayback: true,\n                }),\n                seekBar,\n                new PlaybackTimeLabel({\n                  timeLabelMode: PlaybackTimeLabelMode.RemainingTime,\n                  cssClasses: ['text-right'],\n                }),\n              ],\n              cssClasses: ['controlbar-top'],\n            }),\n          ],\n        }),\n        new TitleBar({\n          components: [\n            new Container({\n              components: [\n                new MetadataLabel({ content: MetadataLabelContent.Title }),\n                subtitleToggleButton,\n                audioToggleButton,\n              ],\n              cssClasses: ['ui-titlebar-top'],\n            }),\n            new Container({\n              components: [\n                new MetadataLabel({\n                  content: MetadataLabelContent.Description,\n                }),\n                subtitleListPanel,\n                audioTrackListPanel,\n              ],\n              cssClasses: ['ui-titlebar-bottom'],\n            }),\n          ],\n        }),\n        new RecommendationOverlay(),\n        new ErrorMessageOverlay(),\n      ],\n      cssClasses: ['ui-skin-tv'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n\n    const spatialNavigation = new SpatialNavigation(\n      new RootNavigationGroup(\n        uiContainer,\n        playbackToggleOverlay,\n        seekBar,\n        audioToggleButton,\n        subtitleToggleButton,\n      ),\n      new ListNavigationGroup(\n        ListOrientation.Vertical,\n        subtitleListPanel,\n        subtitleListBox,\n      ),\n      new ListNavigationGroup(\n        ListOrientation.Vertical,\n        audioTrackListPanel,\n        audioTrackListBox,\n      ),\n    );\n\n    return {\n      ui: uiContainer,\n      spatialNavigation: spatialNavigation,\n    };\n  }\n\n  export function modernRadioModeUI() {\n    return new UIContainer({\n      components: [\n        new ControlBar({\n          components: [\n            new Container({\n              components: [\n                new PlaybackToggleButton(),\n                new SeekBar({ label: new SeekBarLabel() }),\n                new RadioModeToggleButton({ active: true }),\n              ],\n              cssClasses: ['controlbar-top'],\n            }),\n          ],\n        }),\n      ],\n      cssClasses: ['ui-skin-radio'],\n      hideDelay: -1,\n    });\n  }\n\n  export function buildModernRadioModeUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return new UIManager(\n      player,\n      [\n        {\n          ui: modernRadioModeUI(),\n        },\n      ],\n      config,\n    );\n  }\n}\n","import {UIContainer} from './components/uicontainer';\nimport {DOM} from './dom';\nimport { Component, ComponentConfig, ViewModeChangedEventArgs } from './components/component';\nimport {Container} from './components/container';\nimport { SeekBar, SeekBarMarker } from './components/seekbar';\nimport {NoArgs, EventDispatcher, CancelEventArgs} from './eventdispatcher';\nimport {UIUtils} from './uiutils';\nimport {ArrayUtils} from './arrayutils';\nimport {BrowserUtils} from './browserutils';\nimport { TimelineMarker, UIConfig } from './uiconfig';\nimport { PlayerAPI, PlayerEventCallback, PlayerEventBase, PlayerEvent, AdEvent, LinearAd } from 'bitmovin-player';\nimport { VolumeController } from './volumecontroller';\nimport { i18n, CustomVocabulary, Vocabularies } from './localization/i18n';\nimport { FocusVisibilityTracker } from './focusvisibilitytracker';\nimport { isMobileV3PlayerAPI, MobileV3PlayerAPI, MobileV3PlayerEvent } from './mobilev3playerapi';\nimport { SpatialNavigation } from './spatialnavigation/spatialnavigation';\nimport { SubtitleSettingsManager } from './components/subtitlesettings/subtitlesettingsmanager';\nimport { StorageUtils } from './storageutils';\n\n/**\n * @category Configs\n */\nexport interface LocalizationConfig {\n  /**\n   * Sets the desired language, and falls back to 'en' if there is no vocabulary for the desired language. Setting it\n   * to \"auto\" will enable language detection from the browser's locale.\n   */\n  language?: 'auto' | 'en' | 'de' | string;\n  /**\n   * A map of `language` to {@link CustomVocabulary} definitions. Can be used to overwrite default translations and add\n   * custom strings or additional languages.\n   */\n  vocabularies?: Vocabularies;\n}\n\n/**\n * @category Configs\n */\nexport interface InternalUIConfig extends UIConfig {\n  events: {\n    /**\n     * Fires when the configuration has been updated/changed.\n     */\n    onUpdated: EventDispatcher<UIManager, void>;\n  };\n  volumeController: VolumeController;\n}\n\n/**\n * The context that will be passed to a {@link UIConditionResolver} to determine if it's conditions fulfil the context.\n */\nexport interface UIConditionContext {\n  /**\n   * Tells if the player is loading or playing an ad.\n   */\n  isAd: boolean;\n  /**\n   * Tells if the current ad requires an external UI, if {@link #isAd} is true.\n   */\n  adRequiresUi: boolean;\n  /**\n   * Tells if the player is currently in fullscreen mode.\n   */\n  isFullscreen: boolean;\n  /**\n   * Tells if the UI is running in a mobile browser.\n   */\n  isMobile: boolean;\n  /**\n   * Tells if the player is in playing or paused state.\n   */\n  isPlaying: boolean;\n  /**\n   * The width of the player/UI element.\n   */\n  width: number;\n  /**\n   * The width of the document where the player/UI is embedded in.\n   */\n  documentWidth: number;\n  /**\n   * Tells if the radio mode is activated or not\n   */\n  isRadioModeActive: boolean;\n  /**\n   * Tells if the radio mode is available or not\n   */\n  isRadioModeAvailable: boolean;\n}\n\n/**\n * Resolves the conditions of its associated UI in a {@link UIVariant} upon a {@link UIConditionContext} and decides\n * if the UI should be displayed. If it returns true, the UI is a candidate for display; if it returns false, it will\n * not be displayed in the given context.\n */\nexport interface UIConditionResolver {\n  (context: UIConditionContext): boolean;\n}\n\n/**\n * Associates a UI instance with an optional {@link UIConditionResolver} that determines if the UI should be displayed.\n */\nexport interface UIVariant {\n  ui: UIContainer;\n  condition?: UIConditionResolver;\n  spatialNavigation?: SpatialNavigation;\n}\n\nexport interface ActiveUiChangedArgs extends NoArgs {\n  /**\n   * The previously active {@link UIInstanceManager} prior to the {@link UIManager} switching to a different UI variant.\n   */\n  previousUi: UIInstanceManager;\n  /**\n   * The currently active {@link UIInstanceManager}.\n   */\n  currentUi: UIInstanceManager;\n}\n\nexport class UIManager {\n\n  private player: PlayerAPI;\n  private uiContainerElement: DOM;\n  private uiVariants: UIVariant[];\n  private uiInstanceManagers: InternalUIInstanceManager[];\n  private currentUi: InternalUIInstanceManager;\n  private config: InternalUIConfig; // Conjunction of provided uiConfig and sourceConfig from the player\n  private managerPlayerWrapper: PlayerWrapper;\n  private focusVisibilityTracker: FocusVisibilityTracker;\n  private isRadioModeActive: boolean;\n  private isRadioModeAvailable: boolean;\n  private subtitleSettingsManager: SubtitleSettingsManager;\n\n  private events = {\n    onUiVariantResolve: new EventDispatcher<UIManager, UIConditionContext>(),\n    onActiveUiChanged: new EventDispatcher<UIManager, ActiveUiChangedArgs>(),\n  };\n\n  /**\n   * Creates a UI manager with a single UI variant that will be permanently shown.\n   * @param player the associated player of this UI\n   * @param ui the UI to add to the player\n   * @param uiconfig optional UI configuration\n   */\n  constructor(player: PlayerAPI, ui: UIContainer, uiconfig?: UIConfig);\n  /**\n   * Creates a UI manager with a list of UI variants that will be dynamically selected and switched according to\n   * the context of the UI.\n   *\n   * Every time the UI context changes, the conditions of the UI variants will be sequentially resolved and the first\n   * UI, whose condition evaluates to true, will be selected and displayed. The last variant in the list might omit the\n   * condition resolver and will be selected as default/fallback UI when all other conditions fail. If there is no\n   * fallback UI and all conditions fail, no UI will be displayed.\n   *\n   * @param player the associated player of this UI\n   * @param uiVariants a list of UI variants that will be dynamically switched\n   * @param uiconfig optional UI configuration\n   */\n  constructor(player: PlayerAPI, uiVariants: UIVariant[], uiconfig?: UIConfig);\n  constructor(player: PlayerAPI, playerUiOrUiVariants: UIContainer | UIVariant[], uiconfig: UIConfig = {}) {\n    this.isRadioModeActive = window.isRadioModeActive;\n    this.isRadioModeAvailable = window.isRadioModeAvailable;\n\n    if (playerUiOrUiVariants instanceof UIContainer) {\n      // Single-UI constructor has been called, transform arguments to UIVariant[] signature\n      let playerUi = <UIContainer>playerUiOrUiVariants;\n      let uiVariants = [];\n\n      // Add the default player UI\n      uiVariants.push({ ui: playerUi });\n\n      this.uiVariants = uiVariants;\n    } else {\n      // Default constructor (UIVariant[]) has been called\n      this.uiVariants = <UIVariant[]>playerUiOrUiVariants;\n    }\n\n    this.subtitleSettingsManager = new SubtitleSettingsManager();\n    this.player = player;\n    this.managerPlayerWrapper = new PlayerWrapper(player);\n\n    // ensure that at least the metadata object does exist in the uiconfig\n    uiconfig.metadata = uiconfig.metadata ? uiconfig.metadata : {};\n\n    this.config = {\n      playbackSpeedSelectionEnabled: true, // Switch on speed selector by default\n      autoUiVariantResolve: true, // Switch on auto UI resolving by default\n      disableAutoHideWhenHovered: false, // Disable auto hide when UI is hovered\n      enableSeekPreview: true,\n      ...uiconfig,\n      events: {\n        onUpdated: new EventDispatcher<UIManager, void>(),\n      },\n      volumeController: new VolumeController(\n        this.managerPlayerWrapper.getPlayer(),\n      ),\n    };\n    try {\n      // Mobile\n      if (window.bitmovin.customMessageHandler) {\n        window.bitmovin.customMessageHandler.on(\n          'globalRadioModeChanged',\n          (data: string) => {\n            const { activated, available } = JSON.parse(data);\n            this.isRadioModeActive = activated;\n            this.isRadioModeAvailable = available;\n\n            this.resolveUiVariant({\n              isRadioModeActive: activated,\n              isRadioModeAvailable: available,\n            });\n          },\n        );\n      }\n      // Web\n\n      window.addEventListener('isRadioModeActiveChange', this.handleIsRadioModeActiveChange);\n      window.addEventListener('isRadioModeAvailableChange', this.handleIsRadioModeAvailableChange);\n    } catch (error) {}\n\n    /**\n     * Gathers configuration data from the UI config and player source config and creates a merged UI config\n     * that is used throughout the UI instance.\n     */\n    const updateConfig = () => {\n      const playerSourceConfig = player.getSource() || {};\n      this.config.metadata = JSON.parse(\n        JSON.stringify(uiconfig.metadata || {}),\n      );\n\n      // Extract the UI-related config properties from the source config\n      const playerSourceUiConfig: UIConfig = {\n        metadata: {\n          // TODO move metadata into source.metadata namespace in player v8\n          title: playerSourceConfig.title,\n          description: playerSourceConfig.description,\n          markers: (playerSourceConfig as any).markers,\n        },\n        recommendations: (playerSourceConfig as any).recommendations,\n      };\n\n      // Player source config takes precedence over the UI config, because the config in the source is attached\n      // to a source which changes with every player.load, whereas the UI config stays the same for the whole\n      // lifetime of the player instance.\n      this.config.metadata.title =\n        playerSourceUiConfig.metadata.title || uiconfig.metadata.title;\n      this.config.metadata.description =\n        playerSourceUiConfig.metadata.description ||\n        uiconfig.metadata.description;\n      this.config.metadata.markers =\n        playerSourceUiConfig.metadata.markers ||\n        uiconfig.metadata.markers ||\n        [];\n      this.config.recommendations =\n        playerSourceUiConfig.recommendations || uiconfig.recommendations || [];\n      this.config.metadata.title = playerSourceUiConfig.metadata.title || uiconfig.metadata.title;\n      this.config.metadata.description = playerSourceUiConfig.metadata.description || uiconfig.metadata.description;\n      this.config.metadata.markers = playerSourceUiConfig.metadata.markers || uiconfig.metadata.markers || [];\n      this.config.recommendations = playerSourceUiConfig.recommendations || uiconfig.recommendations || [];\n\n      StorageUtils.setStorageApiDisabled(uiconfig);\n    };\n\n    updateConfig();\n    this.subtitleSettingsManager.initialize();\n\n    // Update the source configuration when a new source is loaded and dispatch onUpdated\n    const updateSource = () => {\n      updateConfig();\n      this.config.events.onUpdated.dispatch(this);\n    };\n\n    const wrappedPlayer = this.managerPlayerWrapper.getPlayer();\n\n    wrappedPlayer.on(\n      this.player.exports.PlayerEvent.SourceLoaded,\n      updateSource,\n    );\n\n    // The PlaylistTransition event is only available on Mobile v3 for now.\n    // This event is fired when a new source becomes active in the player.\n    if (isMobileV3PlayerAPI(wrappedPlayer)) {\n      wrappedPlayer.on(MobileV3PlayerEvent.PlaylistTransition, updateSource);\n    }\n\n    if (uiconfig.container) {\n      // Unfortunately \"uiContainerElement = new DOM(config.container)\" will not accept the container with\n      // string|HTMLElement type directly, although it accepts both types, so we need to spit these two cases up here.\n      // TODO check in upcoming TS versions if the container can be passed in directly, or fix the constructor\n      this.uiContainerElement =\n        uiconfig.container instanceof HTMLElement\n          ? new DOM(uiconfig.container)\n          : new DOM(uiconfig.container);\n    } else {\n      this.uiContainerElement = new DOM(player.getContainer());\n    }\n\n    // Create UI instance managers for the UI variants\n    // The instance managers map to the corresponding UI variants by their array index\n    this.uiInstanceManagers = [];\n    let uiVariantsWithoutCondition = [];\n    for (let uiVariant of this.uiVariants) {\n      if (uiVariant.condition == null) {\n        // Collect variants without conditions for error checking\n        uiVariantsWithoutCondition.push(uiVariant);\n      }\n      // Create the instance manager for a UI variant\n      this.uiInstanceManagers.push(new InternalUIInstanceManager(\n        player,\n        uiVariant.ui,\n        this.config,\n        this.subtitleSettingsManager,\n        uiVariant.spatialNavigation,\n      ));\n    }\n    // Make sure that there is only one UI variant without a condition\n    // It does not make sense to have multiple variants without condition, because only the first one in the list\n    // (the one with the lowest index) will ever be selected.\n    if (uiVariantsWithoutCondition.length > 1) {\n      throw Error(\n        'Too many UIs without a condition: You cannot have more than one default UI',\n      );\n    }\n    // Make sure that the default UI variant, if defined, is at the end of the list (last index)\n    // If it comes earlier, the variants with conditions that come afterwards will never be selected because the\n    // default variant without a condition always evaluates to 'true'\n    if (\n      uiVariantsWithoutCondition.length > 0 &&\n      uiVariantsWithoutCondition[0] !==\n        this.uiVariants[this.uiVariants.length - 1]\n    ) {\n      throw Error(\n        'Invalid UI variant order: the default UI (without condition) must be at the end of the list',\n      );\n    }\n\n    let adStartedEvent: AdEvent = null; // keep the event stored here during ad playback\n\n    // Dynamically select a UI variant that matches the current UI condition.\n    let resolveUiVariant = (event: PlayerEventBase) => {\n      // Make sure that the AdStarted event data is persisted through ad playback in case other events happen\n      // in the meantime, e.g. player resize. We need to store this data because there is no other way to find out\n      // ad details while an ad is playing (in v8.0 at least; from v8.1 there will be ads.getActiveAd()).\n      // Existing event data signals that an ad is currently active (instead of ads.isLinearAdActive()).\n      if (event != null) {\n        switch (event.type) {\n          // The ads UI is shown upon the first AdStarted event. Subsequent AdStarted events within an ad break\n          // will not change the condition context and thus not lead to undesired UI variant resolving.\n          // The ads UI is shown upon AdStarted instead of AdBreakStarted because there can be a loading delay\n          // between these two events in the player, and the AdBreakStarted event does not carry any metadata to\n          // initialize the ads UI, so it would be rendered in an uninitialized state for a certain amount of time.\n          // TODO show ads UI upon AdBreakStarted and display loading overlay between AdBreakStarted and first AdStarted\n          // TODO display loading overlay between AdFinished and next AdStarted\n          case player.exports.PlayerEvent.AdStarted:\n            adStartedEvent = event as AdEvent;\n            break;\n          // The ads UI is hidden only when the ad break is finished, i.e. not on AdFinished events. This way we keep\n          // the ads UI variant active throughout an ad break, as reacting to AdFinished would lead to undesired UI\n          // variant switching between two ads in an ad break, e.g. ads UI -> AdFinished -> content UI ->\n          // AdStarted -> ads UI.\n          case player.exports.PlayerEvent.AdBreakFinished:\n            adStartedEvent = null;\n            // When switching to a variant for the first time, a config.events.onUpdated event is fired to trigger a UI\n            // update of the new variant, because most components subscribe to this event to update themselves. When\n            // switching to the ads UI on the first AdStarted, all UI variants update themselves with the ad data, so\n            // when switching back to the \"normal\" UI it will carry properties of the ad instead of the main content.\n            // We thus fire this event here to force an UI update with the properties of the main content. This is\n            // basically a hack because the config.events.onUpdated event is abused in many places and not just used\n            // for config updates (e.g. adding a marker to the seekbar).\n            // TODO introduce an event that is fired when the playback content is updated, a switch to/from ads\n            this.config.events.onUpdated.dispatch(this);\n            break;\n          // When a new source is loaded during ad playback, there will be no Ad(Break)Finished event\n          case player.exports.PlayerEvent.SourceLoaded:\n          case player.exports.PlayerEvent.SourceUnloaded:\n            adStartedEvent = null;\n            break;\n        }\n      }\n\n      // Detect if an ad has started\n      let isAd = adStartedEvent != null;\n      let adRequiresUi = false;\n      if (isAd) {\n        let ad = adStartedEvent.ad;\n        // for now only linear ads can request a UI\n        if (ad.isLinear) {\n          let linearAd = ad as LinearAd;\n          adRequiresUi =\n            (linearAd.uiConfig && linearAd.uiConfig.requestsUi) || false;\n        }\n      }\n\n      if (adRequiresUi) {\n        // we dispatch onUpdated event because if there are multiple adBreaks for same position\n        // `Play` and `Playing` events will not be dispatched which will cause `PlaybackButton` state\n        // to be out of sync\n        this.config.events.onUpdated.dispatch(this);\n      }\n\n      this.resolveUiVariant(\n        {\n          isAd: isAd,\n          adRequiresUi: adRequiresUi,\n          isRadioModeActive: this.isRadioModeActive,\n          isRadioModeAvailable: this.isRadioModeAvailable,\n        },\n        (context) => {\n          // If this is an ad UI, we need to relay the saved ON_AD_STARTED event data so ad components can configure\n          // themselves for the current ad.\n          if (context.isAd) {\n            /* Relay the ON_AD_STARTED event to the ads UI\n             *\n             * Because the ads UI is initialized in the ON_AD_STARTED handler, i.e. when the ON_AD_STARTED event has\n             * already been fired, components in the ads UI that listen for the ON_AD_STARTED event never receive it.\n             * Since this can break functionality of components that rely on this event, we relay the event to the\n             * ads UI components with the following call.\n             */\n            this.currentUi\n              .getWrappedPlayer()\n              .fireEventInUI(\n                this.player.exports.PlayerEvent.AdStarted,\n                adStartedEvent,\n              );\n          }\n        },\n      );\n    };\n\n    // Listen to the following events to trigger UI variant resolution\n    if (this.config.autoUiVariantResolve) {\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.SourceLoaded, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.SourceUnloaded, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.Play, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.Paused, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.AdStarted, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.AdBreakFinished, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.PlayerResized, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.ViewModeChanged, resolveUiVariant);\n    }\n\n    this.focusVisibilityTracker = new FocusVisibilityTracker('{{PREFIX}}');\n\n    // Initialize the UI\n    resolveUiVariant(null);\n  }\n\n  /**\n   * Exposes i18n.getLocalizer() function\n   * @returns {I18nApi.getLocalizer()}\n   */\n  static localize<V extends CustomVocabulary<Record<string, string>>>(key: keyof V) {\n    return i18n.getLocalizer(key);\n  }\n\n  /**\n   * Provide configuration to support Custom UI languages\n   * default language: 'en'\n   */\n  static setLocalizationConfig(localizationConfig: LocalizationConfig) {\n    i18n.setConfig(localizationConfig);\n  }\n\n  handleIsRadioModeActiveChange = (\n    event: CustomEvent<boolean | null>,\n  ) => {\n    this.isRadioModeActive = event.detail;\n  };\n\n  handleIsRadioModeAvailableChange = (\n    event: CustomEvent<boolean | null>,\n  ) => {\n    this.isRadioModeAvailable = event.detail;\n  };\n  getSubtitleSettingsManager() {\n    return this.subtitleSettingsManager;\n  }\n\n  getConfig(): UIConfig {\n    return this.config;\n  }\n\n  /**\n   * Returns the list of UI variants as passed into the constructor of {@link UIManager}.\n   * @returns {UIVariant[]} the list of available UI variants\n   */\n  getUiVariants(): UIVariant[] {\n    return this.uiVariants;\n  }\n\n  /**\n   * Switches to a UI variant from the list returned by {@link getUiVariants}.\n   * @param {UIVariant} uiVariant the UI variant to switch to\n   * @param {() => void} onShow a callback that is executed just before the new UI variant is shown\n   */\n  switchToUiVariant(uiVariant: UIVariant, onShow?: () => void): void {\n    let uiVariantIndex = this.uiVariants.indexOf(uiVariant);\n\n    const previousUi = this.currentUi;\n    const nextUi: InternalUIInstanceManager = this.uiInstanceManagers[uiVariantIndex];\n    // Determine if the UI variant is changing\n    // Only if the UI variant is changing, we need to do some stuff. Else we just leave everything as-is.\n    if (nextUi === this.currentUi) {\n      return;\n      // console.log('switched from ', this.currentUi ? this.currentUi.getUI() : 'none',\n      //   ' to ', nextUi ? nextUi.getUI() : 'none');\n    }\n\n    // Hide the currently active UI variant\n    if (this.currentUi) {\n      this.currentUi.getUI().hide();\n    }\n\n    // Assign the new UI variant as current UI\n    this.currentUi = nextUi;\n\n    // When we switch to a different UI instance, there's some additional stuff to manage. If we do not switch\n    // to an instance, we're done here.\n    if (this.currentUi == null) {\n      return;\n    }\n    // Add the UI to the DOM (and configure it) the first time it is selected\n    if (!this.currentUi.isConfigured()) {\n      this.addUi(this.currentUi);\n      // ensure that the internal state is ready for the upcoming show call\n      if (!this.currentUi.getUI().isHidden()) {\n        this.currentUi.getUI().hide();\n      }\n    }\n    if (onShow) {\n      onShow();\n    }\n    this.currentUi.getUI().show();\n    this.events.onActiveUiChanged.dispatch(this, { previousUi, currentUi: nextUi });\n  }\n\n  /**\n   * Triggers a UI variant switch as triggered by events when automatic switching is enabled. It allows to overwrite\n   * properties of the {@link UIConditionContext}.\n   * @param {Partial<UIConditionContext>} context an optional set of properties that overwrite properties of the\n   *   automatically determined context\n   * @param {(context: UIConditionContext) => void} onShow a callback that is executed just before the new UI variant\n   *   is shown (if a switch is happening)\n   */\n  resolveUiVariant(context: Partial<UIConditionContext> = {}, onShow?: (context: UIConditionContext) => void): void {\n    // Determine the current context for which the UI variant will be resolved\n    const defaultContext: UIConditionContext = {\n      isAd: false,\n      adRequiresUi: false,\n      isFullscreen: this.player.getViewMode() === this.player.exports.ViewMode.Fullscreen,\n      isMobile: BrowserUtils.isMobile,\n      isPlaying: this.player.isPlaying(),\n      width: this.uiContainerElement.width(),\n      documentWidth: document.body.clientWidth,\n      isRadioModeActive: false,\n      isRadioModeAvailable: false,\n    };\n\n    // Overwrite properties of the default context with passed in context properties\n    const switchingContext = { ...defaultContext, ...context };\n\n    // Fire the event and allow modification of the context before it is used to resolve the UI variant\n    this.events.onUiVariantResolve.dispatch(this, switchingContext);\n\n    let nextUiVariant: UIVariant = null;\n\n    // Select new UI variant\n    // If no variant condition is fulfilled, we switch to *no* UI\n    for (let uiVariant of this.uiVariants) {\n      const matchesCondition = uiVariant.condition == null || uiVariant.condition(switchingContext) === true;\n      if (nextUiVariant == null && matchesCondition) {\n        nextUiVariant = uiVariant;\n      } else {\n        // hide all UIs besides the one which should be active\n        uiVariant.ui.hide();\n      }\n    }\n\n    this.switchToUiVariant(nextUiVariant, () => {\n      if (onShow) {\n        onShow(switchingContext);\n      }\n    });\n  }\n\n  private addUi(ui: InternalUIInstanceManager): void {\n    let dom = ui.getUI().getDomElement();\n    let player = ui.getWrappedPlayer();\n\n    ui.configureControls();\n    /* Append the UI DOM after configuration to avoid CSS transitions at initialization\n     * Example: Components are hidden during configuration and these hides may trigger CSS transitions that are\n     * undesirable at this time. */\n    this.uiContainerElement.append(dom);\n\n    // When the UI is loaded after a source was loaded, we need to tell the components to initialize themselves\n    if (player.getSource()) {\n      this.config.events.onUpdated.dispatch(this);\n\n    }\n\n    // Fire onConfigured after UI DOM elements are successfully added. When fired immediately, the DOM elements\n    // might not be fully configured and e.g. do not have a size.\n    // https://swizec.com/blog/how-to-properly-wait-for-dom-elements-to-show-up-in-modern-browsers/swizec/6663\n    if (window.requestAnimationFrame) {\n      requestAnimationFrame(() => { ui.onConfigured.dispatch(ui.getUI()); });\n    } else {\n      // IE9 fallback\n      setTimeout(() => { ui.onConfigured.dispatch(ui.getUI()); }, 0);\n    }\n  }\n\n  private releaseUi(ui: InternalUIInstanceManager): void {\n    ui.releaseControls();\n\n    const uiContainer = ui.getUI();\n    if (uiContainer.hasDomElement()) {\n      uiContainer.getDomElement().remove();\n    }\n\n    ui.clearEventHandlers();\n  }\n\n  release(): void {\n    for (let uiInstanceManager of this.uiInstanceManagers) {\n      this.releaseUi(uiInstanceManager);\n    }\n    this.managerPlayerWrapper.clearEventHandlers();\n    this.focusVisibilityTracker.release();\n  }\n\n  /**\n   * Fires just before UI variants are about to be resolved and the UI variant is possibly switched. It is fired when\n   * the switch is triggered from an automatic switch and when calling {@link resolveUiVariant}.\n   * Can be used to modify the {@link UIConditionContext} before resolving is done.\n   * @returns {EventDispatcher<UIManager, UIConditionContext>}\n   */\n  get onUiVariantResolve(): EventDispatcher<UIManager, UIConditionContext> {\n    return this.events.onUiVariantResolve;\n  }\n\n  /**\n   * Fires after the UIManager has switched to a different UI variant.\n   * @returns {EventDispatcher<UIManager, ActiveUiChangedArgs>}\n   */\n  get onActiveUiChanged(): EventDispatcher<UIManager, ActiveUiChangedArgs> {\n    return this.events.onActiveUiChanged;\n  }\n\n  /**\n   * The current active {@link UIInstanceManager}.\n   */\n  get activeUi(): UIInstanceManager {\n    return this.currentUi;\n  }\n\n  /**\n   * Returns the list of all added markers in undefined order.\n   */\n  getTimelineMarkers(): TimelineMarker[] {\n    return this.config.metadata.markers;\n  }\n\n  /**\n   * Adds a marker to the timeline. Does not check for duplicates/overlaps at the `time`.\n   */\n  addTimelineMarker(timelineMarker: TimelineMarker): void {\n    this.config.metadata.markers.push(timelineMarker);\n    this.config.events.onUpdated.dispatch(this);\n  }\n\n  /**\n   * Removes a marker from the timeline (by reference) and returns `true` if the marker has\n   * been part of the timeline and successfully removed, or `false` if the marker could not\n   * be found and thus not removed.\n   */\n  removeTimelineMarker(timelineMarker: TimelineMarker): boolean {\n    if (ArrayUtils.remove(this.config.metadata.markers, timelineMarker) === timelineMarker) {\n      this.config.events.onUpdated.dispatch(this);\n      return true;\n    }\n\n    return false;\n  }\n\n  destroy() {\n    window.removeEventListener('isRadioModeActiveChange', this.handleIsRadioModeActiveChange);\n    window.removeEventListener('isRadioModeAvailableChange', this.handleIsRadioModeAvailableChange);\n  }\n}\n\nexport interface SeekPreviewArgs extends NoArgs {\n  /**\n   * The timeline position in percent where the event originates from.\n   */\n  position: number;\n  /**\n   * The timeline marker associated with the current position, if existing.\n   */\n  marker?: SeekBarMarker;\n}\n\n/**\n * Encapsulates functionality to manage a UI instance. Used by the {@link UIManager} to manage multiple UI instances.\n */\nexport class UIInstanceManager {\n  private playerWrapper: PlayerWrapper;\n  private ui: UIContainer;\n  private config: InternalUIConfig;\n  private subtitleSettingsManager: SubtitleSettingsManager;\n  protected spatialNavigation?: SpatialNavigation;\n\n  private events = {\n    onConfigured: new EventDispatcher<UIContainer, NoArgs>(),\n    onSeek: new EventDispatcher<SeekBar, NoArgs>(),\n    onSeekPreview: new EventDispatcher<SeekBar, SeekPreviewArgs>(),\n    onSeeked: new EventDispatcher<SeekBar, NoArgs>(),\n    onComponentShow: new EventDispatcher<Component<ComponentConfig>, NoArgs>(),\n    onComponentHide: new EventDispatcher<Component<ComponentConfig>, NoArgs>(),\n    onComponentViewModeChanged: new EventDispatcher<Component<ComponentConfig>, ViewModeChangedEventArgs>(),\n    onControlsShow: new EventDispatcher<UIContainer, NoArgs>(),\n    onPreviewControlsHide: new EventDispatcher<UIContainer, CancelEventArgs>(),\n    onControlsHide: new EventDispatcher<UIContainer, NoArgs>(),\n    onRelease: new EventDispatcher<UIContainer, NoArgs>(),\n  };\n\n  constructor(player: PlayerAPI, ui: UIContainer, config: InternalUIConfig, subtitleSettingsManager: SubtitleSettingsManager, spatialNavigation?: SpatialNavigation) {\n    this.playerWrapper = new PlayerWrapper(player);\n    this.ui = ui;\n    this.config = config;\n    this.subtitleSettingsManager = subtitleSettingsManager;\n    this.spatialNavigation = spatialNavigation;\n  }\n\n  getSubtitleSettingsManager() {\n    return this.subtitleSettingsManager;\n  }\n\n  getConfig(): InternalUIConfig {\n    return this.config;\n  }\n\n  getUI(): UIContainer {\n    return this.ui;\n  }\n\n  getPlayer(): PlayerAPI {\n    return this.playerWrapper.getPlayer();\n  }\n\n  /**\n   * Fires when the UI is fully configured and added to the DOM.\n   * @returns {EventDispatcher}\n   */\n  get onConfigured(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onConfigured;\n  }\n\n  /**\n   * Fires when a seek starts.\n   * @returns {EventDispatcher}\n   */\n  get onSeek(): EventDispatcher<SeekBar, NoArgs> {\n    return this.events.onSeek;\n  }\n\n  /**\n   * Fires when the seek timeline is scrubbed.\n   * @returns {EventDispatcher}\n   */\n  get onSeekPreview(): EventDispatcher<SeekBar, SeekPreviewArgs> {\n    return this.events.onSeekPreview;\n  }\n\n  /**\n   * Fires when a seek is finished.\n   * @returns {EventDispatcher}\n   */\n  get onSeeked(): EventDispatcher<SeekBar, NoArgs> {\n    return this.events.onSeeked;\n  }\n\n  /**\n   * Fires when a component is showing.\n   * @returns {EventDispatcher}\n   */\n  get onComponentShow(): EventDispatcher<Component<ComponentConfig>, NoArgs> {\n    return this.events.onComponentShow;\n  }\n\n  /**\n   * Fires when a component is hiding.\n   * @returns {EventDispatcher}\n   */\n  get onComponentHide(): EventDispatcher<Component<ComponentConfig>, NoArgs> {\n    return this.events.onComponentHide;\n  }\n\n  /**\n   * Fires when the UI controls are showing.\n   * @returns {EventDispatcher}\n   */\n  get onControlsShow(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onControlsShow;\n  }\n\n  /**\n   * Fires before the UI controls are hiding to check if they are allowed to hide.\n   * @returns {EventDispatcher}\n   */\n  get onPreviewControlsHide(): EventDispatcher<UIContainer, CancelEventArgs> {\n    return this.events.onPreviewControlsHide;\n  }\n\n  /**\n   * Fires when the UI controls are hiding.\n   * @returns {EventDispatcher}\n   */\n  get onControlsHide(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onControlsHide;\n  }\n\n  /**\n   * Fires when the UI controls are released.\n   * @returns {EventDispatcher}\n   */\n  get onRelease(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onRelease;\n  }\n\n  get onComponentViewModeChanged(): EventDispatcher<Component<ComponentConfig>, ViewModeChangedEventArgs> {\n    return this.events.onComponentViewModeChanged;\n  }\n\n  protected clearEventHandlers(): void {\n    this.playerWrapper.clearEventHandlers();\n\n    let events = <any>this.events; // avoid TS7017\n    for (let event in events) {\n      let dispatcher = <EventDispatcher<Object, Object>>events[event];\n      dispatcher.unsubscribeAll();\n    }\n  }\n}\n\n/**\n * Extends the {@link UIInstanceManager} for internal use in the {@link UIManager} and provides access to functionality\n * that components receiving a reference to the {@link UIInstanceManager} should not have access to.\n */\nclass InternalUIInstanceManager extends UIInstanceManager {\n\n  private configured: boolean;\n  private released: boolean;\n\n  getWrappedPlayer(): WrappedPlayer {\n    // TODO find a non-hacky way to provide the WrappedPlayer to the UIManager without exporting it\n    // getPlayer() actually returns the WrappedPlayer but its return type is set to Player so the WrappedPlayer does\n    // not need to be exported\n    return <WrappedPlayer>this.getPlayer();\n  }\n\n  configureControls(): void {\n    this.configureControlsTree(this.getUI());\n    this.configured = true;\n  }\n\n  isConfigured(): boolean {\n    return this.configured;\n  }\n\n  private configureControlsTree(component: Component<ComponentConfig>) {\n    let configuredComponents: Component<ComponentConfig>[] = [];\n\n    UIUtils.traverseTree(component, (component) => {\n      // First, check if we have already configured a component, and throw an error if we did. Multiple configuration\n      // of the same component leads to unexpected UI behavior. Also, a component that is in the UI tree multiple\n      // times hints at a wrong UI structure.\n      // We could just skip configuration in such a case and not throw an exception, but enforcing a clean UI tree\n      // seems like the better choice.\n      for (let configuredComponent of configuredComponents) {\n        if (configuredComponent === component) {\n          // Write the component to the console to simplify identification of the culprit\n          // (e.g. by inspecting the config)\n          if (console) {\n            console.error('Circular reference in UI tree', component);\n          }\n\n          // Additionally throw an error, because this case must not happen and leads to unexpected UI behavior.\n          throw Error('Circular reference in UI tree: ' + component.constructor.name);\n        }\n      }\n\n      component.initialize();\n      component.configure(this.getPlayer(), this);\n      configuredComponents.push(component);\n    });\n  }\n\n  releaseControls(): void {\n    // Do not call release methods if the components have never been configured; this can result in exceptions\n    if (this.configured) {\n      this.onRelease.dispatch(this.getUI());\n      this.releaseControlsTree(this.getUI());\n      this.configured = false;\n    }\n    this.spatialNavigation?.release();\n    this.released = true;\n  }\n\n  isReleased(): boolean {\n    return this.released;\n  }\n\n  private releaseControlsTree(component: Component<ComponentConfig>) {\n    component.release();\n\n    if (component instanceof Container) {\n      for (let childComponent of component.getComponents()) {\n        this.releaseControlsTree(childComponent);\n      }\n    }\n  }\n\n  clearEventHandlers(): void {\n    super.clearEventHandlers();\n  }\n}\n\n/**\n * Extended interface of the {@link Player} for use in the UI.\n */\nexport interface WrappedPlayer extends PlayerAPI {\n  /**\n   * Fires an event on the player that targets all handlers in the UI but never enters the real player.\n   * @param event the event to fire\n   * @param data data to send with the event\n   */\n  fireEventInUI(event: PlayerEvent, data: {}): void;\n}\n\n/**\n * Wraps the player to track event handlers and provide a simple method to remove all registered event\n * handlers from the player.\n *\n * @category Utils\n */\nexport class PlayerWrapper {\n\n  private player: PlayerAPI;\n  private wrapper: WrappedPlayer;\n\n  private eventHandlers: { [eventType: string]: PlayerEventCallback[]; } = {};\n\n  constructor(player: PlayerAPI) {\n    this.player = player;\n\n    // Collect all members of the player (public API methods and properties of the player)\n    const objectProtoPropertyNames = Object.getOwnPropertyNames(Object.getPrototypeOf({}));\n    const namesToIgnore = ['constructor', ...objectProtoPropertyNames];\n    const members = getAllPropertyNames(player).filter(name => namesToIgnore.indexOf(name) === -1);\n    // Split the members into methods and properties\n    let methods = <any[]>[];\n    let properties = <any[]>[];\n\n    for (let member of members) {\n      if (typeof (<any>player)[member] === 'function') {\n        methods.push(member);\n      } else {\n        properties.push(member);\n      }\n    }\n\n    // Create wrapper object\n    let wrapper = <any>{};\n\n    // Add function wrappers for all API methods that do nothing but calling the base method on the player\n    for (let method of methods) {\n      wrapper[method] = function() {\n        // console.log('called ' + member); // track method calls on the player\n        return (<any>player)[method].apply(player, arguments);\n      };\n    }\n\n    // Add all public properties of the player to the wrapper\n    for (let property of properties) {\n      // Get an eventually existing property descriptor to differentiate between plain properties and properties with\n      // getters/setters.\n      const propertyDescriptor = ((target: PlayerAPI) => {\n        while (target) {\n          const propertyDescriptor = Object.getOwnPropertyDescriptor(target, property);\n          if (propertyDescriptor) {\n            return propertyDescriptor;\n          }\n          // Check if the PropertyDescriptor exists on a child prototype in case we have an inheritance of the player\n          target = Object.getPrototypeOf(target);\n        }\n      })(player);\n\n      // If the property has getters/setters, wrap them accordingly...\n      if (propertyDescriptor && (propertyDescriptor.get || propertyDescriptor.set)) {\n        Object.defineProperty(wrapper, property, {\n          get: () => propertyDescriptor.get.call(player),\n          set: (value: any) => propertyDescriptor.set.call(player, value),\n        });\n      }\n      // ... else just transfer the property to the wrapper\n      else {\n        wrapper[property] = (<any>player)[property];\n      }\n    }\n\n    // Explicitly add a wrapper method for 'on' that adds added event handlers to the event list\n    wrapper.on = (eventType: PlayerEvent, callback: PlayerEventCallback) => {\n      player.on(eventType, callback);\n\n      if (!this.eventHandlers[eventType]) {\n        this.eventHandlers[eventType] = [];\n      }\n\n      this.eventHandlers[eventType].push(callback);\n\n      return wrapper;\n    };\n\n    // Explicitly add a wrapper method for 'off' that removes removed event handlers from the event list\n    wrapper.off = (eventType: PlayerEvent, callback: PlayerEventCallback) => {\n      player.off(eventType, callback);\n\n      if (this.eventHandlers[eventType]) {\n        ArrayUtils.remove(this.eventHandlers[eventType], callback);\n      }\n\n      return wrapper;\n    };\n\n    wrapper.fireEventInUI = (event: PlayerEvent, data: {}) => {\n      if (this.eventHandlers[event]) { // check if there are handlers for this event registered\n        // Extend the data object with default values to convert it to a {@link PlayerEventBase} object.\n        let playerEventData = <PlayerEventBase>Object.assign({}, {\n          timestamp: Date.now(),\n          type: event,\n          // Add a marker property so the UI can detect UI-internal player events\n          uiSourced: true,\n        }, data);\n\n        // Execute the registered callbacks\n        for (let callback of this.eventHandlers[event]) {\n          callback(playerEventData);\n        }\n      }\n    };\n\n    this.wrapper = <WrappedPlayer>wrapper;\n  }\n\n  /**\n   * Returns a wrapped player object that can be used on place of the normal player object.\n   * @returns {WrappedPlayer} a wrapped player\n   */\n  getPlayer(): WrappedPlayer {\n    return this.wrapper;\n  }\n\n  /**\n   * Clears all registered event handlers from the player that were added through the wrapped player.\n   */\n  clearEventHandlers(): void {\n    try {\n      // Call the player API to check if the instance is still valid or already destroyed.\n      // This can be any call throwing the PlayerAPINotAvailableError when the player instance is destroyed.\n      this.player.getSource();\n    } catch (error) {\n      if (error instanceof this.player.exports.PlayerAPINotAvailableError) {\n        // We have detected that the player instance is already destroyed, so we clear the event handlers to avoid\n        // event handler unsubscription attempts (which would result in PlayerAPINotAvailableError errors).\n        this.eventHandlers = {};\n      }\n    }\n\n    for (let eventType in this.eventHandlers) {\n      for (let callback of this.eventHandlers[eventType]) {\n        this.player.off(eventType as PlayerEvent, callback);\n      }\n    }\n  }\n}\n\nfunction getAllPropertyNames(target: Object): string[] {\n  let names: string[] = [];\n\n  while (target) {\n    const newNames = Object.getOwnPropertyNames(target).filter(name => names.indexOf(name) === -1);\n    names = names.concat(newNames);\n    // go up prototype chain\n    target = Object.getPrototypeOf(target);\n  }\n\n  return names;\n}\n","import {Component, ComponentConfig} from './components/component';\nimport {Container} from './components/container';\n\n/**\n * @category Utils\n */\nexport namespace UIUtils {\n  export interface TreeTraversalCallback {\n    (component: Component<ComponentConfig>, parent?: Component<ComponentConfig>): void;\n  }\n\n  export function traverseTree(component: Component<ComponentConfig>, visit: TreeTraversalCallback): void {\n    let recursiveTreeWalker = (component: Component<ComponentConfig>, parent?: Component<ComponentConfig>) => {\n      visit(component, parent);\n\n      // If the current component is a container, visit it's children\n      if (component instanceof Container) {\n        for (let childComponent of component.getComponents()) {\n          recursiveTreeWalker(childComponent, component);\n        }\n      }\n    };\n\n    // Walk and configure the component tree\n    recursiveTreeWalker(component);\n  }\n\n  // From: https://github.com/nfriend/ts-keycode-enum/blob/master/Key.enum.ts\n  export enum KeyCode {\n    LeftArrow = 37,\n    UpArrow = 38,\n    RightArrow = 39,\n    DownArrow = 40,\n    Space = 32,\n    End = 35,\n    Home = 36,\n  }\n}\n","import { Event, EventDispatcher } from './eventdispatcher';\nimport { PlayerAPI } from 'bitmovin-player';\n\nexport interface VolumeSettingChangedArgs {\n  volume: number;\n  muted: boolean;\n}\n\n/**\n * Can be used to centrally manage and control the volume and mute state of the player from multiple components.\n */\nexport class VolumeController {\n\n  private static readonly issuerName = 'ui-volumecontroller';\n\n  private readonly events = {\n    onChanged: new EventDispatcher<VolumeController, VolumeSettingChangedArgs>(),\n  };\n\n  private storedVolume: number;\n\n  constructor(private readonly player: PlayerAPI) {\n    this.storeVolume();\n\n    const handler = () => {\n      this.onChangedEvent();\n    };\n\n    player.on(player.exports.PlayerEvent.SourceLoaded, handler);\n    player.on(player.exports.PlayerEvent.VolumeChanged, handler);\n    player.on(player.exports.PlayerEvent.Muted, handler);\n    player.on(player.exports.PlayerEvent.Unmuted, handler);\n  }\n\n  setVolume(volume: number): void {\n    this.player.setVolume(volume, VolumeController.issuerName);\n  }\n\n  getVolume(): number {\n    return this.player.getVolume();\n  }\n\n  setMuted(muted: boolean): void {\n    if (muted) {\n      this.player.mute(VolumeController.issuerName);\n    } else {\n      this.player.unmute(VolumeController.issuerName);\n    }\n  }\n\n  toggleMuted(): void {\n    if (this.isMuted() || this.getVolume() === 0) {\n      // Unmuting from the mute or zero-volume state recalls the previously saved volume setting. Setting the\n      // volume automatically unmutes the player in v7.\n      this.recallVolume();\n    } else {\n      this.setMuted(true);\n    }\n  }\n\n  isMuted(): boolean {\n    return this.player.isMuted();\n  }\n\n  /**\n   * Stores (saves) the current volume so it can later be restored with {@link recallVolume}.\n   */\n  storeVolume(): void {\n    this.storedVolume = this.getVolume();\n  }\n\n  /**\n   * Recalls (sets) the volume previously stored with {@link storeVolume}.\n   */\n  recallVolume(): void {\n    this.setMuted(this.storedVolume === 0);\n    this.setVolume(this.storedVolume);\n  }\n\n  startTransition(): VolumeTransition {\n    return new VolumeTransition(this);\n  }\n\n  onChangedEvent() {\n    const playerMuted = this.isMuted();\n    const playerVolume = this.getVolume();\n\n    const uiMuted = playerMuted || playerVolume === 0;\n    const uiVolume = playerMuted ? 0 : playerVolume;\n\n    this.storeVolume();\n\n    this.events.onChanged.dispatch(this, { volume: uiVolume, muted: uiMuted });\n  }\n\n  /**\n   * Gets the event that is fired when the volume settings have changed.\n   */\n  get onChanged(): Event<VolumeController, VolumeSettingChangedArgs> {\n    return this.events.onChanged.getEvent();\n  }\n}\n\nexport class VolumeTransition {\n\n  constructor(private controller: VolumeController) {\n    // Store the volume at the beginning of a volume change so we can recall it later in case we set the volume to\n    // zero and actually mute the player.\n    controller.storeVolume();\n  }\n\n  update(volume: number): void {\n    // Update the volume while transitioning so the user has a \"live preview\" of the desired target volume\n    this.controller.setMuted(false);\n    this.controller.setVolume(volume);\n  }\n\n  finish(volume: number): void {\n    if (volume === 0) {\n      // When the volume is zero we essentially mute the volume so we recall the volume from the beginning of the\n      // transition and mute the player instead. Recalling is necessary to return to the actual audio volume\n      // when unmuting.\n      // We must first recall the volume and then mute, because recalling sets the volume on the player\n      // and setting a player volume > 0 unmutes the player in v7.\n      this.controller.recallVolume();\n      this.controller.setMuted(true);\n    } else {\n      this.controller.setMuted(false);\n      this.controller.setVolume(volume);\n      this.controller.storeVolume();\n    }\n  }\n}","import { SubtitleRegionContainer, SubtitleLabel } from './components/subtitleoverlay';\nimport { VTTProperties, VTTRegionProperties } from 'bitmovin-player/types/subtitles/vtt/API';\nimport { DOM, Size } from './dom';\n\n// Our default height of a line\nconst lineHeight = 28;\n\n// Default relative line height\nconst lineHeightPercent = 5;\nlet lineCount: number = 1;\n\nconst defaultLineNumber = 21; // Our default amount of lines\n\nenum Direction {\n  Top = 'top',\n  Bottom = 'bottom',\n  Left = 'left',\n  Right = 'right',\n}\n\nenum VttVerticalWriting {\n  GrowingRight = 'lr',\n  GrowingLeft = 'rl',\n}\n\ntype VerticalWritingDirection = Direction.Left | Direction.Right;\n\nconst DirectionPair = new Map<Direction, Direction>([\n  [Direction.Top, Direction.Bottom],\n  [Direction.Bottom, Direction.Top],\n  [Direction.Left, Direction.Right],\n  [Direction.Right, Direction.Left],\n]);\n\n/**\n * Sets the default standardized styles for the Cue Box\n * https://w3.org/TR/webvtt1/#applying-css-properties\n */\nconst setDefaultVttStyles = (cueContainerDom: DOM, vtt: VTTProperties) => {\n  if (vtt.region) {\n    cueContainerDom.css('position', 'relative');\n    cueContainerDom.css('unicode-bidi', 'plaintext');\n  } else {\n    cueContainerDom.css('position', 'absolute');\n    cueContainerDom.css('overflow-wrap', 'break-word');\n    cueContainerDom.css('overflow', 'hidden');\n    cueContainerDom.css('flex-flow', 'column');\n  }\n  cueContainerDom.css('display', 'inline-flex');\n};\n\n/**\n * Align the Cue Box's line\n * https://w3.org/TR/webvtt1/#webvtt-cue-line-alignment\n */\nconst setVttLineAlign = (\n  cueContainerDom: DOM,\n  { lineAlign }: VTTProperties,\n  direction: Direction,\n  relativeCueBoxPosition: number) => {\n  switch (lineAlign) {\n    case 'center':\n      setCssForCenterLineAlign(\n        cueContainerDom, direction, relativeCueBoxPosition);\n      break;\n    case 'end':\n      setCssForEndLineAlign(\n        cueContainerDom, direction, relativeCueBoxPosition);\n  }\n};\n\n/**\n * Defines the line positioning of the Cue Box\n * https://w3.org/TR/webvtt1/#webvtt-cue-line\n */\nconst setVttLine = (\n  cueContainerDom: DOM,\n  vtt: VTTProperties,\n  direction: Direction,\n  subtitleOverLaySize: Size,\n) => {\n  const overlayReferenceEdge = DirectionPair.get(direction);\n  if (vtt.line === 'auto' && vtt.vertical) {\n    cueContainerDom.css(overlayReferenceEdge, '0');\n    return;\n  }\n  if (vtt.line === 'auto' && !vtt.vertical) {\n    return;\n  }\n\n  let relativeLinePosition = parseFloat(vtt.line as string);\n\n  if (vtt.snapToLines) {\n    let targetLine = Number(vtt.line);\n    if (targetLine < 0) {\n      targetLine = defaultLineNumber + targetLine;\n    }\n\n    const lineHeight = subtitleOverLaySize.height / defaultLineNumber;\n    const absoluteLinePosition = lineHeight * targetLine;\n    relativeLinePosition = (100 * absoluteLinePosition) / subtitleOverLaySize.height;\n  }\n\n  if (vtt.lineAlign !== 'end')\n    cueContainerDom.css(\n      overlayReferenceEdge, `${relativeLinePosition}%`);\n  setVttLineAlign(cueContainerDom, vtt, direction, relativeLinePosition);\n};\n\n/**\n * Defines the writing direction of the Cue Box\n * https://w3.org/TR/webvtt1/#webvtt-cue-writing-direction\n */\nconst setVttWritingDirectionAndCueBoxPositioning = (\n  cueContainerDom: DOM, vtt: VTTProperties,\n  subtitleOverlaySize: Size,\n) => {\n  switch (vtt.vertical) {\n  case '':\n    cueContainerDom.css('writing-mode', 'horizontal-tb');\n    cueContainerDom.css(Direction.Bottom, '0');\n    setVttLine(cueContainerDom, vtt, Direction.Bottom, subtitleOverlaySize);\n    break;\n  case VttVerticalWriting.GrowingRight:\n    setCueBoxPositionForVerticalWriting(\n      cueContainerDom, Direction.Right, vtt, subtitleOverlaySize);\n    break;\n  case VttVerticalWriting.GrowingLeft:\n    setCueBoxPositionForVerticalWriting(\n      cueContainerDom, Direction.Left, vtt, subtitleOverlaySize);\n    break;\n  }\n};\n\nconst setCueBoxPositionForVerticalWriting = (\n  cueContainerDom: DOM,\n  direction: VerticalWritingDirection,\n  vtt: VTTProperties,\n  subtitleOverlaySize: Size,\n) => {\n    const writingMode = direction === Direction.Right ?\n      'vertical-lr' : 'vertical-rl';\n\n    cueContainerDom.css('writing-mode', writingMode);\n    cueContainerDom.css(Direction.Top, '0');\n    setVttLine(cueContainerDom, vtt, direction, subtitleOverlaySize);\n};\n\n/**\n * Defines the Cue position alignment\n * https://w3.org/TR/webvtt1/#webvtt-cue-position-alignment\n */\nconst setVttPositionAlign = (cueContainerDom: DOM, vtt: VTTProperties, direction: Direction) => {\n  // https://www.w3.org/TR/webvtt1/#webvtt-cue-position\n  if (vtt.position === 'auto') {\n    cueContainerDom.css(direction, '0');\n  } else {\n    switch (vtt.positionAlign) {\n      case 'line-left':\n        cueContainerDom.css(direction, `${vtt.position}%`);\n        cueContainerDom.css(DirectionPair.get(direction), 'auto');\n        cueContainerDom.css('justify-content', 'flex-start');\n        break;\n      case 'center':\n        cueContainerDom.css(direction, `${vtt.position - vtt.size / 2}%`);\n        cueContainerDom.css(DirectionPair.get(direction), 'auto');\n        cueContainerDom.css('justify-content', 'center');\n        break;\n      case 'line-right':\n        cueContainerDom.css(direction, 'auto');\n        cueContainerDom.css(DirectionPair.get(direction), `${100 - vtt.position}%`);\n        cueContainerDom.css('justify-content', 'flex-end');\n        break;\n      default:\n        cueContainerDom.css(direction, `${vtt.position}%`);\n        cueContainerDom.css('justify-content', 'flex-start');\n    }\n  }\n};\n\nconst countLines = (innerHtml: string) =>\n  innerHtml.split('<br />').length;\n\nconst setCssForCenterLineAlign = (\n  cueContainerDom: DOM,\n  direction: Direction,\n  relativeCueBoxPosition: number) => {\n  switch (direction) {\n    case Direction.Bottom:\n      cueContainerDom.css('transform', 'translateY(-50%)');\n      break;\n    case Direction.Left:\n      cueContainerDom.css('transform', 'translateX(50%)');\n      break;\n    case Direction.Right:\n      cueContainerDom.css('transform', 'translateX(-50%)');\n      break;\n  }\n};\n\nconst setCssForEndLineAlign = (\n  cueContainerDom: DOM,\n  direction: Direction,\n  offset: number) => {\n      const opositeToOverlayReferenceEdge = direction;\n      cueContainerDom.css(opositeToOverlayReferenceEdge, `${100 - offset}%`);\n};\n\n/**\n * @category Utils\n */\nexport namespace VttUtils {\n  export const setVttCueBoxStyles = (\n    cueContainer: SubtitleLabel,\n    subtitleOverlaySize: Size,\n  ) => {\n    const vtt = cueContainer.vtt;\n    const cueContainerDom = cueContainer.getDomElement();\n\n\n    setDefaultVttStyles(cueContainerDom, vtt);\n\n    lineCount = countLines(cueContainer.getText());\n    setVttWritingDirectionAndCueBoxPositioning(cueContainerDom, vtt, subtitleOverlaySize);\n\n    // https://w3.org/TR/webvtt1/#webvtt-cue-text-alignment\n    const textAlign = vtt.align === 'middle' ? 'center' : vtt.align;\n    cueContainerDom.css('text-align', textAlign);\n\n    // https://w3.org/TR/webvtt1/#webvtt-cue-size\n    const containerSize = vtt.size;\n    if (vtt.vertical === '') {\n      cueContainerDom.css('width', `${containerSize}%`);\n      setVttPositionAlign(cueContainerDom, vtt, Direction.Left);\n    } else {\n      cueContainerDom.css('height', `${containerSize}%`);\n      setVttPositionAlign(cueContainerDom, vtt, Direction.Top);\n    }\n  };\n\n  /** https://www.w3.org/TR/webvtt1/#regions\n   *  https://www.speechpad.com/captions/webvtt#toc_16\n   */\n  export const setVttRegionStyles = (\n    regionContainer: SubtitleRegionContainer,\n    region: VTTRegionProperties,\n    overlaySize: Size,\n  ) => {\n    const regionContainerDom = regionContainer.getDomElement();\n    const regionPositionX = overlaySize.width * region.viewportAnchorX / 100 - ((overlaySize.width * region.width / 100) * region.regionAnchorX / 100);\n    const regionPositionY = overlaySize.height * region.viewportAnchorY / 100 - ((region.lines * lineHeight) * region.regionAnchorY / 100);\n    regionContainerDom.css('position', 'absolute');\n    regionContainerDom.css('overflow', 'hidden');\n    regionContainerDom.css('width', `${region.width}%`);\n    regionContainerDom.css(Direction.Left, `${regionPositionX}px`);\n    regionContainerDom.css(Direction.Right, 'unset');\n    regionContainerDom.css(Direction.Top, `${regionPositionY}px`);\n    regionContainerDom.css(Direction.Bottom, 'unset');\n    regionContainerDom.css('height', `${region.lines * lineHeight}px`);\n  };\n}\n"]}