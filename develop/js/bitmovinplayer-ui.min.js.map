{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/custom/ts/components/gobackbutton.ts","src/custom/ts/components/playbackjumpbutton.ts","src/custom/ts/components/playbackjumpoverlay.ts","src/custom/ts/components/quanteecconsumptions.ts","src/custom/ts/components/radiomode/radiomodetogglebutton.ts","src/ts/arrayutils.ts","src/ts/audiotrackutils.ts","src/ts/browserutils.ts","src/ts/components/adclickoverlay.ts","src/ts/components/admessagelabel.ts","src/ts/components/adskipbutton.ts","src/ts/components/airplaytogglebutton.ts","src/ts/components/audioqualityselectbox.ts","src/ts/components/audiotracklistbox.ts","src/ts/components/audiotrackselectbox.ts","src/ts/components/bufferingoverlay.ts","src/ts/components/button.ts","src/ts/components/caststatusoverlay.ts","src/ts/components/casttogglebutton.ts","src/ts/components/castuicontainer.ts","src/ts/components/clickoverlay.ts","src/ts/components/closebutton.ts","src/ts/components/component.ts","src/ts/components/container.ts","src/ts/components/controlbar.ts","src/ts/components/ecomodecontainer.ts","src/ts/components/ecomodetogglebutton.ts","src/ts/components/errormessageoverlay.ts","src/ts/components/fullscreentogglebutton.ts","src/ts/components/hugeplaybacktogglebutton.ts","src/ts/components/hugereplaybutton.ts","src/ts/components/itemselectionlist.ts","src/ts/components/label.ts","src/ts/components/listbox.ts","src/ts/components/listselector.ts","src/ts/components/metadatalabel.ts","src/ts/components/pictureinpicturetogglebutton.ts","src/ts/components/playbackspeedselectbox.ts","src/ts/components/playbacktimelabel.ts","src/ts/components/playbacktogglebutton.ts","src/ts/components/playbacktoggleoverlay.ts","src/ts/components/quickseekbutton.ts","src/ts/components/recommendationoverlay.ts","src/ts/components/replaybutton.ts","src/ts/components/seekbar.ts","src/ts/components/seekbarbufferlevel.ts","src/ts/components/seekbarcontroller.ts","src/ts/components/seekbarlabel.ts","src/ts/components/selectbox.ts","src/ts/components/settingspanel.ts","src/ts/components/settingspanelitem.ts","src/ts/components/settingspanelpage.ts","src/ts/components/settingspanelpagebackbutton.ts","src/ts/components/settingspanelpagenavigatorbutton.ts","src/ts/components/settingspanelpageopenbutton.ts","src/ts/components/settingstogglebutton.ts","src/ts/components/spacer.ts","src/ts/components/subtitlelistbox.ts","src/ts/components/subtitleoverlay.ts","src/ts/components/subtitleselectbox.ts","src/ts/components/subtitlesettings/backgroundcolorselectbox.ts","src/ts/components/subtitlesettings/backgroundopacityselectbox.ts","src/ts/components/subtitlesettings/characteredgeselectbox.ts","src/ts/components/subtitlesettings/fontcolorselectbox.ts","src/ts/components/subtitlesettings/fontfamilyselectbox.ts","src/ts/components/subtitlesettings/fontopacityselectbox.ts","src/ts/components/subtitlesettings/fontsizeselectbox.ts","src/ts/components/subtitlesettings/subtitlesettingselectbox.ts","src/ts/components/subtitlesettings/subtitlesettingslabel.ts","src/ts/components/subtitlesettings/subtitlesettingsmanager.ts","src/ts/components/subtitlesettings/subtitlesettingspanelpage.ts","src/ts/components/subtitlesettings/subtitlesettingsresetbutton.ts","src/ts/components/subtitlesettings/windowcolorselectbox.ts","src/ts/components/subtitlesettings/windowopacityselectbox.ts","src/ts/components/timelinemarkershandler.ts","src/ts/components/titlebar.ts","src/ts/components/togglebutton.ts","src/ts/components/tvnoisecanvas.ts","src/ts/components/uicontainer.ts","src/ts/components/videoqualityselectbox.ts","src/ts/components/volumecontrolbutton.ts","src/ts/components/volumeslider.ts","src/ts/components/volumetogglebutton.ts","src/ts/components/vrtogglebutton.ts","src/ts/components/watermark.ts","src/ts/demofactory.ts","src/ts/dom.ts","src/ts/errorutils.ts","src/ts/eventdispatcher.ts","src/ts/focusvisibilitytracker.ts","src/ts/groupplaybackapi.ts","src/ts/guid.ts","src/ts/imageloader.ts","src/ts/localization/i18n.ts","src/ts/localization/languages/de.json","src/ts/localization/languages/en.json","src/ts/localization/languages/es.json","src/ts/localization/languages/nl.json","src/ts/main.ts","src/ts/mobilev3playerapi.ts","src/ts/playerutils.ts","src/ts/spatialnavigation/ListNavigationGroup.ts","src/ts/spatialnavigation/gethtmlelementsfromcomponents.ts","src/ts/spatialnavigation/keymap.ts","src/ts/spatialnavigation/navigationalgorithm.ts","src/ts/spatialnavigation/navigationgroup.ts","src/ts/spatialnavigation/nodeeventsubscriber.ts","src/ts/spatialnavigation/rootnavigationgroup.ts","src/ts/spatialnavigation/seekbarhandler.ts","src/ts/spatialnavigation/spatialnavigation.ts","src/ts/spatialnavigation/typeguards.ts","src/ts/spatialnavigation/types.ts","src/ts/storageutils.ts","src/ts/stringutils.ts","src/ts/subtitleutils.ts","src/ts/timeout.ts","src/ts/uifactory.ts","src/ts/uimanager.ts","src/ts/uiutils.ts","src/ts/volumecontroller.ts","src/ts/vttutils.ts"],"names":["f","g","exports","module","define","amd","window","global","self","this","bitmovin","playerui","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_super","button_1","GoBackButton","Button","__extends","prototype","configure","player","uimanager","_this","onClick","subscribe","customMessageHandler","sendAsynchronous","on","PlayerEvent","ViewModeChanged","getViewMode","hide","show","config","error","defaultConfig","cssClasses","text","ariaLabel","mergeConfig","i18n_1","playerutils_1","PlaybackJumpButtons","liveStreamDetector","PlayerUtils","LiveStreamDetector","onLiveChanged","sender","args","isLive","onControlsShow","onControlsHide","detect","currentTime","getCurrentTime","duration","getDuration","newTime","skipTime","Math","max","min","seek","cssClass","PlaybackForwardButton","__assign","i18n","getLocalizer","PlaybackRewindButton","container_1","playbackjumpbutton_1","PlaybackJumpControlsOverlay","Container","forwardButton","rewindButton","components","QuanteecConsumptions","isQuanteecDisplayed","togglebutton_1","RadioModeToggleButton","ToggleButton","initialState","active","JSON","stringify","activated","isRadioModeActive","ArrayUtils","remove","array","item","index","indexOf","splice","AudioTrackSwitchHandler","element","addAudioTrack","event","audioTrack","track","listElement","hasItem","id","addItem","label","removeAudioTrack","removeItem","selectCurrentAudioTrack","currentAudioTrack","getAudio","selectItem","refreshAudioTracks","audioTracks","getAvailableAudio","synchronizeItems","map","key","bindSelectionEvent","bindPlayerEvents","onItemSelected","_","value","setAudio","AudioChanged","SourceUnloaded","PeriodSwitched","AudioAdded","AudioRemoved","getConfig","events","onUpdated","BrowserUtils","Object","defineProperty","windowExists","navigator","userAgent","test","isHisense","platform","includes","maxTouchPoints","msMaxTouchPoints","clickoverlay_1","AdClickOverlay","ClickOverlay","adFinishedHandler","setUrl","clickThroughCallback","AdStarted","ad","clickThroughUrl","clickThroughUrlOpened","AdFinished","AdSkipped","AdError","pause","acceptsTouchWithUiHidden","label_1","stringutils_1","AdMessageLabel","Label","adEndHandler","off","TimeChanged","updateMessageHandler","setText","StringUtils","replaceAdMessagePlaceholders","performLocalization","uiConfig","message","AdSkipButton","updateSkipMessageHandler","untilSkippableMessage","skippableMessage","skipOffset","disable","enable","skippableAfter","ads","skip","AirPlayToggleButton","airPlayAvailableHandler","isAirplayAvailable","showAirplayTargetPicker","console","log","airPlayChangedHandler","isAirplayActive","AirplayAvailable","AirplayChanged","selectbox_1","AudioQualitySelectBox","SelectBox","updateAudioQualities","audioQualities","getAvailableAudioQualities","clearItems","_i","audioQualities_1","audioQuality","selectCurrentAudioQuality","getAudioQuality","setAudioQuality","AudioQualityChanged","AudioQualityAdded","AudioQualityRemoved","listbox_1","audiotrackutils_1","AudioTrackListBox","ListBox","AudioTrackSelectBox","component_1","timeout_1","BufferingOverlay","showOverlay","overlayShowTimeout","start","hideOverlay","clear","Timeout","showDelayMs","StallStarted","StallEnded","Play","Playing","Paused","Seek","Seeked","TimeShift","TimeShifted","isStalled","indicators","Component","tag","role","hidden","dom_1","eventdispatcher_1","toDomElement","buttonElementAttributes","aria-label","class","getCssClasses","type","aria-pressed","tabindex","tabIndex","toString","buttonElement","DOM","append","prefixCss","html","onClickEvent","getDomElement","find","buttonEvents","dispatch","getEvent","EventDispatcher","CastStatusOverlay","CastWaitingForDevice","castDeviceName","castPayload","deviceName","statusLabel","CastStarted","CastStopped","CastToggleButton","isCastAvailable","isCasting","castStop","castVideo","uicontainer_1","CastUIContainer","UIContainer","isUiShown","showUi","castUiHideTimeout","hideDelay","showUiPermanently","showUiWithTimeout","isPlaying","release","initialize","url","data","open","getUrl","undefined","CloseButton","target","ViewMode","guid_1","disabled","isHidden","isDisabled","onShow","onComponentShow","onHide","onComponentHide","onViewModeChanged","onComponentViewModeChanged","onHoverChangedEvent","hasDomElement","Boolean","setAriaLabel","setAriaAttr","name","attr","concat","defaults","base","assign","css","join","trim","cssClassOrId","cssPrefix","addClass","CLASS_HIDDEN","onHideEvent","removeClass","onShowEvent","isShown","toggleHidden","CLASS_DISABLED","onDisabledEvent","onEnabledEvent","isEnabled","isHovered","hovered","componentEvents","onEnabled","onDisabled","onViewModeChangedEvent","mode","viewMode","onHoverChanged","Guid","next","Temporary","arrayutils_1","addComponent","component","push","componentsToAdd","removeComponent","componentsToRemove","getComponents","removeComponents","_a","slice","updateComponents","shift","innerContainerElement","containerElement","innerContainer","initialComponent","suspendHideTimeout","resumeHideTimeout","trackComponentViewMode","Persistent","componentsInPersistentViewMode","uiutils_1","spacer_1","browserutils_1","settingspanel_1","ControlBar","hoverStackCount","isSettingsPanelShown","disableAutoHideWhenHovered","isTouchSupported","UIUtils","traverseTree","Spacer","isMobile","SettingsPanel","onPreviewControlsHide","cancel","ecomodetogglebutton_1","settingspanelitem_1","EcoModeContainer","setOnToggleCallback","callback","onToggleCallback","SegmentPlayback","segment","bitrate","frameRate","maxHeight","maxBitrate","maxWidth","currentEnergyKwh","maxEnergyKwh","mimeType","height","mediaInfo","width","_b","getMaxQualityAvailable","getAvailableVideoQualities","calculateEnergyConsumption","ecoModeSavedEmissionsItem","updateSavedEmissions","emissionsSavedLabel","currentEnergyConsuption","maxEnergyConsuption","currentEnergyEmission","maxEnergyEmisson","savedEmissons","toFixed","fps","availableVideoQualities","sortedQualities","sort","b","ecoModeToggleButton","EcoModeToggleButton","labelEcoMode","for","ecoModeToggleButtonItem","SettingsPanelItem","onToggleOn","onToggleOff","areAdaptationApisAvailable","toggle","enableEcoMode","setVideoQuality","disableEcoMode","VideoQualityChanged","quality","targetQuality","isGetConfigAvailable","adaptation","isSetConfigAvailable","setConfig","adaptationConfig","codec","resolution","maxSelectableVideoHeight","limitToPlayerSize","onClass","offClass","tvnoisecanvas_1","errorutils_1","mobilev3playerapi_1","gobackbutton_1","ErrorMessageOverlay","errorEventHandler","handleErrorMessage","customizedMessage","errorMessages","customMessage","messages","display","isMobileV3PlayerAPI","MobileV3PlayerEvent","PlayerError","ErrorUtils","defaultMobileV3ErrorMessageTranslator","SourceError","defaultWebErrorMessageTranslator","SourceLoaded","tvNoiseBackground","stop","errorMessage","errorLabel","TvNoiseCanvas","FullscreenToggleButton","fullscreenStateHandler","Fullscreen","fullscreenAvailabilityChangedHandler","isFullScreenAvailable","isViewModeAvailable","ViewModeAvailabilityChanged","targetViewMode","Inline","setViewMode","playbacktogglebutton_1","HugePlaybackToggleButton","PlaybackToggleButton","togglePlayback","isPlayInitiated","play","toggleFullscreen","suppressPlayButtonTransitionAnimation","setTransitionAnimationsEnabled","onToggle","subscribeOnce","firstPlay","enterFullscreenOnInitialPlayback","clickTime","doubleClickTime","isAutoplayEnabled","now","Date","setTimeout","Warning","WarningCode","PLAYBACK_COULD_NOT_BE_STARTED","playback","autoplay","isAutoplayUpcoming","getSource","enabled","noTransitionAnimationsClass","hasClass","HugeReplayButton","listselector_1","ItemSelectionList","ListSelector","isActive","items","updateDomItems","selectedValue","selectedListItem","empty","listItem","CLASS_SELECTED","deselectItem","this_1","String","onItemSelectedEvent","onItemAddedEvent","selectedItem","onItemRemovedEvent","tagName","labelElement","localizedText","onTextChangedEvent","getText","clearText","isEmpty","labelEvents","onTextChanged","onItemAdded","addListBoxDomItem","onItemRemoved","removeListBoxDomItem","refreshSelectedItem","listBoxElement","createListBoxDomItems","buildListBoxItemButton","ListBoxItemButton","getComponentForKey","c","listBoxItemButton_1","newItem","getItemForKey","handleSelectionChange","getItemIndex","parseInt","getItems","sortedInsert","filter","translator","findIndex","entry","getSelectedItem","newItems","forEach","items_1","itemCount","keys","listSelectorEvents","MetadataLabelContent","MetadataLabel","init","content","Title","uiconfig","metadata","title","Description","description","toLowerCase","PictureInPictureToggleButton","pictureInPictureStateHandler","PictureInPicture","pictureInPictureAvailabilityChangedHandler","isPictureInPictureAvailable","PlaybackSpeedSelectBox","setDefaultValue","playbackSpeed","getPlaybackSpeed","setSpeed","addDefaultItems","setPlaybackSpeed","parseFloat","PlaybackSpeedChanged","speed","customItems","defaultPlaybackSpeeds","PlaybackTimeLabelMode","PlaybackTimeLabel","minWidth","min-width","updateTimeFormatBasedOnDuration","live","liveCssClass","liveEdgeCssClass","liveClickHandler","timeShift","updateLiveTimeshiftState","isTimeshifted","isTimeshiftAvailable","getTimeShift","getMaxTimeShift","isPaused","playbackTimeHandler","hideInLivePlayback","unsubscribe","Infinity","setTime","getCurrentTimeRelativeToSeekableRange","timeFormat","abs","FORMAT_HHMMSS","FORMAT_MMSS","Ready","playbackSeconds","durationSeconds","secondsToTime","totalTime","timeLabelMode","CurrentTime","TotalTime","CurrentAndTotalTime","RemainingTime","remainingTime","setTimeFormat","handleClickEvent","playbackStateHandler","isSeeking","updateLiveState","isTimeShiftAvailable","CLASS_STOPTOGGLE","timeShiftDetector","PlaybackFinished","TimeShiftAvailabilityDetector","onTimeShiftAvailabilityChanged","onSeek","onSeeked","onAriaLabel","offAriaLabel","hugeplaybacktogglebutton_1","PlaybackToggleOverlay","playbackToggleButton","QuickSeekButton","switchVisibility","hasTimeShift","timeShiftAvailable","newSeekTime","clampedValue","seekSeconds","currentSeekTarget","clampValueToRange","onSeekedOrTimeShifted","onTimeShift","seekDirection","seekTarget","position","hugereplaybutton_1","RecommendationOverlay","setupRecommendations","clearRecommendations","recommendations","recommendations_1","RecommendationItem","itemConfig","replayButton","itemElement","href","background-image","thumbnail","bgElement","titleElement","timeElement","ReplayButton","hasEnded","groupplaybackapi_1","seekbarcontroller_1","timelinemarkershandler_1","seekbarbufferlevel_1","SeekBar","hasLabel","getLabel","setAriaSliderMinMax","setAriaSliderValues","ariaValueText","seekBarType","SeekBarType","Live","timeshiftValue","ceil","Vod","secondsToText","floor","getPlaybackPositionPercentage","getRelativeCurrentTime","updateBufferLevel","playbackPositionPercentage","bufferLoadedPercentageLevel","getMinBufferLevel","setBufferPosition","configureSeek","scrubbing","isPlayerSeeking","suspension","playbackPositionHandler","isGroupPlaybackAPIAvailable","setPosition","seekBarBackdrop","SeekBarController","keyStepIncrements","volumeController","setSeekBarControls","forceUpdate","isUserSeeking","SegmentRequestFinished","setPlaybackPosition","isInInitialStartupState","smoothPlaybackPositionUpdateIntervalMs","SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED","isNeitherPausedNorPlaying","configureLivePausedTimeshiftUpdater","onPlayerSeek","setSeeking","onPlayerSeeked","groupPlayback","hasJoined","beginSuspension","GroupPlaybackSuspensionReason","UserIsScrubbing","onSeekPreview","enableSeekPreview","subscribeRateLimited","seekWhileScrubbing","percentage","proposedPlaybackTime","getTargetSeekPosition","endSuspension","refreshPlaybackPosition","smoothPlaybackPositionUpdater","PlayerResized","onConfigured","seekbarSnappingRange","snappingRange","seekbarSnappingEnabled","snappingEnabled","setSeekPosition","configureSmoothPlaybackPositionUpdater","initializeTimelineMarkers","Volume","timelineMarkerConfig","timelineMarkersHandler","TimelineMarkersHandler","seekBar","seekBarMarkersContainer","pausedTimeshiftUpdater","startSmoothPlaybackPositionUpdater","currentTimeSeekBar","stopSmoothPlaybackPositionUpdater","currentTimePlayer","updateIntervalMs","PlayerAPINotAvailableError","currentTimeDelta","seekBarContainer","vertical","seekBarBufferLevel","seekBarPlaybackPosition","seekBarBufferPosition","seekBarPlaybackPositionMarker","seekBarSeekPosition","seekBarChapterMarkersContainer","seeking","mouseTouchMoveHandler","preventDefault","vr","stopPropagation","targetPercentage","getOffset","onSeekPreviewEvent","mouseTouchUpHandler","document","matchingMarker","getMarkerAtPosition","onSeekedEvent","isTouchEvent","onSeekEvent","getHorizontalOffset","eventPageX","elementOffsetPx","offset","left","widthPx","sanitizeOffset","getVerticalOffset","eventPageY","top","changedTouches","touches","pageY","pageX","MouseEvent","warn","percent","px","style","transform","-ms-transform","-webkit-transform","scale","CLASS_SEEKING","seekBarEvents","snappedMarker","seekPositionPercentage","marker","TouchEvent","seekableRangeStart","maxTimeShift","getSeekableRangeStart","targetPlaybackPosition","leftRight","upDown","playerDuration","videoBufferLength","getVideoBufferLength","audioBufferLength","getAudioBufferLength","bufferLength","Number","MAX_VALUE","coerceValueIntoRange","range","cb","arrowKeyControls","currentValue","valueUpdate","controlValue","right","up","down","home","end","seekBarControls","volumeTransition","startTransition","getVolume","finish","bind","domElement","controls","keyCode","KeyCode","LeftArrow","RightArrow","UpArrow","DownArrow","Home","End","Space","imageloader_1","SeekBarLabel","setTitleText","setThumbnail","uiManager","handleSeekPreview","timeLabel","seconds","titleLabel","thumbnailElement","thumbnailImageLoader","load","x","thumbnailCssSprite","thumbnailCssSingleImage","sizeX","sizeY","offsetX","offsetY","y","aspectRatio","padding-bottom","background-size","background-position","appliedMarkerCssClasses","targetTimeShift","currentTimeShift","timeShiftPreview","wallClockTime","getThumbnail","time","ImageLoader","DocumentDropdownClosedEvents","SelectDropdownClosedEvents","DropdownOpenedEvents","selectElement","closeDropdown","addDropdownOpenedListeners","onChange","uiContainer","getUI","onPlayerStateChange","getSelectElement","get","optionElement","addDropdownCloseListeners","removeDropdownCloseListeners","clearTimeout","dropdownCloseListenerTimeoutId","addEventListener","onDropdownClosed","removeEventListener","removeListenerFunctions","removeDropdownOpenedListeners","event_1","listener","onDropdownOpened","DropdownOpenedEvents_1","removeListenerFunctions_1","val","select","blur","state","PlayerState","Idle","Finished","NavigationDirection","settingspanelpage_1","hideHoveredSelectBoxes","hideTimeout","reset","activePage","onInactiveEvent","resetNavigation","onActiveEvent","getRootPage","onSettingsStateChanged","onSettingsStateChangedEvent","updateActivePageClass","getActivePage","setActivePageIndex","setActivePage","getPages","targetPage","navigateToPage","Forwards","pageTransitionAnimation","popToRootSettingsPanelPage","popSettingsPanelPage","navigationStack","Backwards","rootPageHasActiveSettings","hasActiveSettings","SettingsPanelPage","settingsPanelEvents","suspend","resume","page","CLASS_ACTIVE_PAGE","resetNavigationOnShow","sourcePage","rootPage","animateNavigation","direction","skipAnimation","pop","settingsPanelDomElement","settingsPanelWidth","settingsPanelHeight","clone","targetSettingsPanelHeight","settingsPanelHTMLElement","scrollWidth","scrollHeight","targetPageHtmlElement","cloneNode","parentNode","appendChild","targetSettingsPanelWidth","parentElement","removeChild","forceBrowserReflow","offsetLeft","getComputedItems","selectBox","allItems","apply","videoqualityselectbox_1","audioqualityselectbox_1","playbackspeedselectbox_1","handleConfigItemChanged","setting","minItemsToDisplay","VideoQualitySelectBox","hasAutoItem","playbackSpeedSelectionEnabled","onActiveChangedEvent","settingsPanelItemEvents","onActiveChanged","settingsStateChangedHandler","lastShownItem","CLASS_LAST","settingsPanelPageEvents","activeItems","onActive","isIOS","isMacIntel","focusToFirstInput","onInactive","settingspanelpagenavigatorbutton_1","SettingsPanelPageBackButton","SettingsPanelPageNavigatorButton","popPage","container","pushTargetPage","SettingsPanelPageOpenButton","SettingsToggleButton","settingsPanel","visibleSettingsPanels","autoHideWhenNoActiveSettings","settingsPanelItemsChangedHandler","subtitleutils_1","SubtitleListBox","SubtitleSwitchHandler","controlbar_1","vttutils_1","SubtitleOverlay","subtitleClearHandler","subtitleContainerManager","subtitleManager","clearInactiveCues","toRemove","removeLabel","ActiveSubtitleManager","SubtitleRegionContainerManager","CueEnter","generateLabel","cueEnter","preprocessLabelEventCallback","previewSubtitleActive","previewSubtitle","addLabel","size","forceSubtitlesIntoViewContainer","handleSubtitleCropping","CueUpdate","labelToReplace","cueUpdate","replaceLabel","CueExit","labelToRemove","cueExit","hasCues","SubtitleDisabled","CLASS_CONTROLBAR_VISIBLE","configureCea608Captions","detectCroppedSubtitleLabel","parent","childRect","getBoundingClientRect","parentRect","bottom","labelDomElement","cropDetection","removeCss","row","column","SubtitleLabel","generateImageTagText","image","vtt","region","regionStyle","updateCEA608FontSize","dummyLabel","font-size","line-height","visibility","dummyLabelCharWidth","dummyLabelCharHeight","fontSizeRatio","subtitleOverlayWidth","subtitleOverlayHeight","fontLetterSpacing","CEA608_NUM_COLUMNS","CEA608_NUM_ROWS","fontSize","letter-spacing","CLASS_CEA_608","fontSizeCalculationRequired","CEA608_COLUMN_OFFSET","CEA608_ROW_OFFSET","SubtitleEnabled","enablePreviewSubtitleLabel","removePreviewSubtitleLabel","calculateId","addCueToMap","popCueFromMap","activeSubtitleCueMap","activeSubtitleCueCount","activeSubtitleCues","activeSubtitleCue","removedCues","cue","imageData","imgTag","src","outerHTML","getCues","cueCount","getRegion","regionContainerId","regionName","overlaySize","subtitleRegionContainers","regionContainerId_1","regionContainer","SubtitleRegionContainer","subtitleOverlay","previousLabel","newLabel","labelToAdd","labelCount","VttUtils","setVttRegionStyles","setVttCueBoxStyles","SubtitleSelectBox","subtitlesettingselectbox_1","BackgroundColorSelectBox","SubtitleSettingSelectBox","setColorAndOpacity","settingsManager","backgroundColor","isSet","backgroundOpacity","toggleOverlayClass","onChanged","property","BackgroundOpacitySelectBox","CharacterEdgeSelectBox","characterEdge","FontColorSelectBox","fontColor","fontOpacity","FontFamilySelectBox","fontFamily","FontOpacitySelectBox","FontSizeSelectBox","currentCssClass","overlay","getSubtitleSettingsManager","SubtitleSettingsLabel","opener","storageutils_1","SubtitleSettingsManager","_properties","SubtitleSettingsProperty","windowColor","windowOpacity","userSettings","localStorageKey","DummyComponent","instance","propertyName","save","StorageUtils","setObject","getObject","_instance","_value","onChangedEvent","_onChanged","_manager","manager","fontsizeselectbox_1","fontfamilyselectbox_1","fontcolorselectbox_1","fontopacityselectbox_1","characteredgeselectbox_1","backgroundcolorselectbox_1","backgroundopacityselectbox_1","windowcolorselectbox_1","windowopacityselectbox_1","subtitlesettingsresetbutton_1","settingspanelpagebackbutton_1","SubtitleSettingsPanelPage","WindowColorSelectBox","WindowOpacitySelectBox","SubtitleSettingsResetButton","getSeekBarWidth","markersContainer","timelineMarkers","configureMarkers","clearMarkers","AdBreakStarted","AdBreakFinished","updateMarkers","updateMarkersDOM","onRelease","intervalMarkerMatch","positionMarkerMatch","removeMarkerFromConfig","markers","_marker","filterRemovedMarkers","seekbarMarker","removeMarkerFromDOM","shouldProcessMarkers","validToProcess","hasMarkers","markerPosition","markerDuration","getSeekableRangeRespectingLive","isNaN","updateMarkerDOM","newMarker","createMarkerDOM","getMarkerCssProperties","seekBarWidthPx","positionInPx","cssProperties","markerWidthPx","round","imageElement_1","markerClasses","markerElement","data-marker-time","data-marker-title","imageUrl","handler","Destroy","metadatalabel_1","TitleBar","shouldBeShown","hasMetadataText","checkMetadataTextAndUpdateVisibility","keepHiddenWithoutMetadata","isOff","onState","onToggleEvent","onToggleOnEvent","isOn","onToggleOffEvent","toggleButtonEvents","canvas","canvasElement","canvasContext","getContext","noiseAnimationWindowPos","canvasHeight","lastFrameUpdate","canvasWidth","renderFrame","useAnimationFrame","cancelAnimationFrame","frameUpdateHandlerId","frameInterval","getTime","currentPixelOffset","noiseImage","createImageData","random","interferenceHeight","putImageData","scheduleNextRender","requestAnimationFrame","userInteractionEventSource","configureUIShowHide","configurePlayerStates","isFirstTouch","playerState","hidingPrevented","hidePlayerStateExceptions","uiHideTimeout","hideUi","previewHideEventArgs","userInteractionEvents","shouldPreventDefault","findButtonComponent","buttonComponent","hideImmediatelyOnMouseLeave","playerStateChange","enumName","stateClassNames","STATE_PREFIX","updateState","removeStates","updateLayoutSizeClasses","Prepared","getState","FULLSCREEN","BUFFERING","REMOTE_CONTROL","CONTROLS_HIDDEN","CONTROLS_SHOWN","substring","getContainer","createElement","flex","updateVideoQualities","videoQualities","hasAuto","getStreamType","videoQualities_1","videoQuality","selectCurrentVideoQuality","getVideoQuality","VideoQualityAdded","VideoQualityRemoved","volumeslider_1","volumetogglebutton_1","VolumeControlButton","volumeToggleButton","getVolumeToggleButton","volumeSlider","getVolumeSlider","volumeSliderHovered","volumeSliderHideTimeout","VolumeToggleButton","VolumeSlider","seekbar_1","setVolumeAriaSliderValues","hideIfVolumeControlProhibited","detectVolumeControlAvailability","muted","volume","updateVolumeWhileScrubbing","dummyVideoElement","update","volumeLevelTens","toggleMuted","VRToggleButton","vrStateHandler","ev","VR_RENDERING_ERROR","isVRConfigured","isVRStereoAvailable","getStereo","vrButtonVisibilityHandler","source","VRStereoChanged","setStereo","Watermark","vrtogglebutton_1","settingstogglebutton_1","playbacktimelabel_1","airplaytogglebutton_1","errormessageoverlay_1","casttogglebutton_1","fullscreentogglebutton_1","recommendationoverlay_1","caststatusoverlay_1","subtitleoverlay_1","seekbarlabel_1","playbacktoggleoverlay_1","pictureinpicturetogglebutton_1","uimanager_1","titlebar_1","bufferingoverlay_1","subtitlelistbox_1","audiotracklistbox_1","uifactory_1","main_1","DemoFactory","buildDemoWithSeparateAudioSubtitlesButtons","subtitleListBox","audioTrackListBox","UIManager","ui","UIFactory","modernSmallScreenAdsUI","condition","context","documentWidth","isAd","adRequiresUi","modernAdsUI","modernSmallScreenUI","radioModeAvailable","subtitleSettingsPanel","audioTrackSettingsPanel","controlBar","something","attributes","Array","HTMLElement","elements","Document","attributeName","attributeValue","setAttribute","findChildElements","findChildElementsOfElement","selector","childElements","querySelectorAll","allChildElements","inputElements","focus","scrollTo","arguments","setHtml","getHtml","innerHTML","HTMLSelectElement","HTMLInputElement","attribute","setAttr","getAttr","removeAttr","removeAttribute","getAttribute","dataAttribute","setData","getData","childElement","elementRect","htmlRect","body","offsetWidth","offsetHeight","eventName","eventHandler","options","split","className","classNames","classList","add","replace","RegExp","contains","propertyNameOrCollection","setCss","getCss","setCssCollection","elementIndex","removeProperty","getComputedStyle","ruleValueCollection","defaultErrorMessages","1000","1001","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1300","1301","1302","1303","1304","1400","1401","1402","1403","1404","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2100","2101","3000","3001","3002","3003","3004","3100","listeners","EventListenerWrapper","rateMs","RateLimitedEventListenerWrapper","subscribedListener","unsubscribeAll","listenersToRemove","listeners_1","fire","isOnce","listenersToRemove_1","eventListener","once","shouldFireEvent","rateLimitTimout","fireSuper","rateLimitingEventListener","startRateLimiting","lastSeenEvent","FocusVisibleCssClassName","FocusVisibilityTracker","bitmovinUiPrefix","lastInteractionWasKeyboard","onKeyDown","metaKey","altKey","ctrlKey","onMouseOrPointerOrTouch","onFocus","isHtmlElement","onBlur","eventHandlerMap","mousedown","pointerdown","touchstart","keydown","registerEventListeners","DOMTokenList","unregisterEventListeners","event_2","guid","loadedCallback","state_1","loaded","callLoadedCallback","de_json_1","__importDefault","en_json_1","es_json_1","nl_json_1","defaultLocalizationConfig","defaultVocabularies","en","default","de","es","nl","language","vocabularies","I18n","mergedConfig","detectBrowserLanguage","mergeVocabulariesWithDefaultVocabularies","initializeLanguage","initializeVocabulary","containsLanguage","hasOwnProperty","rawVocabularies","reduce","mergedVocabularies","vocabulary","browserLanguageDetectionEnabled","userLanguage","shortenedUserLanguage","vocab","lang","replaceVariableWithPlaceholderIfExists","matches","match","m","str","vocabularyString","settings.video.quality","settings.audio.quality","settings.audio.track","playPause","close","settings.audio.mute","settings.audio.volume","pictureInPicture","appleAirplay","googleCast","settings","fullscreen","settings.subtitles","settings.subtitles.font.size","settings.subtitles.font.family","settings.subtitles.font.color","settings.subtitles.font.opacity","settings.subtitles.characterEdge","settings.subtitles.background.color","settings.subtitles.background.opacity","settings.subtitles.window.color","settings.subtitles.window.opacity","settings.time.hours","settings.time.minutes","settings.time.seconds","back","replay","ads.remainingTime","colors.white","colors.black","colors.red","colors.green","colors.blue","colors.yellow","subtitle.example","subtitle.select","playingOn","connectingTo","watermarkLink","seekBar.value","seekBar.timeshift","seekBar.durationText","quickseek.forward","quickseek.rewind","ecoMode","ecoMode.title","colors.cyan","colors.magenta","settings.subtitles.characterEdge.raised","settings.subtitles.characterEdge.depressed","settings.subtitles.characterEdge.uniform","settings.subtitles.characterEdge.dropshadowed","settings.subtitles.font.family.monospacedserif","settings.subtitles.font.family.proportionalserif","settings.subtitles.font.family.monospacedsansserif","settings.subtitles.font.family.proportionalsansserif","settings.subtitles.font.family.casual","settings.subtitles.font.family.cursive","settings.subtitles.font.family.smallcapital","auto","normal","version","__exportStar","demofactory_1","enumerable","spatialnavigation_1","navigationgroup_1","SpatialNavigation","rootnavigationgroup_1","NavigationGroup","ListNavigationGroup_1","RootNavigationGroup","ListNavigationGroup","ListOrientation","itemselectionlist_1","watermark_1","audiotrackselectbox_1","subtitleselectbox_1","volumecontrolbutton_1","adskipbutton_1","admessagelabel_1","adclickoverlay_1","castuicontainer_1","closebutton_1","subtitlesettingslabel_1","settingspanelpageopenbutton_1","subtitlesettingspanelpage_1","replaybutton_1","quickseekbutton_1","isRadioModeAvailable","set","CustomEvent","detail","dispatchEvent","TypeError","timeShiftAvailabilityChangedEvent","liveDetector","liveChangedEvent","isAndroid","isChrome","DurationChanged","defaultValue","getSeekableRange","currentTimeshift","maxTimeshift","timeShiftAvailableNow","liveNow","boundary1","boundary2","lowerBoundary","upperBoundary","types_1","handleAction","action","Action","SELECT","BACK","handleNavigation","listNavigationDirections","orientation","__spreadArray","Vertical","Direction","UP","DOWN","Horizontal","LEFT","RIGHT","typeguards_1","getHtmlElementsFromComponents","htmlElements","resolveAllComponents","childComponents","containerOrComponent","isContainer","isComponent","isListBox","children","TizenKeyMap","isApplicable","isTizen","keyCodes","38","40","37","39","13","10009","WebOsKeyMap","isWebOs","461","PlayStationKeyMap","isPlayStation","27","AndroidKeyMap","19","20","21","22","23","66","4","HisenseKeyMap","8","DefaultKeyMap","getKeyMapForPlatform","applicableKeyMap","keyMap","vector","sqrt","pow","getElementVector","boundingRect","getBoundingRectFromElement","calculateAngle","directionVector","len","elementVector","angleCos","acos","PI","getElementInDirection","activeElement","activeElemVector","elem","dist","angle","angleA","distA","navigationalgorithm_1","gethtmlelementsfromcomponents_1","nodeeventsubscriber_1","removeElementHoverEventListeners","eventSubscriber","NodeEventSubscriber","getActiveElement","focusElement","blurActiveElement","focusFirstElement","defaultNavigationHandler","targetElement","defaultActionHandler","click","handleInput","defaultHandler","userHandler","handleDefault","onNavigation","activeElementBeforeDisable","onAction","isSettingsPanel","trackElementHover","removeEventListenerFunctions","htmlElem","exitListener","enterListener","fn","attachedListeners","Map","getEventListenersOfType","has","node","listenersOfType","listenerIndex","otherNode","otherListener","otherOptions","SeekBarHandler","rootNavigationGroup","cursorPosition","isScrubbing","scrubSpeedPercentage","isSeekBarWrapper","stopSeeking","getSeekBar","initializeOrUpdateCursorPosition","dispatchMouseMoveEvent","dispatchMouseClickEvent","from","seekBarWrapper","updateScrubSpeedPercentage","scrubSpeedResetTimeout","getIncrement","increment","resetCursorPosition","updateCursorPosition","initializeCursorPosition","playbackPositionMarker","querySelector","rect","startX","startY","getCursorPositionMouseEventInit","clientX","clientY","mouseDownHandler","mouseEventInit","dispatchMouseLeaveEvent","seekbarhandler_1","keymap_1","navigationGroups","group","activeNavigationGroups","updateEnabledNavigationGroup","groupIndex","other","handleKeyEvent","getActiveNavigationGroup","isDirection","isAction","seekBarHandler","unsubscribeVisibilityChangesFns","subscribeToNavigationGroupVisibilityChanges","attachKeyEventHandler","enableDefaultNavigationGroup","onShowHandler","onHideHandler","unsubscribeFromNavigationGroupVisibilityChanges","unsub","groupToEnable","idx","obj","values","disableStorageApi","shouldUseLocalStorage","localStorage","getItem","setItem","debug","setStorageApiDisabled","json","parse","totalSeconds","format","isNegative","hours","minutes","leftPadWithZeros","num","substr","adMessage","adMessagePlaceholderRegex","formatString","isLinearAdActive","indexOfActiveAd","getActiveAdBreak","getActiveAd","total","isLinear","leadingZeroes","numDecimalPlaces","leadingZeroesMatches","decimalPlacesMatches","timeString","currentSubtitle","SUBTITLES_OFF_KEY","subtitles","list","subtitle","SubtitleAdded","addSubtitle","selectCurrentSubtitle","SubtitleRemoved","removeSubtitle","clearSubtitles","refreshSubtitles","offListItem","delay","repeat","timeoutOrIntervalId","suspended","clearInternal","setInterval","clearInterval","radiomodetogglebutton_1","quanteecconsumptions_1","playbackjumpoverlay_1","ecomodecontainer_1","modernUI","ecoModeContainer","unshift","mainSettingsPanelPage","subtitleSettingsPanelPage","subtitleSelectBox","subtitleSettingsOpenButton","containerComponents","titleBarComponents","isBrowser","modernCastReceiverUI","modernTvUI","subtitleListPanel","audioTrackListPanel","playbackToggleOverlay","subtitleToggleButton","audioToggleButton","spatialNavigation","modernRadioModeUI","buildDefaultUI","buildModernUI","buildDefaultSmallScreenUI","buildModernSmallScreenUI","buildDefaultCastReceiverUI","buildModernCastReceiverUI","buildDefaultTvUI","buildModernTvUI","buildModernRadioModeUI","volumecontroller_1","focusvisibilitytracker_1","subtitlesettingsmanager_1","playerUiOrUiVariants","onUiVariantResolve","onActiveUiChanged","handleIsRadioModeActiveChange","handleIsRadioModeAvailableChange","uiVariants","subtitleSettingsManager","managerPlayerWrapper","PlayerWrapper","autoUiVariantResolve","VolumeController","getPlayer","available","resolveUiVariant","updateConfig","playerSourceConfig","playerSourceUiConfig","updateSource","wrappedPlayer","uiVariantsWithoutCondition","PlaylistTransition","uiContainerElement","uiInstanceManagers","uiVariant","InternalUIInstanceManager","adStartedEvent","requestsUi","currentUi","getWrappedPlayer","fireEventInUI","focusVisibilityTracker","localize","setLocalizationConfig","localizationConfig","getUiVariants","switchToUiVariant","uiVariantIndex","previousUi","nextUi","isConfigured","addUi","defaultContext","isFullscreen","clientWidth","switchingContext","nextUiVariant","matchesCondition","dom","configureControls","releaseUi","releaseControls","clearEventHandlers","uiInstanceManager","getTimelineMarkers","addTimelineMarker","timelineMarker","removeTimelineMarker","destroy","UIInstanceManager","playerWrapper","configureControlsTree","configured","configuredComponents","configuredComponents_1","constructor","releaseControlsTree","released","isReleased","childComponent","wrapper","eventHandlers","eventType","objectProtoPropertyNames","getOwnPropertyNames","getPrototypeOf","namesToIgnore","methods","properties","members_1","names","newNames","member","methods_1","method","properties_1","propertyDescriptor","propertyDescriptor_1","getOwnPropertyDescriptor","playerEventData","timestamp","uiSourced","visit","recursiveTreeWalker","setVolume","issuerName","setMuted","mute","unmute","isMuted","recallVolume","storeVolume","storedVolume","VolumeTransition","playerMuted","playerVolume","uiMuted","uiVolume","VolumeChanged","Muted","Unmuted","controller","setCueBoxPositionForVerticalWriting","cueContainerDom","subtitleOverlaySize","writingMode","Right","Top","setVttLine","setVttPositionAlign","positionAlign","DirectionPair","VttVerticalWriting","defaultLineNumber","Bottom","Left","setVttLineAlign","relativeCueBoxPosition","lineAlign","setCssForCenterLineAlign","subtitleOverLaySize","targetLine","relativeLinePosition","overlayReferenceEdge","line","snapToLines","cueContainer","GrowingRight","GrowingLeft","textAlign","align","containerSize","regionContainerDom","regionPositionX","viewportAnchorX","regionAnchorX","regionPositionY","viewportAnchorY","lines","regionAnchorY"],"mappings":"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","file":"bitmovinplayer-ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { PlayerAPI, PlayerEvent } from 'bitmovin-player';\nimport { Button, ButtonConfig } from '../../../ts/components/button';\nimport { UIInstanceManager } from '../../../ts/uimanager';\n\ndeclare const window: any;\n\ninterface GoBackButtonConfig extends ButtonConfig {\n  error?: boolean;\n}\n\nexport class GoBackButton extends Button<ButtonConfig> {\n  constructor(config: GoBackButtonConfig = { error: false }) {\n    super(config);\n\n    const defaultConfig: ButtonConfig = {\n      cssClasses: config.error ? ['ui-gobackbutton', 'ui-gobackbutton-error'] : ['ui-gobackbutton'],\n      text: 'Go Back',\n      ariaLabel: 'Go Back',\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      window.bitmovin.customMessageHandler.sendAsynchronous('goBack');\n    });\n\n    player.on(player.exports.PlayerEvent.ViewModeChanged, () => {\n      player.getViewMode() === 'fullscreen' ? this.hide() : this.show();\n    });\n  }\n}\n","import { Button, ButtonConfig } from '../../../ts/components/button';\nimport { UIInstanceManager } from '../../../ts/uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../../ts/localization/i18n';\nimport { PlayerUtils } from '../../../ts/playerutils';\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\n\nexport interface PlaybackJumpButtonsConfig extends ButtonConfig {\n  skipTime: number; // in seconds\n}\n\nexport class PlaybackJumpButtons extends Button<PlaybackJumpButtonsConfig> {\n\n  constructor(config: PlaybackJumpButtonsConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-playbackjumpbuttons',\n      text: config.text,\n      ariaLabel: config.ariaLabel,\n      skipTime: 0,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(\n      player,\n      uimanager,\n    );\n    liveStreamDetector.onLiveChanged.subscribe(\n      (sender, args: LiveStreamDetectorEventArgs) => {\n        if (player.isLive()) {\n          this.hide();\n        } else {\n          uimanager.onControlsShow.subscribe(() => {\n            this.show();\n          });\n\n          uimanager.onControlsHide.subscribe(() => {\n            this.hide();\n          });\n        }\n      },\n    );\n    liveStreamDetector.detect();\n\n    this.onClick.subscribe(() => {\n      const currentTime = player.getCurrentTime();\n      const duration = player.getDuration();\n\n      if (!player.isLive()) {\n        let newTime = currentTime + this.config.skipTime;\n        newTime = Math.max(0, Math.min(newTime, duration));\n        player.seek(newTime, 'ui');\n      }\n    });\n  }\n}\n\nexport class PlaybackForwardButton extends PlaybackJumpButtons {\n  constructor(config: PlaybackJumpButtonsConfig) {\n    super({\n      ...config,\n      cssClass: 'ui-playbackforwardbutton',\n      text: i18n.getLocalizer('forward'),\n      ariaLabel: i18n.getLocalizer('forward'),\n    });\n  }\n}\n\nexport class PlaybackRewindButton extends PlaybackJumpButtons {\n  constructor(config: PlaybackJumpButtonsConfig) {\n    super({\n      ...config,\n      cssClass: 'ui-playbackrewindbutton',\n      text: i18n.getLocalizer('rewind'),\n      ariaLabel: i18n.getLocalizer('rewind'),\n    });\n  }\n}\n","import {Container, ContainerConfig} from '../../../ts/components/container';\nimport {PlaybackForwardButton, PlaybackRewindButton} from './playbackjumpbutton';\n\nexport interface PlaybackJumpControlsOverlayConfig extends ContainerConfig {}\n\n/**\n * Overlay containing the playback forward and rewind buttons.\n */\nexport class PlaybackJumpControlsOverlay extends Container<PlaybackJumpControlsOverlayConfig> {\n\n  private forwardButton: PlaybackForwardButton;\n  private rewindButton: PlaybackRewindButton;\n\n  constructor(config: PlaybackJumpControlsOverlayConfig = {}) {\n    super(config);\n\n    this.forwardButton = new PlaybackForwardButton({ skipTime: 10 });\n    this.rewindButton = new PlaybackRewindButton({ skipTime: -10 });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-playbackforward-overlay',\n      components: [this.forwardButton, this.rewindButton],\n    }, this.config);\n  }\n}\n","import { PlayerAPI, PlayerEvent } from 'bitmovin-player';\nimport { Button, ButtonConfig } from '../../../ts/components/button';\nimport { UIInstanceManager } from '../../../ts/uimanager';\n\ndeclare const window: any;\n\ninterface QuanteecConsumptionsConfig extends ButtonConfig {\n}\n\nexport class QuanteecConsumptions extends Button<ButtonConfig> {\n  constructor(config: QuanteecConsumptionsConfig = {}) {\n    super(config);\n\n    const defaultConfig: ButtonConfig = {\n      cssClass: 'ui-quanteecconsumptions',\n      text: 'Get Quanteec consumptions',\n      ariaLabel: 'Get Quanteec consumptions',\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      // web handle\n      window.isQuanteecDisplayed = !window.isQuanteecDisplayed;\n    });\n  }\n}\n","import { PlayerAPI } from 'bitmovin-player';\nimport { ToggleButton, ToggleButtonConfig } from '../../../../ts/components/togglebutton';\nimport { UIInstanceManager } from '../../../../ts/uimanager';\n\ndeclare const window: any;\n\nexport interface RadioModeToggleButtonConfig extends ToggleButtonConfig {\n  /**\n   * Decides the initial state of the toggle button\n   * Default: false\n   */\n  active: boolean;\n}\n\nexport class RadioModeToggleButton extends ToggleButton<RadioModeToggleButtonConfig> {\n  constructor(config: RadioModeToggleButtonConfig) {\n    super(config);\n\n    const defaultConfig: RadioModeToggleButtonConfig = {\n      cssClass: config.active ? 'ui-closebutton' : 'ui-radiomodetogglebutton',\n      text: 'Radio Mode',\n      ariaLabel: 'Radio Mode',\n      active: false,\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      // Mobile\n      const initialState = this.config.active;\n      if (window.bitmovin.customMessageHandler) {\n        window.bitmovin.customMessageHandler.sendAsynchronous(\n          'radioModeChanged',\n          JSON.stringify({\n            initialState,\n            activated: !this.config.active,\n          }),\n        );\n      }\n\n      // Web\n      window.isRadioModeActive = !window.isRadioModeActive;\n    });\n  }\n}\n","/**\n * @category Utils\n */\nexport namespace ArrayUtils {\n  /**\n   * Removes an item from an array.\n   * @param array the array that may contain the item to remove\n   * @param item the item to remove from the array\n   * @returns {any} the removed item or null if it wasn't part of the array\n   */\n  export function remove<T>(array: T[], item: T): T | null {\n    let index = array.indexOf(item);\n\n    if (index > -1) {\n      return array.splice(index, 1)[0];\n    } else {\n      return null;\n    }\n  }\n}\n","import { ListItem, ListSelector, ListSelectorConfig } from './components/listselector';\nimport { UIInstanceManager } from './uimanager';\nimport { AudioTrackEvent, PlayerAPI, AudioTrack } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\n\n/**\n * Helper class to handle all audio tracks related events\n *\n * This class listens to player events as well as the `ListSelector` event if selection changed\n *\n * @category Utils\n */\nexport class AudioTrackSwitchHandler {\n\n  private player: PlayerAPI;\n  private listElement: ListSelector<ListSelectorConfig>;\n  private uimanager: UIInstanceManager;\n\n  constructor(player: PlayerAPI, element: ListSelector<ListSelectorConfig>, uimanager: UIInstanceManager) {\n    this.player = player;\n    this.listElement = element;\n    this.uimanager = uimanager;\n\n    this.bindSelectionEvent();\n    this.bindPlayerEvents();\n    this.refreshAudioTracks();\n  }\n\n  private bindSelectionEvent(): void {\n    this.listElement.onItemSelected.subscribe((_, value: string) => {\n      this.player.setAudio(value);\n    });\n  }\n\n  private bindPlayerEvents(): void {\n    // Update selection when selected track has changed\n    this.player.on(this.player.exports.PlayerEvent.AudioChanged, this.selectCurrentAudioTrack);\n    // Update tracks when source goes away\n    this.player.on(this.player.exports.PlayerEvent.SourceUnloaded, this.refreshAudioTracks);\n    // Update tracks when the period within a source changes\n    this.player.on(this.player.exports.PlayerEvent.PeriodSwitched, this.refreshAudioTracks);\n    // Update tracks when a track is added or removed\n    this.player.on(this.player.exports.PlayerEvent.AudioAdded, this.addAudioTrack);\n    this.player.on(this.player.exports.PlayerEvent.AudioRemoved, this.removeAudioTrack);\n    this.uimanager.getConfig().events.onUpdated.subscribe(this.refreshAudioTracks);\n  }\n\n  private addAudioTrack = (event: AudioTrackEvent) => {\n    const audioTrack = event.track;\n    if (!this.listElement.hasItem(audioTrack.id)) {\n      this.listElement.addItem(audioTrack.id, i18n.getLocalizer(audioTrack.label), true);\n    }\n  };\n\n  private removeAudioTrack = (event: AudioTrackEvent) => {\n    const audioTrack = event.track;\n    if (this.listElement.hasItem(audioTrack.id)) {\n      this.listElement.removeItem(audioTrack.id);\n    }\n  };\n\n  private selectCurrentAudioTrack = () => {\n    let currentAudioTrack = this.player.getAudio();\n\n    // HLS streams don't always provide this, so we have to check\n    if (currentAudioTrack) {\n      this.listElement.selectItem(currentAudioTrack.id);\n    }\n  };\n\n  private refreshAudioTracks = () => {\n    const audioTracks = this.player.getAvailableAudio();\n    const audioTrackToListItem = (audioTrack: AudioTrack): ListItem => {\n      return { key: audioTrack.id, label: audioTrack.label };\n    };\n\n    this.listElement.synchronizeItems(audioTracks.map(audioTrackToListItem));\n    this.selectCurrentAudioTrack();\n  };\n}\n","declare global {\n  interface Navigator {\n    msMaxTouchPoints?: number;\n  }\n}\n\n/**\n * @category Utils\n */\nexport class BrowserUtils {\n  // isMobile only needs to be evaluated once (it cannot change during a browser session)\n  // Mobile detection according to Mozilla recommendation: \"In summary, we recommend looking for the string “Mobi”\n  // anywhere in the User Agent to detect a mobile device.\"\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n  static get isMobile(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Mobi/.test(navigator.userAgent);\n  }\n\n  static get isChrome(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Chrome/.test(navigator.userAgent);\n  }\n\n  static get isAndroid(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Android/.test(navigator.userAgent) && !this.isHisense;\n  }\n\n  static get isIOS(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  }\n\n  static get isMacIntel(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && navigator.platform === 'MacIntel';\n  }\n\n  static get isHisense(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Hisense/.test(navigator.userAgent);\n  }\n\n  static get isPlayStation(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /PlayStation/i.test(navigator.userAgent);\n  }\n\n  static get isWebOs(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return (\n      navigator &&\n      navigator.userAgent &&\n      (navigator.userAgent.includes('Web0S') || navigator.userAgent.includes('NetCast'))\n    );\n  }\n\n  static get isTizen(): boolean {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return navigator && navigator.userAgent && /Tizen/.test(navigator.userAgent);\n  }\n\n  // https://hacks.mozilla.org/2013/04/detecting-touch-its-the-why-not-the-how/\n  static get isTouchSupported() {\n    if (!this.windowExists()) {\n      return false;\n    }\n    return 'ontouchstart' in window || navigator && navigator.userAgent && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0);\n  }\n\n  private static windowExists(): boolean {\n    return typeof window !== 'undefined';\n  }\n}\n","import { ClickOverlay, ClickOverlayConfig } from './clickoverlay';\nimport { UIInstanceManager } from '../uimanager';\nimport { Ad, AdEvent, PlayerAPI } from 'bitmovin-player';\n\n/**\n * A simple click capture overlay for clickThroughUrls of ads.\n *\n * @category Components\n */\nexport class AdClickOverlay extends ClickOverlay {\n  constructor(config: ClickOverlayConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      acceptsTouchWithUiHidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let clickThroughCallback: () => void = null;\n\n    player.on(player.exports.PlayerEvent.AdStarted, (event: AdEvent) => {\n      let ad = event.ad;\n      this.setUrl(ad.clickThroughUrl);\n      clickThroughCallback = ad.clickThroughUrlOpened;\n    });\n\n    // Clear click-through URL when ad has finished\n    let adFinishedHandler = () => {\n      this.setUrl(null);\n    };\n\n    player.on(player.exports.PlayerEvent.AdFinished, adFinishedHandler);\n    player.on(player.exports.PlayerEvent.AdSkipped, adFinishedHandler);\n    player.on(player.exports.PlayerEvent.AdError, adFinishedHandler);\n\n    this.onClick.subscribe(() => {\n      // Pause the ad when overlay is clicked\n      player.pause('ui-ad-click-overlay');\n\n      if (clickThroughCallback) {\n        clickThroughCallback();\n      }\n    });\n  }\n}\n","import {Label, LabelConfig} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport {StringUtils} from '../stringutils';\nimport { AdEvent, LinearAd, PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A label that displays a message about a running ad, optionally with a countdown.\n *\n * @category Components\n */\nexport class AdMessageLabel extends Label<LabelConfig> {\n\n  constructor(config: LabelConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-label-ad-message',\n      text: i18n.getLocalizer('ads.remainingTime') ,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let text = config.text;\n\n    let updateMessageHandler = () => {\n      this.setText(StringUtils.replaceAdMessagePlaceholders(i18n.performLocalization(text), null, player));\n    };\n\n    let adStartHandler = (event: AdEvent) => {\n      let uiConfig = (event.ad as LinearAd).uiConfig;\n      text = uiConfig && uiConfig.message || config.text;\n\n      updateMessageHandler();\n\n      player.on(player.exports.PlayerEvent.TimeChanged, updateMessageHandler);\n    };\n\n    let adEndHandler = () => {\n      player.off(player.exports.PlayerEvent.TimeChanged, updateMessageHandler);\n    };\n\n    player.on(player.exports.PlayerEvent.AdStarted, adStartHandler);\n    player.on(player.exports.PlayerEvent.AdSkipped, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdError, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdFinished, adEndHandler);\n  }\n}","import { ButtonConfig, Button } from './button';\nimport { UIInstanceManager } from '../uimanager';\nimport { StringUtils } from '../stringutils';\nimport { AdEvent, LinearAd, PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for the {@link AdSkipButton}.\n *\n * @category Configs\n */\nexport interface AdSkipButtonConfig extends ButtonConfig {\n  /**\n   * Message which gets displayed during the countdown is active.\n   * Supported placeholders: look at {@link StringUtils.replaceAdMessagePlaceholders}\n   */\n  untilSkippableMessage?: string;\n  /**\n   * Message displayed when the ad is skippable.\n   * Supported placeholders: look at {@link StringUtils.replaceAdMessagePlaceholders}\n   */\n  skippableMessage?: string;\n}\n\n/**\n * A button that is displayed during ads and can be used to skip the ad.\n *\n * @category Buttons\n */\nexport class AdSkipButton extends Button<AdSkipButtonConfig> {\n\n  constructor(config: AdSkipButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <AdSkipButtonConfig>{\n      cssClass: 'ui-button-ad-skip',\n      untilSkippableMessage: 'Skip ad in {remainingTime}',\n      skippableMessage: 'Skip ad',\n      acceptsTouchWithUiHidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let untilSkippableMessage = config.untilSkippableMessage;\n    let skippableMessage = config.skippableMessage;\n    let skipOffset = -1;\n\n    let updateSkipMessageHandler = () => {\n      this.show();\n\n      // Update the skip message on the button\n      if (player.getCurrentTime() < skipOffset) {\n        this.setText(StringUtils.replaceAdMessagePlaceholders(untilSkippableMessage, skipOffset, player));\n        this.disable();\n      } else {\n        this.setText(skippableMessage);\n        this.enable();\n      }\n    };\n\n    let adStartHandler = (event: AdEvent) => {\n      let ad = event.ad as LinearAd;\n      skipOffset = ad.skippableAfter;\n      untilSkippableMessage = ad.uiConfig && ad.uiConfig.untilSkippableMessage || config.untilSkippableMessage;\n      skippableMessage = ad.uiConfig && ad.uiConfig.skippableMessage || config.skippableMessage;\n\n      // Display this button only if ad is skippable.\n      // Non-skippable ads will return -1 for skippableAfter for player version < v8.3.0.\n      if (typeof skipOffset === 'number' && skipOffset >= 0) {\n        updateSkipMessageHandler();\n        player.on(player.exports.PlayerEvent.TimeChanged, updateSkipMessageHandler);\n      } else {\n        this.hide();\n      }\n    };\n\n    let adEndHandler = () => {\n      player.off(player.exports.PlayerEvent.TimeChanged, updateSkipMessageHandler);\n    };\n\n    player.on(player.exports.PlayerEvent.AdStarted, adStartHandler);\n    player.on(player.exports.PlayerEvent.AdSkipped, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdError, adEndHandler);\n    player.on(player.exports.PlayerEvent.AdFinished, adEndHandler);\n\n    this.onClick.subscribe(() => {\n      // Try to skip the ad (this only works if it is skippable so we don't need to take extra care of that here)\n      player.ads.skip();\n    });\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles Apple AirPlay.\n *\n * @category Buttons\n */\nexport class AirPlayToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-airplaytogglebutton',\n      text: i18n.getLocalizer('appleAirplay'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    if (!player.isAirplayAvailable) {\n      // If the player does not support Airplay (player 7.0), we just hide this component and skip configuration\n      this.hide();\n      return;\n    }\n\n    this.onClick.subscribe(() => {\n      if (player.isAirplayAvailable()) {\n        player.showAirplayTargetPicker();\n      } else {\n        if (console) {\n          console.log('AirPlay unavailable');\n        }\n      }\n    });\n\n    const airPlayAvailableHandler = () => {\n      if (player.isAirplayAvailable()) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    const airPlayChangedHandler = () => {\n      if (player.isAirplayActive()) {\n        this.on();\n      } else {\n        this.off();\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.AirplayAvailable, airPlayAvailableHandler);\n    player.on(player.exports.PlayerEvent.AirplayChanged, airPlayChangedHandler);\n\n    // Startup init\n    airPlayAvailableHandler(); // Hide button if AirPlay is not available\n    airPlayChangedHandler();\n  }\n}","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection between 'auto' and the available audio qualities.\n *\n * @category Components\n */\nexport class AudioQualitySelectBox extends SelectBox {\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-audioqualityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let selectCurrentAudioQuality = () => {\n      this.selectItem(player.getAudioQuality().id);\n    };\n\n    let updateAudioQualities = () => {\n      let audioQualities = player.getAvailableAudioQualities();\n\n      this.clearItems();\n\n      // Add entry for automatic quality switching (default setting)\n      this.addItem('auto', i18n.getLocalizer('auto'));\n\n      // Add audio qualities\n      for (let audioQuality of audioQualities) {\n        this.addItem(audioQuality.id, audioQuality.label);\n      }\n\n      // Select initial quality\n      selectCurrentAudioQuality();\n    };\n\n    this.onItemSelected.subscribe((sender: AudioQualitySelectBox, value: string) => {\n      player.setAudioQuality(value);\n    });\n\n    // Update qualities when audio track has changed\n    player.on(player.exports.PlayerEvent.AudioChanged, updateAudioQualities);\n    // Update qualities when source goes away\n    player.on(player.exports.PlayerEvent.SourceUnloaded, updateAudioQualities);\n    // Update qualities when the period within a source changes\n    player.on(player.exports.PlayerEvent.PeriodSwitched, updateAudioQualities);\n    // Update quality selection when quality is changed (from outside)\n    player.on(player.exports.PlayerEvent.AudioQualityChanged, selectCurrentAudioQuality);\n    if ((player.exports.PlayerEvent as any).AudioQualityAdded) {\n      // Update qualities when their availability changed\n      // TODO: remove any cast after next player release\n      player.on((player.exports.PlayerEvent as any).AudioQualityAdded, updateAudioQualities);\n      player.on((player.exports.PlayerEvent as any).AudioQualityRemoved, updateAudioQualities);\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(updateAudioQualities);\n  }\n}","import {ListBox} from './listbox';\nimport {UIInstanceManager} from '../uimanager';\nimport {AudioTrackSwitchHandler} from '../audiotrackutils';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * A element that is similar to a select box where the user can select a subtitle\n *\n * @category Components\n */\nexport class AudioTrackListBox extends ListBox {\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    new AudioTrackSwitchHandler(player, this, uimanager);\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport {AudioTrackSwitchHandler} from '../audiotrackutils';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * A select box providing a selection between available audio tracks (e.g. different languages).\n *\n * @category Components\n */\nexport class AudioTrackSelectBox extends SelectBox {\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-audiotrackselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    new AudioTrackSwitchHandler(player, this, uimanager);\n  }\n}","import {ContainerConfig, Container} from './container';\nimport {UIInstanceManager} from '../uimanager';\nimport {Component, ComponentConfig} from './component';\nimport {Timeout} from '../timeout';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for the {@link BufferingOverlay} component.\n *\n * @category Configs\n */\nexport interface BufferingOverlayConfig extends ContainerConfig {\n  /**\n   * Delay in milliseconds after which the buffering overlay will be displayed. Useful to bypass short stalls without\n   * displaying the overlay. Set to 0 to display the overlay instantly.\n   * Default: 1000ms (1 second)\n   */\n  showDelayMs?: number;\n}\n\n/**\n * Overlays the player and displays a buffering indicator.\n *\n * @category Components\n */\nexport class BufferingOverlay extends Container<BufferingOverlayConfig> {\n\n  private indicators: Component<ComponentConfig>[];\n\n  constructor(config: BufferingOverlayConfig = {}) {\n    super(config);\n\n    this.indicators = [\n      new Component<ComponentConfig>({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator', role: 'img' }),\n      new Component<ComponentConfig>({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator', role: 'img' }),\n      new Component<ComponentConfig>({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator', role: 'img' }),\n    ];\n\n    this.config = this.mergeConfig(config, <BufferingOverlayConfig>{\n      cssClass: 'ui-buffering-overlay',\n      hidden: true,\n      components: this.indicators,\n      showDelayMs: 1000,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    let overlayShowTimeout = new Timeout(config.showDelayMs, () => {\n      this.show();\n    });\n\n    let showOverlay = () => {\n      overlayShowTimeout.start();\n    };\n\n    let hideOverlay = () => {\n      overlayShowTimeout.clear();\n      this.hide();\n    };\n\n    player.on(player.exports.PlayerEvent.StallStarted, showOverlay);\n    player.on(player.exports.PlayerEvent.StallEnded, hideOverlay);\n    player.on(player.exports.PlayerEvent.Play, showOverlay);\n    player.on(player.exports.PlayerEvent.Playing, hideOverlay);\n    player.on(player.exports.PlayerEvent.Paused, hideOverlay);\n    player.on(player.exports.PlayerEvent.Seek, showOverlay);\n    player.on(player.exports.PlayerEvent.Seeked, hideOverlay);\n    player.on(player.exports.PlayerEvent.TimeShift, showOverlay);\n    player.on(player.exports.PlayerEvent.TimeShifted, hideOverlay);\n    player.on(player.exports.PlayerEvent.SourceUnloaded, hideOverlay);\n\n    // Show overlay if player is already stalled at init\n    if (player.isStalled()) {\n      this.show();\n    }\n  }\n}\n","import {ComponentConfig, Component} from './component';\nimport {DOM} from '../dom';\nimport {EventDispatcher, NoArgs, Event} from '../eventdispatcher';\nimport { LocalizableText , i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link Button} component.\n *\n * @category Configs\n */\nexport interface ButtonConfig extends ComponentConfig {\n  /**\n   * The text as string or localize callback on the button.\n   */\n  text?: LocalizableText;\n  /**\n   * WCAG20 standard for defining info about the component (usually the name)\n   */\n  ariaLabel?: LocalizableText;\n\n  /**\n   * Specifies whether the first touch event received by the {@link UIContainer} should be prevented or not.\n   *\n   * Default: false\n   */\n  acceptsTouchWithUiHidden?: boolean;\n}\n\n/**\n * A simple clickable button.\n *\n * @category Components\n */\nexport class Button<Config extends ButtonConfig> extends Component<Config> {\n\n  private buttonEvents = {\n    onClick: new EventDispatcher<Button<Config>, NoArgs>(),\n  };\n\n  constructor(config: Config) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-button',\n      role: 'button',\n      tabIndex: 0,\n      acceptsTouchWithUiHidden: false,\n    } as Config, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    const buttonElementAttributes: { [name: string]: string } = {\n      'id': this.config.id,\n      'aria-label': i18n.performLocalization(this.config.ariaLabel || this.config.text),\n      'class': this.getCssClasses(),\n      'type' : 'button',\n      /**\n      * WCAG20 standard to display if a button is pressed or not\n      */\n      'aria-pressed': 'false',\n      'tabindex': this.config.tabIndex.toString(),\n    };\n\n    if (this.config.role != null) {\n      buttonElementAttributes['role'] = this.config.role;\n    }\n\n    // Create the button element with the text label\n    let buttonElement = new DOM('button', buttonElementAttributes, this).append(new DOM('span', {\n      'class': this.prefixCss('label'),\n    }).html(i18n.performLocalization(this.config.text)));\n\n    // Listen for the click event on the button element and trigger the corresponding event on the button component\n    buttonElement.on('click', () => {\n      this.onClickEvent();\n    });\n\n    return buttonElement;\n  }\n\n  /**\n   * Sets text on the label of the button.\n   * @param text the text to put into the label of the button\n   */\n  setText(text: LocalizableText): void {\n    this.getDomElement().find('.' + this.prefixCss('label')).html(i18n.performLocalization(text));\n  }\n\n  protected onClickEvent() {\n    this.buttonEvents.onClick.dispatch(this);\n  }\n\n  /**\n   * Gets the event that is fired when the button is clicked.\n   * @returns {Event<Button<Config>, NoArgs>}\n   */\n  get onClick(): Event<Button<Config>, NoArgs> {\n    return this.buttonEvents.onClick.getEvent();\n  }\n}\n","import {ContainerConfig, Container} from './container';\nimport {Label, LabelConfig} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport { CastStartedEvent, CastWaitingForDeviceEvent, PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Overlays the player and displays the status of a Cast session.\n *\n * @category Components\n */\nexport class CastStatusOverlay extends Container<ContainerConfig> {\n\n  private statusLabel: Label<LabelConfig>;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.statusLabel = new Label<LabelConfig>({ cssClass: 'ui-cast-status-label' });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-cast-status-overlay',\n      components: [this.statusLabel],\n      hidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    player.on(player.exports.PlayerEvent.CastWaitingForDevice,\n      (event: CastWaitingForDeviceEvent) => {\n        this.show();\n        // Get device name and update status text while connecting\n        let castDeviceName = event.castPayload.deviceName;\n        this.statusLabel.setText(i18n.getLocalizer('connectingTo', { castDeviceName }));\n      });\n    player.on(player.exports.PlayerEvent.CastStarted, (event: CastStartedEvent) => {\n      // Session is started or resumed\n      // For cases when a session is resumed, we do not receive the previous events and therefore show the status panel\n      // here too\n      this.show();\n      let castDeviceName = event.deviceName;\n      this.statusLabel.setText(i18n.getLocalizer('playingOn', { castDeviceName }));\n    });\n    player.on(player.exports.PlayerEvent.CastStopped, (event) => {\n      // Cast session gone, hide the status panel\n      this.hide();\n    });\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles casting to a Cast receiver.\n *\n * @category Buttons\n */\nexport class CastToggleButton extends ToggleButton<ToggleButtonConfig> {\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(\n      config,\n      {\n        cssClass: 'ui-casttogglebutton',\n        text: i18n.getLocalizer('googleCast'),\n      },\n      this.config,\n    );\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      if (!player.isCastAvailable()) {\n        player.castVideo();\n        if (console) {\n          console.log('Cast unavailable');\n        }\n        return;\n      }\n\n      if (player.isCasting()) {\n        player.castStop();\n      } else {\n        player.castVideo();\n      }\n    });\n\n    // Toggle button 'on' state\n    player.on(player.exports.PlayerEvent.CastWaitingForDevice, () => {\n      this.on();\n    });\n    player.on(player.exports.PlayerEvent.CastStarted, () => {\n      // When a session is resumed, there is no CastStart event, so we also need to toggle here for such cases\n      this.on();\n    });\n    player.on(player.exports.PlayerEvent.CastStopped, () => {\n      this.off();\n    });\n\n    // Startup init\n    if (player.isCasting()) {\n      this.on();\n    }\n  }\n}\n","import {UIContainer, UIContainerConfig} from './uicontainer';\nimport {UIInstanceManager} from '../uimanager';\nimport {Timeout} from '../timeout';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * The base container for Cast receivers that contains all of the UI and takes care that the UI is shown on\n * certain playback events.\n *\n * @category Containers\n */\nexport class CastUIContainer extends UIContainer {\n\n  private castUiHideTimeout: Timeout;\n\n  constructor(config: UIContainerConfig) {\n    super(config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    /*\n     * Show UI on Cast devices at certain playback events\n     *\n     * Since a Cast receiver does not have a direct HCI, we show the UI on certain playback events to give the user\n     * a chance to see on the screen what's going on, e.g. on play/pause or a seek the UI is shown and the user can\n     * see the current time and position on the seek bar.\n     * The UI is shown permanently while playback is paused, otherwise hides automatically after the configured\n     * hide delay time.\n     */\n\n    let isUiShown = false;\n\n    let hideUi = () => {\n      uimanager.onControlsHide.dispatch(this);\n      isUiShown = false;\n    };\n\n    this.castUiHideTimeout = new Timeout(config.hideDelay, hideUi);\n\n    let showUi = () => {\n      if (!isUiShown) {\n        uimanager.onControlsShow.dispatch(this);\n        isUiShown = true;\n      }\n    };\n\n    let showUiPermanently = () => {\n      showUi();\n      this.castUiHideTimeout.clear();\n    };\n\n    let showUiWithTimeout = () => {\n      showUi();\n      this.castUiHideTimeout.start();\n    };\n\n    let showUiAfterSeek = () => {\n      if (player.isPlaying()) {\n        showUiWithTimeout();\n      } else {\n        showUiPermanently();\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.Play, showUiWithTimeout);\n    player.on(player.exports.PlayerEvent.Paused, showUiPermanently);\n    player.on(player.exports.PlayerEvent.Seek, showUiPermanently);\n    player.on(player.exports.PlayerEvent.Seeked, showUiAfterSeek);\n\n    uimanager.getConfig().events.onUpdated.subscribe(showUiWithTimeout);\n  }\n\n  release(): void {\n    super.release();\n    this.castUiHideTimeout.clear();\n  }\n}","import {Button, ButtonConfig} from './button';\n\n/**\n * Configuration interface for a {@link ClickOverlay}.\n *\n * @category Configs\n */\nexport interface ClickOverlayConfig extends ButtonConfig {\n  /**\n   * The url to open when the overlay is clicked. Set to null to disable the click handler.\n   */\n  url?: string;\n}\n\n/**\n * A click overlay that opens an url in a new tab if clicked.\n *\n * @category Components\n */\nexport class ClickOverlay extends Button<ClickOverlayConfig> {\n\n  constructor(config: ClickOverlayConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-clickoverlay',\n      role: this.config.role,\n    }, <ClickOverlayConfig>this.config);\n  }\n\n  initialize(): void {\n    super.initialize();\n\n    this.setUrl((<ClickOverlayConfig>this.config).url);\n    let element = this.getDomElement();\n    element.on('click', () => {\n      if (element.data('url')) {\n        window.open(element.data('url'), '_blank');\n      }\n    });\n  }\n\n  /**\n   * Gets the URL that should be followed when the watermark is clicked.\n   * @returns {string} the watermark URL\n   */\n  getUrl(): string {\n    return this.getDomElement().data('url');\n  }\n\n  setUrl(url: string): void {\n    if (url === undefined || url == null) {\n      url = '';\n    }\n    this.getDomElement().data('url', url);\n  }\n}","import {ButtonConfig, Button} from './button';\nimport {UIInstanceManager} from '../uimanager';\nimport {Component, ComponentConfig} from './component';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for the {@link CloseButton}.\n *\n * @category Configs\n */\nexport interface CloseButtonConfig extends ButtonConfig {\n  /**\n   * The component that should be closed when the button is clicked.\n   */\n  target: Component<ComponentConfig>;\n}\n\n/**\n * A button that closes (hides) a configured component.\n *\n * @category Buttons\n */\nexport class CloseButton extends Button<CloseButtonConfig> {\n\n  constructor(config: CloseButtonConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-closebutton',\n      text: i18n.getLocalizer('close'),\n    } as CloseButtonConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    this.onClick.subscribe(() => {\n      config.target.hide();\n    });\n  }\n}","import {Guid} from '../guid';\nimport {DOM} from '../dom';\nimport {EventDispatcher, NoArgs, Event} from '../eventdispatcher';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n, LocalizableText } from '../localization/i18n';\n\n/**\n * Base configuration interface for a component.\n * Should be extended by components that want to add additional configuration options.\n *\n * @category Configs\n */\nexport interface ComponentConfig {\n  /**\n   * The HTML tag name of the component.\n   * Default: 'div'\n   */\n  tag?: string;\n  /**\n   * The HTML ID of the component.\n   * Default: automatically generated with pattern 'ui-id-{guid}'.\n   */\n  id?: string;\n\n  /**\n   * A prefix to prepend all CSS classes with.\n   */\n  cssPrefix?: string;\n\n  /**\n   * The CSS classes of the component. This is usually the class from where the component takes its styling.\n   */\n  cssClass?: string; // 'class' is a reserved keyword, so we need to make the name more complicated\n\n  /**\n   * Additional CSS classes of the component.\n   */\n  cssClasses?: string[];\n\n  /**\n   * Specifies if the component should be hidden at startup.\n   * Default: false\n   */\n  hidden?: boolean;\n\n  /**\n   * Specifies if the component is enabled (interactive) or not.\n   * Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * Specifies the component role for WCAG20 standard\n   */\n  role?: string;\n\n  /**\n   * WCAG20 requirement for screen reader navigation\n   */\n  tabIndex?: number;\n\n  /**\n   * WCAG20 standard for defining info about the component (usually the name)\n   */\n  ariaLabel?: LocalizableText;\n}\n\nexport interface ComponentHoverChangedEventArgs extends NoArgs {\n  /**\n   * True is the component is hovered, else false.\n   */\n  hovered: boolean;\n}\n\nexport enum ViewMode {\n  /**\n   * Indicates that the component has entered a view mode where it must stay visible. Auto-hiding of this component\n   * must be disabled as long as it resides in this state.\n   */\n  Persistent = 'persistent',\n\n  /**\n   * The control can be hidden at any time.\n   */\n  Temporary = 'temporary',\n}\n\nexport interface ViewModeChangedEventArgs extends NoArgs {\n  /**\n   * The `ViewMode` the control is currently in.\n   */\n  mode: ViewMode;\n}\n\n/**\n * The base class of the UI framework.\n * Each component must extend this class and optionally the config interface.\n *\n * @category Components\n */\nexport class Component<Config extends ComponentConfig> {\n\n  /**\n   * The classname that is attached to the element when it is in the hidden state.\n   * @type {string}\n   */\n  private static readonly CLASS_HIDDEN = 'hidden';\n\n  /**\n   * The classname that is attached to the element when it is in the disabled state.\n   * @type {string}\n   */\n  private static readonly CLASS_DISABLED = 'disabled';\n\n  /**\n   * Configuration object of this component.\n   */\n  protected config: Config;\n\n  /**\n   * The component's DOM element.\n   */\n  private element: DOM;\n\n  /**\n   * Flag that keeps track of the hidden state.\n   */\n  private hidden: boolean;\n\n  /**\n   * Flat that keeps track of the disabled state.\n   */\n  private disabled: boolean;\n\n  /**\n   * Flag that keeps track of the hover state.\n   */\n  private hovered: boolean;\n\n  /**\n   * The current view mode of the component.\n   */\n  private viewMode: ViewMode;\n\n  /**\n   * The list of events that this component offers. These events should always be private and only directly\n   * accessed from within the implementing component.\n   *\n   * Because TypeScript does not support private properties with the same name on different class hierarchy levels\n   * (i.e. superclass and subclass cannot contain a private property with the same name), the default naming\n   * convention for the event list of a component that should be followed by subclasses is the concatenation of the\n   * camel-cased class name + 'Events' (e.g. SubClass extends Component => subClassEvents).\n   * See {@link #componentEvents} for an example.\n   *\n   * Event properties should be named in camel case with an 'on' prefix and in the present tense. Async events may\n   * have a start event (when the operation starts) in the present tense, and must have an end event (when the\n   * operation ends) in the past tense (or present tense in special cases (e.g. onStart/onStarted or onPlay/onPlaying).\n   * See {@link #componentEvents#onShow} for an example.\n   *\n   * Each event should be accompanied with a protected method named by the convention eventName + 'Event'\n   * (e.g. onStartEvent), that actually triggers the event by calling {@link EventDispatcher#dispatch dispatch} and\n   * passing a reference to the component as first parameter. Components should always trigger their events with these\n   * methods. Implementing this pattern gives subclasses means to directly listen to the events by overriding the\n   * method (and saving the overhead of passing a handler to the event dispatcher) and more importantly to trigger\n   * these events without having access to the private event list.\n   * See {@link #onShow} for an example.\n   *\n   * To provide external code the possibility to listen to this component's events (subscribe, unsubscribe, etc.),\n   * each event should also be accompanied by a public getter function with the same name as the event's property,\n   * that returns the {@link Event} obtained from the event dispatcher by calling {@link EventDispatcher#getEvent}.\n   * See {@link #onShow} for an example.\n   *\n   * Full example for an event representing an example action in a example component:\n   *\n   * <code>\n   * // Define an example component class with an example event\n   * class ExampleComponent extends Component<ComponentConfig> {\n     *\n     *     private exampleComponentEvents = {\n     *         onExampleAction: new EventDispatcher<ExampleComponent, NoArgs>()\n     *     }\n     *\n     *     // constructor and other stuff...\n     *\n     *     protected onExampleActionEvent() {\n     *        this.exampleComponentEvents.onExampleAction.dispatch(this);\n     *    }\n     *\n     *    get onExampleAction(): Event<ExampleComponent, NoArgs> {\n     *        return this.exampleComponentEvents.onExampleAction.getEvent();\n     *    }\n     * }\n   *\n   * // Create an instance of the component somewhere\n   * var exampleComponentInstance = new ExampleComponent();\n   *\n   * // Subscribe to the example event on the component\n   * exampleComponentInstance.onExampleAction.subscribe(function (sender: ExampleComponent) {\n     *     console.log('onExampleAction of ' + sender + ' has fired!');\n     * });\n   * </code>\n   */\n  private componentEvents = {\n    onShow: new EventDispatcher<Component<Config>, NoArgs>(),\n    onHide: new EventDispatcher<Component<Config>, NoArgs>(),\n    onViewModeChanged: new EventDispatcher<Component<Config>, ViewModeChangedEventArgs>(),\n    onHoverChanged: new EventDispatcher<Component<Config>, ComponentHoverChangedEventArgs>(),\n    onEnabled: new EventDispatcher<Component<Config>, NoArgs>(),\n    onDisabled: new EventDispatcher<Component<Config>, NoArgs>(),\n  };\n\n  /**\n   * Constructs a component with an optionally supplied config. All subclasses must call the constructor of their\n   * superclass and then merge their configuration into the component's configuration.\n   * @param config the configuration for the component\n   */\n  constructor(config: ComponentConfig = {}) {\n    // Create the configuration for this component\n    this.config = <Config>this.mergeConfig(config, {\n      tag: 'div',\n      id: '{{PREFIX}}-id-' + Guid.next(),\n      cssPrefix: '{{PREFIX}}',\n      cssClass: 'ui-component',\n      cssClasses: [],\n      hidden: false,\n      disabled: false,\n    }, {});\n    this.viewMode = ViewMode.Temporary;\n  }\n\n  /**\n   * Initializes the component, e.g. by applying config settings.\n   * This method must not be called from outside the UI framework.\n   *\n   * This method is automatically called by the {@link UIInstanceManager}. If the component is an inner component of\n   * some component, and thus encapsulated abd managed internally and never directly exposed to the UIManager,\n   * this method must be called from the managing component's {@link #initialize} method.\n   */\n  initialize(): void {\n    this.hidden = this.config.hidden;\n    this.disabled = this.config.disabled;\n\n    // Hide the component at initialization if it is configured to be hidden\n    if (this.isHidden()) {\n      this.hidden = false; // Set flag to false for the following hide() call to work (hide() checks the flag)\n      this.hide();\n    }\n\n    // Disable the component at initialization if it is configured to be disabled\n    if (this.isDisabled()) {\n      this.disabled = false; // Set flag to false for the following disable() call to work (disable() checks the flag)\n      this.disable();\n    }\n  }\n\n  /**\n   * Configures the component for the supplied Player and UIInstanceManager. This is the place where all the magic\n   * happens, where components typically subscribe and react to events (on their DOM element, the Player, or the\n   * UIInstanceManager), and basically everything that makes them interactive.\n   * This method is called only once, when the UIManager initializes the UI.\n   *\n   * Subclasses usually overwrite this method to add their own functionality.\n   *\n   * @param player the player which this component controls\n   * @param uimanager the UIInstanceManager that manages this component\n   */\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    this.onShow.subscribe(() => uimanager.onComponentShow.dispatch(this));\n    this.onHide.subscribe(() => uimanager.onComponentHide.dispatch(this));\n    this.onViewModeChanged.subscribe((_, args) => uimanager.onComponentViewModeChanged.dispatch(this, args));\n\n    // Track the hovered state of the element\n    this.getDomElement().on('mouseenter', () => this.onHoverChangedEvent(true));\n    this.getDomElement().on('mouseleave', () => this.onHoverChangedEvent(false));\n  }\n\n  /**\n   * Releases all resources and dependencies that the component holds. Player, DOM, and UIManager events are\n   * automatically removed during release and do not explicitly need to be removed here.\n   * This method is called by the UIManager when it releases the UI.\n   *\n   * Subclasses that need to release resources should override this method and call super.release().\n   */\n  release(): void {\n    // Nothing to do here, override where necessary\n  }\n\n  /**\n   * Generate the DOM element for this component.\n   *\n   * Subclasses usually overwrite this method to extend or replace the DOM element with their own design.\n   */\n  protected toDomElement(): DOM {\n    let element = new DOM(this.config.tag, {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'role': this.config.role,\n    }, this);\n\n    return element;\n  }\n\n  /**\n   * Returns the DOM element of this component. Creates the DOM element if it does not yet exist.\n   *\n   * Should not be overwritten by subclasses.\n   *\n   * @returns {DOM}\n   */\n  getDomElement(): DOM {\n    if (!this.element) {\n      this.element = this.toDomElement();\n    }\n\n    return this.element;\n  }\n\n  /**\n   * Checks if this component has a DOM element.\n   */\n  hasDomElement(): boolean {\n    return Boolean(this.element);\n  }\n\n  setAriaLabel(label: LocalizableText): void {\n    this.setAriaAttr('label', i18n.performLocalization(label));\n  }\n\n  setAriaAttr(name: string, value: string) {\n    this.getDomElement().attr(`aria-${name}`, value);\n  }\n\n  /**\n   * Merges a configuration with a default configuration and a base configuration from the superclass.\n   *\n   * @param config the configuration settings for the components, as usually passed to the constructor\n   * @param defaults a default configuration for settings that are not passed with the configuration\n   * @param base configuration inherited from a superclass\n   * @returns {Config}\n   */\n  protected mergeConfig<Config>(config: Config, defaults: Config, base: Config): Config {\n    // Extend default config with supplied config\n    let merged = Object.assign({}, base, defaults, config);\n\n    // Return the extended config\n    return merged;\n  }\n\n  /**\n   * Helper method that returns a string of all CSS classes of the component.\n   *\n   * @returns {string}\n   */\n  protected getCssClasses(): string {\n    // Merge all CSS classes into single array\n    let flattenedArray = [this.config.cssClass].concat(this.config.cssClasses);\n    // Prefix classes\n    flattenedArray = flattenedArray.map((css) => {\n      return this.prefixCss(css);\n    });\n    // Join array values into a string\n    let flattenedString = flattenedArray.join(' ');\n    // Return trimmed string to prevent whitespace at the end from the join operation\n    return flattenedString.trim();\n  }\n\n  protected prefixCss(cssClassOrId: string): string {\n    return this.config.cssPrefix + '-' + cssClassOrId;\n  }\n\n  /**\n   * Returns the configuration object of the component.\n   * @returns {Config}\n   */\n  public getConfig(): Config {\n    return this.config;\n  }\n\n  /**\n   * Hides the component if shown.\n   * This method basically transfers the component into the hidden state. Actual hiding is done via CSS.\n   */\n  hide() {\n    if (!this.hidden) {\n      this.hidden = true;\n      this.getDomElement().addClass(this.prefixCss(Component.CLASS_HIDDEN));\n      this.onHideEvent();\n    }\n  }\n\n  /**\n   * Shows the component if hidden.\n   */\n  show() {\n    if (this.hidden) {\n      this.getDomElement().removeClass(this.prefixCss(Component.CLASS_HIDDEN));\n      this.hidden = false;\n      this.onShowEvent();\n    }\n  }\n\n  /**\n   * Determines if the component is hidden.\n   * @returns {boolean} true if the component is hidden, else false\n   */\n  isHidden(): boolean {\n    return this.hidden;\n  }\n\n  /**\n   * Determines if the component is shown.\n   * @returns {boolean} true if the component is visible, else false\n   */\n  isShown(): boolean {\n    return !this.isHidden();\n  }\n\n  /**\n   * Toggles the hidden state by hiding the component if it is shown, or showing it if hidden.\n   */\n  toggleHidden() {\n    if (this.isHidden()) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Disables the component.\n   * This method basically transfers the component into the disabled state. Actual disabling is done via CSS or child\n   * components. (e.g. Button needs to unsubscribe click listeners)\n   */\n  disable(): void {\n    if (!this.disabled) {\n      this.disabled = true;\n      this.getDomElement().addClass(this.prefixCss(Component.CLASS_DISABLED));\n      this.onDisabledEvent();\n    }\n  }\n\n  /**\n   * Enables the component.\n   * This method basically transfers the component into the enabled state. Actual enabling is done via CSS or child\n   * components. (e.g. Button needs to subscribe click listeners)\n   */\n  enable(): void {\n    if (this.disabled) {\n      this.getDomElement().removeClass(this.prefixCss(Component.CLASS_DISABLED));\n      this.disabled = false;\n      this.onEnabledEvent();\n    }\n  }\n\n  /**\n   * Determines if the component is disabled.\n   * @returns {boolean} true if the component is disabled, else false\n   */\n  isDisabled(): boolean {\n    return this.disabled;\n  }\n\n  /**\n   * Determines if the component is enabled.\n   * @returns {boolean} true if the component is enabled, else false\n   */\n  isEnabled(): boolean {\n    return !this.isDisabled();\n  }\n\n  /**\n   * Determines if the component is currently hovered.\n   * @returns {boolean} true if the component is hovered, else false\n   */\n  isHovered(): boolean {\n    return this.hovered;\n  }\n\n  /**\n   * Fires the onShow event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onShowEvent(): void {\n    this.componentEvents.onShow.dispatch(this);\n  }\n\n  /**\n   * Fires the onHide event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onHideEvent(): void {\n    this.componentEvents.onHide.dispatch(this);\n  }\n\n  /**\n   * Fires the onEnabled event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onEnabledEvent(): void {\n    this.componentEvents.onEnabled.dispatch(this);\n  }\n\n  /**\n   * Fires the onDisabled event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onDisabledEvent(): void {\n    this.componentEvents.onDisabled.dispatch(this);\n  }\n\n  /**\n   * Fires the onViewModeChanged event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onViewModeChangedEvent(mode: ViewMode): void {\n    if (this.viewMode === mode) {\n      return;\n    }\n\n    this.viewMode = mode;\n    this.componentEvents.onViewModeChanged.dispatch(this, { mode });\n  }\n\n  /**\n   * Fires the onHoverChanged event.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   */\n  protected onHoverChangedEvent(hovered: boolean): void {\n    this.hovered = hovered;\n    this.componentEvents.onHoverChanged.dispatch(this, { hovered: hovered });\n  }\n\n  /**\n   * Gets the event that is fired when the component is showing.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onShow(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onShow.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component is hiding.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onHide(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onHide.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component is enabling.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onEnabled(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onEnabled.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component is disabling.\n   * See the detailed explanation on event architecture on the {@link #componentEvents events list}.\n   * @returns {Event<Component<Config>, NoArgs>}\n   */\n  get onDisabled(): Event<Component<Config>, NoArgs> {\n    return this.componentEvents.onDisabled.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the component's hover-state is changing.\n   * @returns {Event<Component<Config>, ComponentHoverChangedEventArgs>}\n   */\n  get onHoverChanged(): Event<Component<Config>, ComponentHoverChangedEventArgs> {\n    return this.componentEvents.onHoverChanged.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the `ViewMode` of this component has changed.\n   * @returns {Event<Component<Config>, ViewModeChangedEventArgs>}\n   */\n  get onViewModeChanged(): Event<Component<Config>, ViewModeChangedEventArgs> {\n    return this.componentEvents.onViewModeChanged.getEvent();\n  }\n}","import { ComponentConfig, Component, ViewModeChangedEventArgs, ViewMode } from './component';\nimport {DOM} from '../dom';\nimport {ArrayUtils} from '../arrayutils';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link Container}.\n *\n * @category Configs\n */\nexport interface ContainerConfig extends ComponentConfig {\n  /**\n   * Child components of the container.\n   */\n  components?: Component<ComponentConfig>[];\n}\n\n/**\n * A container component that can contain a collection of child components.\n * Components can be added at construction time through the {@link ContainerConfig#components} setting, or later\n * through the {@link Container#addComponent} method. The UIManager automatically takes care of all components, i.e. it\n * initializes and configures them automatically.\n *\n * In the DOM, the container consists of an outer <div> (that can be configured by the config) and an inner wrapper\n * <div> that contains the components. This double-<div>-structure is often required to achieve many advanced effects\n * in CSS and/or JS, e.g. animations and certain formatting with absolute positioning.\n *\n * DOM example:\n * <code>\n *     <div class='ui-container'>\n *         <div class='container-wrapper'>\n *             ... child components ...\n *         </div>\n *     </div>\n * </code>\n *\n * @category Components\n */\nexport class Container<Config extends ContainerConfig> extends Component<Config> {\n\n  /**\n   * A reference to the inner element that contains the components of the container.\n   */\n  private innerContainerElement: DOM;\n  private componentsToAdd: Component<ComponentConfig>[];\n  private componentsToRemove: Component<ComponentConfig>[];\n  private componentsInPersistentViewMode: number;\n\n  constructor(config: Config) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-container',\n      components: [],\n    } as Config, this.config);\n\n    this.componentsToAdd = [];\n    this.componentsToRemove = [];\n    this.componentsInPersistentViewMode = 0;\n  }\n\n  /**\n   * Adds a child component to the container.\n   * @param component the component to add\n   */\n  addComponent(component: Component<ComponentConfig>) {\n    this.config.components.push(component);\n    this.componentsToAdd.push(component);\n  }\n\n  /**\n   * Removes a child component from the container.\n   * @param component the component to remove\n   * @returns {boolean} true if the component has been removed, false if it is not contained in this container\n   */\n  removeComponent(component: Component<ComponentConfig>): boolean {\n    if (ArrayUtils.remove(this.config.components, component) != null) {\n      this.componentsToRemove.push(component);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Gets an array of all child components in this container.\n   * @returns {Component<ComponentConfig>[]}\n   */\n  getComponents(): Component<ComponentConfig>[] {\n    return this.config.components;\n  }\n\n  /**\n   * Removes all child components from the container.\n   */\n  removeComponents(): void {\n    for (let component of this.getComponents().slice()) {\n      this.removeComponent(component);\n    }\n  }\n\n  /**\n   * Updates the DOM of the container with the current components.\n   */\n  protected updateComponents(): void {\n    /* We cannot just clear the container to remove all elements and then re-add those that should stay, because\n     * IE looses the innerHTML of unattached elements, leading to empty elements within the container (e.g. missing\n     * subtitle text in SubtitleLabel).\n     * Instead, we keep a list of elements to add and remove, leaving remaining elements alone. By keeping them in\n     * the DOM, their content gets preserved in all browsers.\n     */\n    let component;\n\n    while (component = this.componentsToRemove.shift()) {\n      component.getDomElement().remove();\n    }\n\n    while (component = this.componentsToAdd.shift()) {\n      this.innerContainerElement.append(component.getDomElement());\n    }\n  }\n\n  protected toDomElement(): DOM {\n    // Create the container element (the outer <div>)\n    let containerElement = new DOM(this.config.tag, {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'role': this.config.role,\n      'aria-label': i18n.performLocalization(this.config.ariaLabel),\n    }, this);\n\n    // Create the inner container element (the inner <div>) that will contain the components\n    let innerContainer = new DOM(this.config.tag, {\n      'class': this.prefixCss('container-wrapper'),\n    });\n    this.innerContainerElement = innerContainer;\n\n    for (let initialComponent of this.config.components) {\n      this.componentsToAdd.push(initialComponent);\n    }\n    this.updateComponents();\n\n    containerElement.append(innerContainer);\n\n    return containerElement;\n  }\n\n  protected suspendHideTimeout(): void {\n    // to be implemented in subclass\n  }\n\n  protected resumeHideTimeout(): void {\n    // to be implemented in subclass\n  }\n\n  protected trackComponentViewMode(mode: ViewMode) {\n    if (mode === ViewMode.Persistent) {\n      this.componentsInPersistentViewMode++;\n    } else if (mode === ViewMode.Temporary) {\n      this.componentsInPersistentViewMode = Math.max(this.componentsInPersistentViewMode - 1, 0);\n    }\n\n    if (this.componentsInPersistentViewMode > 0) {\n      // There is at least one component that must not be hidden,\n      // therefore the hide timeout must be suspended\n      this.suspendHideTimeout();\n    } else {\n      this.resumeHideTimeout();\n    }\n  }\n}","import {ContainerConfig, Container} from './container';\nimport {UIInstanceManager} from '../uimanager';\nimport {UIUtils} from '../uiutils';\nimport {Spacer} from './spacer';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { BrowserUtils } from '../browserutils';\nimport {Component, ComponentConfig} from './component';\nimport {SettingsPanel} from './settingspanel';\n\n/**\n * Configuration interface for the {@link ControlBar}.\n *\n * @category Configs\n */\nexport interface ControlBarConfig extends ContainerConfig {\n  // nothing yet\n}\n\n/**\n * A container for main player control components, e.g. play toggle button, seek bar, volume control, fullscreen toggle\n * button.\n *\n * @category Components\n */\nexport class ControlBar extends Container<ControlBarConfig> {\n\n  constructor(config: ControlBarConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-controlbar',\n      hidden: true,\n      role: 'region',\n      ariaLabel: i18n.getLocalizer('controlBar'),\n    }, <ControlBarConfig>this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    // Counts how many components are hovered and block hiding of the control bar\n    let hoverStackCount = 0;\n    let isSettingsPanelShown = false;\n\n    // Only enabling this for platforms without touch input.\n    // Enabling this for touch devices causes the UI to not disappear after hideDelay seconds,\n    // because `mouseleave` event is not emitted.\n    // Instead, it will stay visible until another manual interaction is performed.\n    if (uimanager.getConfig().disableAutoHideWhenHovered && !BrowserUtils.isTouchSupported) {\n      // Track hover status of child components\n      UIUtils.traverseTree(this, (component) => {\n        // Do not track hover status of child containers or spacers, only of 'real' controls\n        if (component instanceof Container || component instanceof Spacer) {\n          return;\n        }\n\n        // Subscribe hover event and keep a count of the number of hovered children\n        component.onHoverChanged.subscribe((_, args) => {\n          if (args.hovered) {\n            hoverStackCount++;\n          } else {\n            hoverStackCount--;\n          }\n        });\n      });\n    }\n\n    if (BrowserUtils.isMobile) {\n      uimanager.onComponentShow.subscribe((component: Component<ComponentConfig>) => {\n        if (component instanceof SettingsPanel) {\n          isSettingsPanelShown = true;\n        }\n      });\n\n      uimanager.onComponentHide.subscribe((component: Component<ComponentConfig>) => {\n        if (component instanceof SettingsPanel) {\n          isSettingsPanelShown = false;\n        }\n      });\n    }\n\n    uimanager.onControlsShow.subscribe(() => {\n      this.show();\n    });\n\n    uimanager.onPreviewControlsHide.subscribe((sender, args) => {\n      // Cancel the hide event if hovered child components block hiding or if the settings panel is active on mobile.\n      args.cancel = args.cancel || (hoverStackCount > 0 || isSettingsPanelShown);\n    });\n\n    uimanager.onControlsHide.subscribe(() => {\n      this.hide();\n    });\n  }\n}\n","import { PlayerAPI, SegmentPlaybackEvent, VideoQuality } from 'bitmovin-player';\r\nimport { i18n } from '../localization/i18n';\r\nimport { Container, ContainerConfig } from './container';\r\nimport { EcoModeToggleButton } from './ecomodetogglebutton';\r\nimport { Label, LabelConfig } from './label';\r\nimport { SettingsPanelItem } from './settingspanelitem';\r\n\r\n/**\r\n * @category Containers\r\n */\r\nexport class EcoModeContainer extends Container<ContainerConfig> {\r\n  private ecoModeSavedEmissionsItem: SettingsPanelItem;\r\n  private ecoModeToggleButtonItem: SettingsPanelItem;\r\n  private emissionsSavedLabel: Label<LabelConfig>;\r\n  private savedEmissons = 0;\r\n  private currentEnergyEmission: number;\r\n\r\n  constructor(config: ContainerConfig = {}) {\r\n    super(config);\r\n\r\n    const ecoModeToggleButton = new EcoModeToggleButton();\r\n    const labelEcoMode = new Label({\r\n      text: i18n.getLocalizer('ecoMode.title'),\r\n      for: ecoModeToggleButton.getConfig().id,\r\n      id: 'ecomodelabel',\r\n    });\r\n    this.emissionsSavedLabel = new Label({\r\n      text: `${this.savedEmissons.toFixed(4)} gCO2`,\r\n      cssClass: 'ui-label-savedEnergy',\r\n    });\r\n\r\n    this.ecoModeToggleButtonItem = new SettingsPanelItem(labelEcoMode, ecoModeToggleButton);\r\n    this.ecoModeSavedEmissionsItem = new SettingsPanelItem('Saved Emissions', this.emissionsSavedLabel, {\r\n      hidden: true,\r\n    });\r\n\r\n    this.addComponent(this.ecoModeToggleButtonItem);\r\n    this.addComponent(this.ecoModeSavedEmissionsItem);\r\n\r\n    ecoModeToggleButton.onToggleOn.subscribe(() => {\r\n      this.ecoModeSavedEmissionsItem.show();\r\n      this.onToggleCallback();\r\n    });\r\n\r\n    ecoModeToggleButton.onToggleOff.subscribe(() => {\r\n      this.ecoModeSavedEmissionsItem.hide();\r\n      this.onToggleCallback();\r\n    });\r\n  }\r\n\r\n  private onToggleCallback: () => void;\r\n\r\n  public setOnToggleCallback(callback: () => void) {\r\n    this.onToggleCallback = callback;\r\n  }\r\n\r\n  configure(player: PlayerAPI): void {\r\n    player.on(player.exports.PlayerEvent.SegmentPlayback, (segment: SegmentPlaybackEvent) => {\r\n      if (!segment.mimeType.includes('video')) {\r\n        return;\r\n      }\r\n\r\n      const { height, width, bitrate, frameRate } = segment.mediaInfo;\r\n      const {\r\n        height: maxHeight,\r\n        bitrate: maxBitrate,\r\n        width: maxWidth,\r\n      } = this.getMaxQualityAvailable(player.getAvailableVideoQualities());\r\n\r\n      const currentEnergyKwh = this.calculateEnergyConsumption(frameRate, height, width, bitrate, segment.duration);\r\n\r\n      const maxEnergyKwh = this.calculateEnergyConsumption(\r\n        frameRate,\r\n        maxHeight,\r\n        maxWidth,\r\n        maxBitrate,\r\n        segment.duration,\r\n      );\r\n\r\n      if (this.ecoModeSavedEmissionsItem.isShown()) {\r\n        this.updateSavedEmissions(currentEnergyKwh, maxEnergyKwh, this.emissionsSavedLabel);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSavedEmissions(\r\n    currentEnergyConsuption: number,\r\n    maxEnergyConsuption: number,\r\n    emissionsSavedLabel: Label<LabelConfig>,\r\n  ) {\r\n    // 475 is the average carbon intensity of all countries in gCO2/kWh\r\n    const averageCarbonIntensity = 475;\r\n\r\n    this.currentEnergyEmission = currentEnergyConsuption * averageCarbonIntensity;\r\n    const maxEnergyEmisson = maxEnergyConsuption * averageCarbonIntensity;\r\n    this.savedEmissons += maxEnergyEmisson - this.currentEnergyEmission;\r\n    emissionsSavedLabel.setText(this.savedEmissons.toFixed(4) + ' gCO2');\r\n  }\r\n\r\n  /**\r\n   * The calculations are based on the following paper: https://arxiv.org/pdf/2210.05444.pdf\r\n   */\r\n  calculateEnergyConsumption(fps: number, height: number, width: number, bitrate: number, duration: number): number {\r\n    const fpsWeight = 0.035;\r\n    const pixeldWeight = 5.76e-9;\r\n    const birateWeight = 6.97e-6;\r\n    const constantOffset = 8.52;\r\n    const bitrateInternetWeight = 3.24e-5;\r\n    const internetConnectionOffset = 1.15;\r\n    const videoCodec = 4.16;\r\n\r\n    const energyConsumptionW =\r\n      fpsWeight * fps +\r\n      pixeldWeight * height * width +\r\n      (birateWeight + bitrateInternetWeight) * (bitrate / 1000) +\r\n      videoCodec +\r\n      constantOffset +\r\n      internetConnectionOffset;\r\n\r\n    // Convert energy consumption from Watts (W) to Kilowatt-hours (kWh) for the given time duration of the segment\r\n    const energyConsumptionKwh = (energyConsumptionW * duration) / 3.6e6;\r\n\r\n    return energyConsumptionKwh;\r\n  }\r\n  getMaxQualityAvailable(availableVideoQualities: VideoQuality[]) {\r\n    const sortedQualities = availableVideoQualities.sort((a, b) => a.bitrate - b.bitrate);\r\n    return sortedQualities[sortedQualities.length - 1];\r\n  }\r\n}\r\n","import { ToggleButton, ToggleButtonConfig } from './togglebutton';\r\nimport { UIInstanceManager } from '../uimanager';\r\nimport { DynamicAdaptationConfig, PlayerAPI, VideoQualityChangedEvent } from 'bitmovin-player';\r\nimport { i18n } from '../localization/i18n';\r\n\r\n/**\r\n * @category Buttons\r\n */\r\nexport class EcoModeToggleButton extends ToggleButton<ToggleButtonConfig> {\r\n  private adaptationConfig: DynamicAdaptationConfig;\r\n\r\n  constructor(config: ToggleButtonConfig = {}) {\r\n    super(config);\r\n\r\n    const defaultConfig: ToggleButtonConfig = {\r\n      text: i18n.getLocalizer('ecoMode'),\r\n      cssClass: 'ui-ecomodetogglebutton',\r\n      onClass: 'on',\r\n      offClass: 'off',\r\n      ariaLabel: i18n.getLocalizer('ecoMode'),\r\n    };\r\n\r\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\r\n  }\r\n\r\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\r\n    super.configure(player, uimanager);\r\n\r\n    if (this.areAdaptationApisAvailable(player)) {\r\n      this.onClick.subscribe(() => {\r\n        this.toggle();\r\n      });\r\n\r\n      this.onToggleOn.subscribe(() => {\r\n        this.enableEcoMode(player);\r\n        player.setVideoQuality('auto');\r\n      });\r\n\r\n      this.onToggleOff.subscribe(() => {\r\n        this.disableEcoMode(player);\r\n      });\r\n\r\n      player.on(player.exports.PlayerEvent.VideoQualityChanged, (quality: VideoQualityChangedEvent) => {\r\n        if (quality.targetQuality.id !== 'auto') {\r\n          this.off();\r\n          this.disableEcoMode(player);\r\n        }\r\n      });\r\n    } else {\r\n      super.disable();\r\n    }\r\n\r\n  }\r\n\r\n  private areAdaptationApisAvailable(player: PlayerAPI): boolean {\r\n    const isGetConfigAvailable = Boolean(player.adaptation.getConfig && typeof player.adaptation.getConfig === 'function');\r\n    const isSetConfigAvailable = Boolean(player.adaptation.setConfig && typeof player.adaptation.setConfig === 'function');\r\n\r\n    return Boolean(player.adaptation && isGetConfigAvailable && isSetConfigAvailable);\r\n  }\r\n\r\n  enableEcoMode(player: PlayerAPI): void {\r\n    this.adaptationConfig = player.adaptation.getConfig();\r\n    const codec = player.getAvailableVideoQualities()[0].codec;\r\n\r\n    if (codec.includes('avc')) {\r\n      player.adaptation.setConfig({\r\n        resolution: { maxSelectableVideoHeight: 720 },\r\n        limitToPlayerSize: true,\r\n      });\r\n    }\r\n    if (codec.includes('hvc') || codec.includes('hev')) {\r\n      player.adaptation.setConfig({\r\n        resolution: { maxSelectableVideoHeight: 1080 },\r\n        limitToPlayerSize: true,\r\n      });\r\n    }\r\n    if (codec.includes('av1') || codec.includes('av01')) {\r\n      player.adaptation.setConfig({\r\n        resolution: { maxSelectableVideoHeight: 1440 },\r\n        limitToPlayerSize: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  disableEcoMode(player: PlayerAPI): void {\r\n    player.adaptation.setConfig(this.adaptationConfig);\r\n  }\r\n}\r\n","import {ContainerConfig, Container} from './container';\nimport {Label, LabelConfig} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport {TvNoiseCanvas} from './tvnoisecanvas';\nimport { ErrorUtils } from '../errorutils';\nimport { ErrorEvent, PlayerAPI, PlayerEventBase } from 'bitmovin-player';\nimport {\n  isMobileV3PlayerAPI,\n  MobileV3PlayerAPI, MobileV3PlayerErrorEvent, MobileV3PlayerEvent, MobileV3SourceErrorEvent,\n} from '../mobilev3playerapi';\nimport { GoBackButton } from '../../custom/ts/components/gobackbutton';\n\nexport interface ErrorMessageTranslator {\n  (error: ErrorEvent | MobileV3PlayerErrorEvent): string;\n}\n\nexport interface ErrorMessageMap {\n  [code: number]: string | ErrorMessageTranslator;\n}\n\n/**\n * Configuration interface for the {@link ErrorMessageOverlay}.\n *\n * @category Configs\n */\nexport interface ErrorMessageOverlayConfig extends ContainerConfig {\n  /**\n   * Allows overwriting of the error messages displayed in the overlay for customization and localization.\n   * This is either a function that receives any {@link ErrorEvent} as parameter and translates error messages,\n   * or a map of error codes that overwrites specific error messages with a plain string or a function that\n   * receives the {@link ErrorEvent} as parameter and returns a customized string.\n   * The translation functions can be used to extract data (e.g. parameters) from the original error message.\n   *\n   * Example 1 (catch-all translation function):\n   * <code>\n   * errorMessageOverlayConfig = {\n   *   messages: function(error) {\n   *     switch (error.code) {\n   *       // Overwrite error 1000 'Unknown error'\n   *       case 1000:\n   *         return 'Houston, we have a problem'\n   *\n   *       // Transform error 1201 'The downloaded manifest is invalid' to uppercase\n   *       case 1201:\n   *         var description = ErrorUtils.defaultErrorMessages[error.code];\n   *         return description.toUpperCase();\n   *\n   *       // Customize error 1207 'The manifest could not be loaded'\n   *       case 1207:\n   *         var statusCode = error.data.statusCode;\n   *         return 'Manifest loading failed with HTTP error ' + statusCode;\n   *     }\n   *     // Return unmodified error message for all other errors\n   *     return error.message;\n   *   }\n   * };\n   * </code>\n   *\n   * Example 2 (translating specific errors):\n   * <code>\n   * errorMessageOverlayConfig = {\n   *   messages: {\n   *     // Overwrite error 1000 'Unknown error'\n   *     1000: 'Houston, we have a problem',\n   *\n   *     // Transform error 1201 'Unsupported manifest format' to uppercase\n   *     1201: function(error) {\n   *       var description = ErrorUtils.defaultErrorMessages[error.code];\n   *       return description.toUpperCase();\n   *     },\n   *\n   *     // Customize error 1207 'The manifest could not be loaded'\n   *     1207: function(error) {\n   *       var statusCode = error.data.statusCode;\n   *       return 'Manifest loading failed with HTTP error ' + statusCode;\n   *     }\n   *   }\n   * };\n   * </code>\n   */\n  messages?: ErrorMessageMap | ErrorMessageTranslator;\n}\n\n/**\n * Overlays the player and displays error messages.\n *\n * @category Components\n */\nexport class ErrorMessageOverlay extends Container<ErrorMessageOverlayConfig> {\n\n  private errorLabel: Label<LabelConfig>;\n  private tvNoiseBackground: TvNoiseCanvas;\n\n  constructor(config: ErrorMessageOverlayConfig = {}) {\n    super(config);\n\n    this.errorLabel = new Label<LabelConfig>({ cssClass: 'ui-errormessage-label' });\n    this.tvNoiseBackground = new TvNoiseCanvas();\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-errormessage-overlay',\n      components: [this.tvNoiseBackground, this.errorLabel, new GoBackButton({ error: true })],\n      hidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI | MobileV3PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    const handleErrorMessage = (\n      event: ErrorEvent | MobileV3SourceErrorEvent | MobileV3PlayerErrorEvent,\n      message: string,\n    ) => {\n      const customizedMessage = customizeErrorMessage(uimanager.getConfig().errorMessages || config.messages, event);\n      if (customizedMessage) {\n        message = customizedMessage;\n      }\n\n      this.display(message);\n    };\n\n    if (isMobileV3PlayerAPI(player)) {\n      const errorEventHandler = (event: MobileV3SourceErrorEvent | MobileV3PlayerErrorEvent) => {\n        const message = ErrorUtils.defaultMobileV3ErrorMessageTranslator(event);\n        handleErrorMessage(event, message);\n      };\n\n      player.on(MobileV3PlayerEvent.PlayerError, errorEventHandler);\n      player.on(MobileV3PlayerEvent.SourceError, errorEventHandler);\n    } else {\n      player.on(player.exports.PlayerEvent.Error, (event: ErrorEvent) => {\n        let message = ErrorUtils.defaultWebErrorMessageTranslator(event);\n        handleErrorMessage(event, message);\n      });\n    }\n\n    player.on(player.exports.PlayerEvent.SourceLoaded, (event: PlayerEventBase) => {\n      if (this.isShown()) {\n        this.tvNoiseBackground.stop();\n        this.hide();\n      }\n    });\n  }\n\n  display(errorMessage: string): void {\n    this.errorLabel.setText(errorMessage);\n    this.tvNoiseBackground.start();\n    this.show();\n  }\n\n  release(): void {\n    super.release();\n\n    // Canvas rendering must be explicitly stopped, else it just continues forever and hogs resources\n    this.tvNoiseBackground.stop();\n  }\n}\n\nfunction customizeErrorMessage(\n  errorMessages: ErrorMessageTranslator | ErrorMessageMap,\n  event: ErrorEvent | MobileV3PlayerErrorEvent | MobileV3SourceErrorEvent,\n): string | undefined {\n  if (!errorMessages) {\n    return undefined;\n  }\n\n  // Process message vocabularies\n  if (typeof errorMessages === 'function') {\n    // Translation function for all errors\n    return errorMessages(event);\n  }\n  if (errorMessages[event.code]) {\n    // It's not a translation function, so it must be a map of strings or translation functions\n    const customMessage = errorMessages[event.code];\n\n    return typeof customMessage === 'string' ? customMessage : customMessage(event);\n  }\n}\n","import { ToggleButton, ToggleButtonConfig } from './togglebutton';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles the player between windowed and fullscreen view.\n *\n * @category Buttons\n */\nexport class FullscreenToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-fullscreentogglebutton',\n      text: i18n.getLocalizer('fullscreen'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    const isFullScreenAvailable = () => {\n      return player.isViewModeAvailable(player.exports.ViewMode.Fullscreen);\n    };\n\n    const fullscreenStateHandler = () => {\n      player.getViewMode() === player.exports.ViewMode.Fullscreen ? this.on() : this.off();\n    };\n\n    const fullscreenAvailabilityChangedHandler = () => {\n      isFullScreenAvailable() ? this.show() : this.hide();\n    };\n\n    player.on(player.exports.PlayerEvent.ViewModeChanged, fullscreenStateHandler);\n\n    // Available only in our native SDKs for now\n    if ((player.exports.PlayerEvent as any).ViewModeAvailabilityChanged) {\n      player.on(\n        (player.exports.PlayerEvent as any).ViewModeAvailabilityChanged,\n        fullscreenAvailabilityChangedHandler,\n      );\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(fullscreenAvailabilityChangedHandler);\n\n    this.onClick.subscribe(() => {\n      if (!isFullScreenAvailable()) {\n        if (console) {\n          console.log('Fullscreen unavailable');\n        }\n        return;\n      }\n\n      const targetViewMode =\n        player.getViewMode() === player.exports.ViewMode.Fullscreen\n          ? player.exports.ViewMode.Inline\n          : player.exports.ViewMode.Fullscreen;\n\n      player.setViewMode(targetViewMode);\n    });\n\n    // Startup init\n    fullscreenAvailabilityChangedHandler();\n    fullscreenStateHandler();\n  }\n}\n","import {PlaybackToggleButton, PlaybackToggleButtonConfig} from './playbacktogglebutton';\nimport {DOM} from '../dom';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI, PlayerEventBase, WarningEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that overlays the video and toggles between playback and pause.\n *\n * @category Buttons\n */\nexport class HugePlaybackToggleButton extends PlaybackToggleButton {\n\n  constructor(config: PlaybackToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-hugeplaybacktogglebutton',\n      text: i18n.getLocalizer('playPause'),\n      role: 'button',\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    // Update button state through API events\n    super.configure(player, uimanager, false);\n\n    // Set enterFullscreenOnInitialPlayback if set in the uimanager config\n    if (typeof uimanager.getConfig().enterFullscreenOnInitialPlayback === 'boolean') {\n      this.config.enterFullscreenOnInitialPlayback = uimanager.getConfig().enterFullscreenOnInitialPlayback;\n    }\n\n    let togglePlayback = () => {\n      if (player.isPlaying() || this.isPlayInitiated) {\n        player.pause('ui');\n      } else {\n        player.play('ui');\n      }\n    };\n\n    let toggleFullscreen = () => {\n      if (player.getViewMode() === player.exports.ViewMode.Fullscreen) {\n        player.setViewMode(player.exports.ViewMode.Inline);\n      } else {\n        player.setViewMode(player.exports.ViewMode.Fullscreen);\n      }\n    };\n\n    let firstPlay = true;\n    let clickTime = 0;\n    let doubleClickTime = 0;\n\n    /*\n     * YouTube-style toggle button handling\n     *\n     * The goal is to prevent a short pause or playback interval between a click, that toggles playback, and a\n     * double click, that toggles fullscreen. In this naive approach, the first click would e.g. start playback,\n     * the second click would be detected as double click and toggle to fullscreen, and as second normal click stop\n     * playback, which results is a short playback interval with max length of the double click detection\n     * period (usually 500ms).\n     *\n     * To solve this issue, we defer handling of the first click for 200ms, which is almost unnoticeable to the user,\n     * and just toggle playback if no second click (double click) has been registered during this period. If a double\n     * click is registered, we just toggle the fullscreen. In the first 200ms, undesired playback changes thus cannot\n     * happen. If a double click is registered within 500ms, we undo the playback change and switch fullscreen mode.\n     * In the end, this method basically introduces a 200ms observing interval in which playback changes are prevented\n     * if a double click happens.\n     */\n    this.onClick.subscribe(() => {\n      // Directly start playback on first click of the button.\n      // This is a required workaround for mobile browsers where video playback needs to be triggered directly\n      // by the user. A deferred playback start through the timeout below is not considered as user action and\n      // therefore ignored by mobile browsers.\n      if (firstPlay) {\n        // Try to start playback. Then we wait for Play and only when it arrives, we disable the firstPlay flag.\n        // If we disable the flag here, onClick was triggered programmatically instead of by a user interaction, and\n        // playback is blocked (e.g. on mobile devices due to the programmatic play() call), we loose the chance to\n        // ever start playback through a user interaction again with this button.\n        togglePlayback();\n\n        if (this.config.enterFullscreenOnInitialPlayback) {\n          player.setViewMode(player.exports.ViewMode.Fullscreen);\n        }\n\n        return;\n      }\n\n      let now = Date.now();\n\n      if (now - clickTime < 200) {\n        // We have a double click inside the 200ms interval, just toggle fullscreen mode\n        toggleFullscreen();\n        doubleClickTime = now;\n        return;\n      } else if (now - clickTime < 500) {\n        // We have a double click inside the 500ms interval, undo playback toggle and toggle fullscreen mode\n        toggleFullscreen();\n        togglePlayback();\n        doubleClickTime = now;\n        return;\n      }\n\n      clickTime = now;\n\n      setTimeout(() => {\n        if (Date.now() - doubleClickTime > 200) {\n          // No double click detected, so we toggle playback and wait what happens next\n          togglePlayback();\n        }\n      }, 200);\n    });\n\n    player.on(player.exports.PlayerEvent.Play, () => {\n      // Playback has really started, we can disable the flag to switch to normal toggle button handling\n      firstPlay = false;\n    });\n\n    player.on(player.exports.PlayerEvent.Warning, (event: WarningEvent) => {\n      if (event.code === player.exports.WarningCode.PLAYBACK_COULD_NOT_BE_STARTED) {\n        // if playback could not be started, reset the first play flag as we need the user interaction to start\n        firstPlay = true;\n      }\n    });\n\n    const suppressPlayButtonTransitionAnimation = () => {\n      // Disable the current animation\n      this.setTransitionAnimationsEnabled(false);\n\n      // Enable the transition animations for the next state change\n      this.onToggle.subscribeOnce(() => {\n        this.setTransitionAnimationsEnabled(true);\n      });\n    };\n\n    // Hide the play button animation when the UI is loaded (it should only be animated on state changes)\n    suppressPlayButtonTransitionAnimation();\n\n    const isAutoplayEnabled = player.getConfig().playback && Boolean(player.getConfig().playback.autoplay);\n    // We only know if an autoplay attempt is upcoming if the player is not yet ready. It the player is already ready,\n    // the attempt might be upcoming or might have already happened, but we don't have to handle that because we can\n    // simply rely on isPlaying and the play state events.\n    const isAutoplayUpcoming = !player.getSource() && isAutoplayEnabled;\n\n    // Hide the play button when the player is already playing or autoplay is upcoming\n    if (player.isPlaying() || isAutoplayUpcoming) {\n      // Hide the play button (switch to playing state)\n      this.on();\n      // Disable the animation of the playing state switch\n      suppressPlayButtonTransitionAnimation();\n\n      // Show the play button without an animation if a play attempt is blocked\n      player.on(player.exports.PlayerEvent.Warning, (event: WarningEvent) => {\n        if (event.code === player.exports.WarningCode.PLAYBACK_COULD_NOT_BE_STARTED) {\n          suppressPlayButtonTransitionAnimation();\n        }\n      });\n    }\n  }\n\n  protected toDomElement(): DOM {\n    let buttonElement = super.toDomElement();\n\n    // Add child that contains the play button image\n    // Setting the image directly on the button does not work together with scaling animations, because the button\n    // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined\n    // to the size if the image, it can scale inside the player without overshooting.\n    buttonElement.append(new DOM('div', {\n      'class': this.prefixCss('image'),\n    }));\n\n    return buttonElement;\n  }\n\n  /**\n   * Enables or disables the play state transition animations of the play button image. Can be used to suppress\n   * animations.\n   * @param {boolean} enabled true to enable the animations (default), false to disable them\n   */\n  protected setTransitionAnimationsEnabled(enabled: boolean): void {\n    const noTransitionAnimationsClass = this.prefixCss('no-transition-animations');\n\n    if (enabled) {\n      this.getDomElement().removeClass(noTransitionAnimationsClass);\n    } else if (!this.getDomElement().hasClass(noTransitionAnimationsClass)) {\n      this.getDomElement().addClass(noTransitionAnimationsClass);\n    }\n  }\n}\n","import {ButtonConfig, Button} from './button';\nimport {DOM} from '../dom';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button to play/replay a video.\n *\n * @category Buttons\n */\nexport class HugeReplayButton extends Button<ButtonConfig> {\n\n  constructor(config: ButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-hugereplaybutton',\n      text: i18n.getLocalizer('replay'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      player.play('ui');\n    });\n  }\n\n  protected toDomElement(): DOM {\n    let buttonElement = super.toDomElement();\n\n    // Add child that contains the play button image\n    // Setting the image directly on the button does not work together with scaling animations, because the button\n    // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined\n    // to the size if the image, it can scale inside the player without overshooting.\n    buttonElement.append(new DOM('div', {\n      'class': this.prefixCss('image'),\n    }));\n\n    return buttonElement;\n  }\n}","import {ListSelector, ListSelectorConfig} from './listselector';\nimport {DOM} from '../dom';\nimport { i18n } from '../localization/i18n';\n\n/**\n * @category Components\n */\nexport class ItemSelectionList extends ListSelector<ListSelectorConfig> {\n\n  private static readonly CLASS_SELECTED = 'selected';\n\n  private listElement: DOM;\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      tag: 'ul',\n      cssClass: 'ui-itemselectionlist',\n    }, this.config);\n  }\n\n  protected isActive(): boolean {\n    return this.items.length > 1;\n  }\n\n  protected toDomElement(): DOM {\n    let listElement = new DOM('ul', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n    }, this);\n\n    this.listElement = listElement;\n    this.updateDomItems();\n\n    return listElement;\n  }\n\n  protected updateDomItems(selectedValue: string = null) {\n    // Delete all children\n    this.listElement.empty();\n\n    let selectedListItem: DOM = null;\n\n    const selectItem = (listItem: DOM) => {\n      listItem.addClass(this.prefixCss(ItemSelectionList.CLASS_SELECTED));\n    };\n\n    const deselectItem = (listItem: DOM) => {\n      listItem.removeClass(this.prefixCss(ItemSelectionList.CLASS_SELECTED));\n    };\n\n    for (let item of this.items) {\n      let listItem = new DOM('li', {\n        'type': 'li',\n        'class': this.prefixCss('ui-selectionlistitem'),\n      }).append(new DOM('a', {\n      }).html(i18n.performLocalization(item.label)));\n\n      if (!selectedListItem) {\n        if (selectedValue == null) { // If there is no pre-selected value, select the first one\n          selectedListItem = listItem;\n        } else if (String(selectedValue) === item.key) { // convert selectedValue to string to catch 'null'/null case\n          selectedListItem = listItem;\n        }\n      }\n\n      // Handle list item selections\n      listItem.on('click', () => {\n        // Deselect the previous item (if there was a selected item)\n        if (selectedListItem) {\n          deselectItem(selectedListItem);\n        }\n\n        // Select the clicked item\n        selectedListItem = listItem;\n        selectItem(listItem);\n\n        // Fire the event\n        this.onItemSelectedEvent(item.key, false);\n      });\n\n      // Select default item\n      if (selectedListItem) {\n        selectItem(selectedListItem);\n      }\n\n      this.listElement.append(listItem);\n    }\n  }\n\n  protected onItemAddedEvent(value: string) {\n    super.onItemAddedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemRemovedEvent(value: string) {\n    super.onItemRemovedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemSelectedEvent(value: string, updateDomItems: boolean = true) {\n    super.onItemSelectedEvent(value);\n    if (updateDomItems) {\n      this.updateDomItems(value);\n    }\n  }\n}\n","import {ComponentConfig, Component} from './component';\nimport {DOM} from '../dom';\nimport {EventDispatcher, Event, NoArgs} from '../eventdispatcher';\nimport { LocalizableText, i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link Label} component.\n *\n * @category Configs\n */\nexport interface LabelConfig extends ComponentConfig {\n  /**\n   * The text as string or localize callback on the label.\n   */\n  text?: LocalizableText;\n\n  /**\n   * WCAG20 standard: Associate label to form control.\n   */\n  for?: string;\n}\n\n/**\n * A simple text label.\n *\n * DOM example:\n * <code>\n *     <span class='ui-label'>...some text...</span>\n * </code>\n *\n * @category Components\n */\nexport class Label<Config extends LabelConfig> extends Component<Config> {\n\n  private text: LocalizableText;\n\n  private labelEvents = {\n    onClick: new EventDispatcher<Label<Config>, NoArgs>(),\n    onTextChanged: new EventDispatcher<Label<Config>, string>(),\n  };\n\n  constructor(config: Config = {} as Config) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-label',\n    } as Config, this.config);\n    this.text = this.config.text;\n  }\n\n  protected toDomElement(): DOM {\n    const tagName = this.config.for != null ? 'label' : 'span';\n\n    let labelElement = new DOM(tagName, {\n      'id': this.config.id,\n      'for': this.config.for,\n      'class': this.getCssClasses(),\n    }, this).html(i18n.performLocalization(this.text));\n\n    labelElement.on('click', () => {\n      this.onClickEvent();\n    });\n\n    return labelElement;\n  }\n\n  /**\n   * Set the text on this label.\n   * @param text\n   */\n  setText(text: LocalizableText) {\n    if (text === this.text) {\n      return;\n    }\n\n    this.text = text;\n    const localizedText = i18n.performLocalization(text);\n    this.getDomElement().html(localizedText);\n    this.onTextChangedEvent(localizedText);\n  }\n\n  /**\n   * Gets the text on this label.\n   * @return {string} The text on the label\n   */\n  getText(): string {\n    return i18n.performLocalization(this.text);\n  }\n\n  /**\n   * Clears the text on this label.\n   */\n  clearText() {\n    this.getDomElement().html('');\n    this.onTextChangedEvent(null);\n  }\n\n  /**\n   * Tests if the label is empty and does not contain any text.\n   * @return {boolean} True if the label is empty, else false\n   */\n  isEmpty(): boolean {\n    return !this.text;\n  }\n\n  /**\n   * Fires the {@link #onClick} event.\n   * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method\n   * and calling the super method.\n   */\n  protected onClickEvent() {\n    this.labelEvents.onClick.dispatch(this);\n  }\n\n  /**\n   * Fires the {@link #onClick} event.\n   * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method\n   * and calling the super method.\n   */\n  protected onTextChangedEvent(text: string) {\n    this.labelEvents.onTextChanged.dispatch(this, text);\n  }\n\n  /**\n   * Gets the event that is fired when the label is clicked.\n   * @returns {Event<Label<LabelConfig>, NoArgs>}\n   */\n  get onClick(): Event<Label<LabelConfig>, NoArgs> {\n    return this.labelEvents.onClick.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the text on the label is changed.\n   * @returns {Event<Label<LabelConfig>, string>}\n   */\n  get onTextChanged(): Event<Label<LabelConfig>, string> {\n    return this.labelEvents.onTextChanged.getEvent();\n  }\n}\n","import { ToggleButton, ToggleButtonConfig } from './togglebutton';\nimport { ListItem, ListSelector, ListSelectorConfig } from './listselector';\nimport {DOM} from '../dom';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { ArrayUtils } from '../arrayutils';\n\n/**\n * A element to select a single item out of a list of available items.\n *\n * DOM example:\n * <code>\n *   <div class='ui-listbox'>\n *     <button class='ui-listbox-button'>label</button>\n *     ...\n *   </div\n * </code>\n *\n * @category Components\n */\n// TODO: change ListSelector to extends container in v4 to improve usage of ListBox.\n//       Currently we are creating the dom element of the list box with child elements manually here.\n//       But this functionality is already covered within the Container component.\nexport class ListBox extends ListSelector<ListSelectorConfig> {\n  private listBoxElement: DOM;\n  private components: ListBoxItemButton[] = [];\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-listbox',\n    } as ListSelectorConfig, this.config);\n  }\n\n  public configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    // Subscribe before super call to receive initial events\n    this.onItemAdded.subscribe(this.addListBoxDomItem);\n    this.onItemRemoved.subscribe(this.removeListBoxDomItem);\n    this.onItemSelected.subscribe(this.refreshSelectedItem);\n\n    super.configure(player, uimanager);\n  }\n\n  protected toDomElement(): DOM {\n    let listBoxElement = new DOM('div', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n    }, this);\n\n    this.listBoxElement = listBoxElement;\n    this.createListBoxDomItems();\n    this.refreshSelectedItem();\n\n    return listBoxElement;\n  }\n\n  private createListBoxDomItems() {\n    // Delete all children\n    this.listBoxElement.empty();\n    this.components = [];\n\n    // Add updated children\n    for (let item of this.items) {\n      this.addListBoxDomItem(this, item.key);\n    }\n  }\n\n  private removeListBoxDomItem = (_: ListBox, key: string) => {\n    const component = this.getComponentForKey(key);\n    if (component) {\n      component.getDomElement().remove();\n      ArrayUtils.remove(this.components, component);\n    }\n  };\n\n  private addListBoxDomItem = (_: ListBox, key: string) => {\n    const component = this.getComponentForKey(key);\n    const newItem = this.getItemForKey(key);\n    if (component) {\n      // Update existing component\n      component.setText(newItem.label);\n    } else {\n      const listBoxItemButton = this.buildListBoxItemButton(newItem);\n\n      listBoxItemButton.onClick.subscribe(() => {\n        this.handleSelectionChange(listBoxItemButton);\n      });\n\n      this.components.push(listBoxItemButton);\n      this.listBoxElement.append(listBoxItemButton.getDomElement());\n    }\n  };\n\n  private refreshSelectedItem = () => {\n    // This gets called twice because the first time is triggered when the user clicks on the ListBoxItemButton. And the\n    // second call comes from the player event when the actual item is selected (Subtitle / AudioTrack in this case).\n    // As this is a generic component we can't prohibit this behaviour. We need to treat this component as it acts\n    // independent from PlayerEvents and on the other hand we need to react to PlayerEvents as it could be triggered\n    // from outside.\n\n    for (let item of this.items) {\n      const component = this.getComponentForKey(item.key);\n      if (component) {\n        String(component.key) === String(this.selectedItem) ? component.on() : component.off();\n      }\n    }\n  };\n\n  private buildListBoxItemButton(listItem: ListItem): ListBoxItemButton {\n    return new ListBoxItemButton({\n      key: listItem.key,\n      text: listItem.label,\n      ariaLabel: listItem.ariaLabel,\n    });\n  }\n\n  private getComponentForKey(key: string): ListBoxItemButton {\n    return this.components.find((c) => key === c.key);\n  }\n\n  private handleSelectionChange = (sender: ListBoxItemButton) => {\n    this.onItemSelectedEvent(sender.key);\n  };\n}\n\ninterface ListBoxItemButtonConfig extends ToggleButtonConfig {\n  /**\n   * key to identify selected item. Similar to the value attribute of an select option.\n   */\n  key: string;\n}\n\nclass ListBoxItemButton extends ToggleButton<ListBoxItemButtonConfig> {\n\n  constructor(config: ListBoxItemButtonConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-listbox-button',\n      onClass: 'selected',\n      offClass: '',\n    } as ListBoxItemButtonConfig, this.config);\n  }\n\n  get key(): string {\n    return (this.config as ListBoxItemButtonConfig).key;\n  }\n}\n","import {Component, ComponentConfig} from './component';\nimport {EventDispatcher, Event} from '../eventdispatcher';\nimport {ArrayUtils} from '../arrayutils';\nimport { LocalizableText, i18n } from '../localization/i18n';\n\n/**\n * A map of items (key/value -> label} for a {@link ListSelector} in a {@link ListSelectorConfig}.\n */\nexport interface ListItem {\n  key: string;\n  label: LocalizableText;\n  sortedInsert?: boolean;\n  ariaLabel?: string;\n}\n\n/**\n * Filter function that can be used to filter out list items added through {@link ListSelector.addItem}.\n *\n * This is intended to be used in conjunction with subclasses that populate themselves automatically\n * via the player API, e.g. {@link SubtitleSelectBox}.\n */\nexport interface ListItemFilter {\n  /**\n   * Takes a list item and decides whether it should pass or be discarded.\n   * @param {ListItem} listItem the item to apply the filter to\n   * @returns {boolean} true to let the item pass through the filter, false to discard the item\n   */\n  (listItem: ListItem): boolean;\n}\n\n/**\n * Translator function to translate labels of list items added through {@link ListSelector.addItem}.\n *\n * This is intended to be used in conjunction with subclasses that populate themselves automatically\n * via the player API, e.g. {@link SubtitleSelectBox}.\n */\nexport interface ListItemLabelTranslator {\n  /**\n   * Takes a list item, optionally changes the label, and returns the new label.\n   * @param {ListItem} listItem the item to translate\n   * @returns {string} the translated or original label\n   */\n  (listItem: ListItem): string;\n}\n\n/**\n * Configuration interface for a {@link ListSelector}.\n *\n * @category Configs\n */\nexport interface ListSelectorConfig extends ComponentConfig {\n  items?: ListItem[];\n  filter?: ListItemFilter;\n  translator?: ListItemLabelTranslator;\n}\n\nexport abstract class ListSelector<Config extends ListSelectorConfig> extends Component<ListSelectorConfig> {\n\n  protected items: ListItem[];\n  protected selectedItem: string;\n\n  private listSelectorEvents = {\n    onItemAdded: new EventDispatcher<ListSelector<Config>, string>(),\n    onItemRemoved: new EventDispatcher<ListSelector<Config>, string>(),\n    onItemSelected: new EventDispatcher<ListSelector<Config>, string>(),\n  };\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      items: [],\n      cssClass: 'ui-listselector',\n    }, this.config);\n\n    this.items = this.config.items;\n  }\n\n  private getItemIndex(key: string): number {\n    for (let index in this.items) {\n      if (key === this.items[index].key) {\n        return parseInt(index);\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns all current items of this selector.\n   * * @returns {ListItem[]}\n   */\n  getItems(): ListItem[] {\n    return this.items;\n  }\n\n  /**\n   * Checks if the specified item is part of this selector.\n   * @param key the key of the item to check\n   * @returns {boolean} true if the item is part of this selector, else false\n   */\n  hasItem(key: string): boolean {\n    return this.getItemIndex(key) > -1;\n  }\n\n  /**\n   * Adds an item to this selector by doing a sorted insert or by appending the element to the end of the list of items.\n   * If an item with the specified key already exists, it is replaced.\n   * @param key the key of the item to add\n   * @param label the (human-readable) label of the item to add\n   * @param sortedInsert whether the item should be added respecting the order of keys\n   * @param ariaLabel custom aria label for the listItem\n   */\n  addItem(key: string, label: LocalizableText, sortedInsert = false, ariaLabel = '') {\n    const listItem = { key: key, label: i18n.performLocalization(label), ...(ariaLabel && { ariaLabel })};\n\n    // Apply filter function\n    if (this.config.filter && !this.config.filter(listItem)) {\n      return;\n    }\n\n    // Apply translator function\n    if (this.config.translator) {\n      listItem.label = this.config.translator(listItem);\n    }\n\n    // Try to remove key first to get overwrite behavior and avoid duplicate keys\n    this.removeItem(key); // This will trigger an ItemRemoved and an ItemAdded event\n\n    // Add the item to the list\n    if (sortedInsert) {\n      const index = this.items.findIndex(entry => entry.key > key);\n      if (index < 0) {\n        this.items.push(listItem);\n      } else {\n        this.items.splice(index, 0, listItem);\n      }\n    } else {\n      this.items.push(listItem);\n    }\n    this.onItemAddedEvent(key);\n  }\n\n  /**\n   * Removes an item from this selector.\n   * @param key the key of the item to remove\n   * @returns {boolean} true if removal was successful, false if the item is not part of this selector\n   */\n  removeItem(key: string): boolean {\n    let index = this.getItemIndex(key);\n    if (index > -1) {\n      ArrayUtils.remove(this.items, this.items[index]);\n      this.onItemRemovedEvent(key);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects an item from the items in this selector.\n   * @param key the key of the item to select\n   * @returns {boolean} true is the selection was successful, false if the selected item is not part of the selector\n   */\n  selectItem(key: string): boolean {\n    if (key === this.selectedItem) {\n      // itemConfig is already selected, suppress any further action\n      return true;\n    }\n\n    let index = this.getItemIndex(key);\n\n    if (index > -1) {\n      this.selectedItem = key;\n      this.onItemSelectedEvent(key);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns the key of the selected item.\n   * @returns {string} the key of the selected item or null if no item is selected\n   */\n  getSelectedItem(): string | null {\n    return this.selectedItem;\n  }\n\n  /**\n   * Returns the items for the given key or undefined if no item with the given key exists.\n   * @param key the key of the item to return\n   * @returns {ListItem} the item with the requested key. Undefined if no item with the given key exists.\n   */\n  getItemForKey(key: string): ListItem {\n    return this.items.find((item) => item.key === key);\n  }\n\n  /**\n   * Synchronize the current items of this selector with the given ones. This will remove and add items selectively.\n   * For each removed item the ItemRemovedEvent and for each added item the ItemAddedEvent will be triggered. Favour\n   * this method over using clearItems and adding all items again afterwards.\n   * @param newItems\n   */\n  synchronizeItems(newItems: ListItem[]): void {\n    newItems\n      .filter((item) => !this.hasItem(item.key))\n      .forEach((item) => this.addItem(item.key, item.label, item.sortedInsert, item.ariaLabel));\n\n    this.items\n      .filter((item) => newItems.filter((i) => i.key === item.key).length === 0)\n      .forEach((item) => this.removeItem(item.key));\n  }\n\n  /**\n   * Removes all items from this selector.\n   */\n  clearItems() {\n    // local copy for iteration after clear\n    let items = this.items;\n    // clear items\n    this.items = [];\n\n    // clear the selection as the selected item is also removed\n    this.selectedItem = null;\n\n    // fire events\n    for (let item of items) {\n      this.onItemRemovedEvent(item.key);\n    }\n  }\n\n  /**\n   * Returns the number of items in this selector.\n   * @returns {number}\n   */\n  itemCount(): number {\n    return Object.keys(this.items).length;\n  }\n\n  protected onItemAddedEvent(key: string) {\n    this.listSelectorEvents.onItemAdded.dispatch(this, key);\n  }\n\n  protected onItemRemovedEvent(key: string) {\n    this.listSelectorEvents.onItemRemoved.dispatch(this, key);\n  }\n\n  protected onItemSelectedEvent(key: string) {\n    this.listSelectorEvents.onItemSelected.dispatch(this, key);\n  }\n\n  /**\n   * Gets the event that is fired when an item is added to the list of items.\n   * @returns {Event<ListSelector<Config>, string>}\n   */\n  get onItemAdded(): Event<ListSelector<Config>, string> {\n    return this.listSelectorEvents.onItemAdded.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when an item is removed from the list of items.\n   * @returns {Event<ListSelector<Config>, string>}\n   */\n  get onItemRemoved(): Event<ListSelector<Config>, string> {\n    return this.listSelectorEvents.onItemRemoved.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when an item is selected from the list of items.\n   * @returns {Event<ListSelector<Config>, string>}\n   */\n  get onItemSelected(): Event<ListSelector<Config>, string> {\n    return this.listSelectorEvents.onItemSelected.getEvent();\n  }\n}","import {LabelConfig, Label} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Enumerates the types of content that the {@link MetadataLabel} can display.\n */\nexport enum MetadataLabelContent {\n  /**\n   * Title of the data source.\n   */\n  Title,\n  /**\n   * Description fo the data source.\n   */\n  Description,\n}\n\n/**\n * Configuration interface for {@link MetadataLabel}.\n *\n * @category Configs\n */\nexport interface MetadataLabelConfig extends LabelConfig {\n  /**\n   * The type of content that should be displayed in the label.\n   */\n  content: MetadataLabelContent;\n}\n\n/**\n * A label that can be configured to display certain metadata.\n *\n * @category Labels\n */\nexport class MetadataLabel extends Label<MetadataLabelConfig> {\n\n  constructor(config: MetadataLabelConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['label-metadata', 'label-metadata-' + MetadataLabelContent[config.content].toLowerCase()],\n    } as MetadataLabelConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let uiconfig = uimanager.getConfig();\n\n    let init = () => {\n      switch (config.content) {\n        case MetadataLabelContent.Title:\n          this.setText(uiconfig.metadata.title);\n          break;\n        case MetadataLabelContent.Description:\n          this.setText(uiconfig.metadata.description);\n          break;\n      }\n    };\n\n    let unload = () => {\n      this.setText(null);\n    };\n\n    // Init label\n    init();\n    // Clear labels when source is unloaded\n    player.on(player.exports.PlayerEvent.SourceUnloaded, unload);\n\n    uimanager.getConfig().events.onUpdated.subscribe(init);\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles Apple macOS picture-in-picture mode.\n *\n * @category Buttons\n */\nexport class PictureInPictureToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-piptogglebutton',\n      text: i18n.getLocalizer('pictureInPicture'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    const isPictureInPictureAvailable = () => {\n      return player.isViewModeAvailable(player.exports.ViewMode.PictureInPicture);\n    };\n\n    const pictureInPictureStateHandler = () => {\n      player.getViewMode() === player.exports.ViewMode.PictureInPicture ? this.on() : this.off();\n    };\n\n    const pictureInPictureAvailabilityChangedHandler = () => {\n      isPictureInPictureAvailable() ? this.show() : this.hide();\n    };\n\n    player.on(player.exports.PlayerEvent.ViewModeChanged, pictureInPictureStateHandler);\n\n    // Available only in our native SDKs for now\n    if ((player.exports.PlayerEvent as any).ViewModeAvailabilityChanged) {\n      player.on(\n        (player.exports.PlayerEvent as any).ViewModeAvailabilityChanged,\n        pictureInPictureAvailabilityChangedHandler,\n      );\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(pictureInPictureAvailabilityChangedHandler);\n\n    this.onClick.subscribe(() => {\n      if (!isPictureInPictureAvailable()) {\n        if (console) {\n          console.log('PIP unavailable');\n        }\n        return;\n      }\n\n      const targetViewMode =\n        player.getViewMode() === player.exports.ViewMode.PictureInPicture\n          ? player.exports.ViewMode.Inline\n          : player.exports.ViewMode.PictureInPicture;\n\n      player.setViewMode(targetViewMode);\n    });\n\n    // Startup init\n    pictureInPictureAvailabilityChangedHandler(); // Hide button if PIP not available\n    pictureInPictureStateHandler();\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection of different playback speeds.\n *\n * @category Components\n */\nexport class PlaybackSpeedSelectBox extends SelectBox {\n  protected defaultPlaybackSpeeds: number[];\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n    this.defaultPlaybackSpeeds = [0.25, 0.5, 1, 1.5, 2];\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-playbackspeedselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addDefaultItems();\n\n    this.onItemSelected.subscribe((sender: PlaybackSpeedSelectBox, value: string) => {\n      player.setPlaybackSpeed(parseFloat(value));\n      this.selectItem(value);\n    });\n\n    const setDefaultValue = (): void => {\n      const playbackSpeed = player.getPlaybackSpeed();\n      this.setSpeed(playbackSpeed);\n    };\n\n    player.on(player.exports.PlayerEvent.PlaybackSpeedChanged, setDefaultValue);\n    uimanager.getConfig().events.onUpdated.subscribe(setDefaultValue);\n  }\n\n  setSpeed(speed: number): void {\n    if (!this.selectItem(String(speed))) {\n      // a playback speed was set which is not in the list, add it to the list to show it to the user\n      this.clearItems();\n      this.addDefaultItems([speed]);\n      this.selectItem(String(speed));\n    }\n  }\n\n  addDefaultItems(customItems: number[] = []): void {\n    const sortedSpeeds = this.defaultPlaybackSpeeds.concat(customItems).sort();\n\n    sortedSpeeds.forEach(element => {\n      if (element !== 1) {\n        this.addItem(String(element), `${element}x`);\n      } else {\n        this.addItem(String(element), i18n.getLocalizer('normal'));\n      }\n    });\n  }\n\n  clearItems(): void {\n    this.items = [];\n    this.selectedItem = null;\n  }\n}","import {LabelConfig, Label} from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\nimport {PlayerUtils} from '../playerutils';\nimport {StringUtils} from '../stringutils';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\nexport enum PlaybackTimeLabelMode {\n  /**\n   * Displays the current time\n   */\n  CurrentTime,\n  /**\n   * Displays the duration of the content\n   */\n  TotalTime,\n  /**\n   * Displays the current time and the duration of the content\n   * Format: ${currentTime} / ${totalTime}\n   */\n  CurrentAndTotalTime,\n  /**\n   * Displays the remaining time of the content\n   */\n  RemainingTime,\n}\n\n/**\n * @category Configs\n */\nexport interface PlaybackTimeLabelConfig extends LabelConfig {\n  /**\n   * The type of which time should be displayed in the label.\n   * Default: PlaybackTimeLabelMode.CurrentAndTotalTime\n   */\n  timeLabelMode?: PlaybackTimeLabelMode;\n  /**\n   * Boolean if the label should be hidden in live playback\n   */\n  hideInLivePlayback?: boolean;\n}\n\n/**\n * A label that display the current playback time and the total time through {@link PlaybackTimeLabel#setTime setTime}\n * or any string through {@link PlaybackTimeLabel#setText setText}.\n *\n * @category Labels\n */\nexport class PlaybackTimeLabel extends Label<PlaybackTimeLabelConfig> {\n\n  private timeFormat: string;\n\n  constructor(config: PlaybackTimeLabelConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <PlaybackTimeLabelConfig>{\n      cssClass: 'ui-playbacktimelabel',\n      timeLabelMode: PlaybackTimeLabelMode.CurrentAndTotalTime,\n      hideInLivePlayback: false,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let live = false;\n    let liveCssClass = this.prefixCss('ui-playbacktimelabel-live');\n    let liveEdgeCssClass = this.prefixCss('ui-playbacktimelabel-live-edge');\n    let minWidth = 0;\n\n    let liveClickHandler = () => {\n      player.timeShift(0);\n    };\n\n    let updateLiveState = () => {\n      // Player is playing a live stream when the duration is infinite\n      live = player.isLive();\n\n      // Attach/detach live marker class\n      if (live) {\n        this.getDomElement().addClass(liveCssClass);\n        this.setText(i18n.getLocalizer('live'));\n        if (config.hideInLivePlayback) {\n          this.hide();\n        }\n        this.onClick.subscribe(liveClickHandler);\n        updateLiveTimeshiftState();\n      } else {\n        this.getDomElement().removeClass(liveCssClass);\n        this.getDomElement().removeClass(liveEdgeCssClass);\n        this.show();\n        this.onClick.unsubscribe(liveClickHandler);\n      }\n    };\n\n    let updateLiveTimeshiftState = () => {\n      if (!live) {\n        return;\n      }\n\n      // The player is only at the live edge iff the stream is not shifted and it is actually playing or playback has\n      // never been started (meaning it isn't paused). A player that is paused is always behind the live edge.\n      // An exception is made for live streams without a timeshift window, because here we \"stop\" playback instead\n      // of pausing it (from a UI perspective), so we keep the live edge indicator on because a play would always\n      // resume at the live edge.\n      const isTimeshifted = player.getTimeShift() < 0;\n      const isTimeshiftAvailable = player.getMaxTimeShift() < 0;\n      if (!isTimeshifted && (!player.isPaused() || !isTimeshiftAvailable)) {\n        this.getDomElement().addClass(liveEdgeCssClass);\n      } else {\n        this.getDomElement().removeClass(liveEdgeCssClass);\n      }\n    };\n\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: LiveStreamDetectorEventArgs) => {\n      live = args.live;\n      updateLiveState();\n    });\n    liveStreamDetector.detect(); // Initial detection\n\n    let playbackTimeHandler = () => {\n      if (!live && player.getDuration() !== Infinity) {\n        this.setTime(\n          PlayerUtils.getCurrentTimeRelativeToSeekableRange(player),\n          player.getDuration());\n      }\n\n      // To avoid 'jumping' in the UI by varying label sizes due to non-monospaced fonts,\n      // we gradually increase the min-width with the content to reach a stable size.\n      let width = this.getDomElement().width();\n      if (width > minWidth) {\n        minWidth = width;\n        this.getDomElement().css({\n          'min-width': minWidth + 'px',\n        });\n      }\n    };\n\n    let updateTimeFormatBasedOnDuration = () => {\n      // Set time format depending on source duration\n      this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?\n      StringUtils.FORMAT_HHMMSS : StringUtils.FORMAT_MMSS;\n      playbackTimeHandler();\n    };\n\n    player.on(player.exports.PlayerEvent.TimeChanged, playbackTimeHandler);\n    player.on(player.exports.PlayerEvent.Ready, updateTimeFormatBasedOnDuration);\n    player.on(player.exports.PlayerEvent.Seeked, playbackTimeHandler);\n\n    player.on(player.exports.PlayerEvent.TimeShift, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.TimeShifted, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.Playing, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.Paused, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.StallStarted, updateLiveTimeshiftState);\n    player.on(player.exports.PlayerEvent.StallEnded, updateLiveTimeshiftState);\n\n    let init = () => {\n      // Reset min-width when a new source is ready (especially for switching VOD/Live modes where the label content\n      // changes)\n      minWidth = 0;\n      this.getDomElement().css({\n        'min-width': null,\n      });\n\n      updateTimeFormatBasedOnDuration();\n    };\n    uimanager.getConfig().events.onUpdated.subscribe(init);\n\n    init();\n  }\n\n  /**\n   * Sets the current playback time and total duration.\n   * @param playbackSeconds the current playback time in seconds\n   * @param durationSeconds the total duration in seconds\n   */\n  setTime(playbackSeconds: number, durationSeconds: number) {\n    let currentTime = StringUtils.secondsToTime(playbackSeconds, this.timeFormat);\n    let totalTime = StringUtils.secondsToTime(durationSeconds, this.timeFormat);\n\n    switch ((<PlaybackTimeLabelConfig>this.config).timeLabelMode) {\n      case PlaybackTimeLabelMode.CurrentTime:\n        this.setText(`${currentTime}`);\n        break;\n      case PlaybackTimeLabelMode.TotalTime:\n        this.setText(`${totalTime}`);\n        break;\n      case PlaybackTimeLabelMode.CurrentAndTotalTime:\n        this.setText(`${currentTime} / ${totalTime}`);\n        break;\n      case PlaybackTimeLabelMode.RemainingTime:\n        let remainingTime = StringUtils.secondsToTime(durationSeconds - playbackSeconds, this.timeFormat);\n        this.setText(`${remainingTime}`);\n        break;\n    }\n  }\n\n  /**\n   * Sets the current time format\n   * @param timeFormat the time format\n   */\n  protected setTimeFormat(timeFormat: string): void {\n    this.timeFormat = timeFormat;\n  }\n}\n","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport {PlayerUtils} from '../playerutils';\nimport { PlayerAPI, WarningEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * @category Configs\n */\nexport interface PlaybackToggleButtonConfig extends ToggleButtonConfig {\n  /**\n   * Specify whether the player should be set to enter fullscreen by clicking on the playback toggle button\n   * when initiating the initial playback.\n   * Default is false.\n   */\n  enterFullscreenOnInitialPlayback?: boolean;\n}\n\n/**\n * A button that toggles between playback and pause.\n *\n * @category Buttons\n */\nexport class PlaybackToggleButton extends ToggleButton<PlaybackToggleButtonConfig> {\n\n  private static readonly CLASS_STOPTOGGLE = 'stoptoggle';\n  protected isPlayInitiated: boolean;\n\n  constructor(config: PlaybackToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-playbacktogglebutton',\n      text: i18n.getLocalizer('play'),\n      onAriaLabel: i18n.getLocalizer('pause'),\n      offAriaLabel: i18n.getLocalizer('play'),\n    }, this.config);\n\n    this.isPlayInitiated = false;\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager, handleClickEvent: boolean = true): void {\n    super.configure(player, uimanager);\n\n    // Set enterFullscreenOnInitialPlayback if set in the uimanager config\n    if (typeof uimanager.getConfig().enterFullscreenOnInitialPlayback === 'boolean') {\n      this.config.enterFullscreenOnInitialPlayback = uimanager.getConfig().enterFullscreenOnInitialPlayback;\n    }\n\n    let isSeeking = false;\n    let firstPlay = true;\n\n    // Handler to update button state based on player state\n    let playbackStateHandler = () => {\n      // If the UI is currently seeking, playback is temporarily stopped but the buttons should\n      // not reflect that and stay as-is (e.g indicate playback while seeking).\n      if (isSeeking) {\n        return;\n      }\n\n      if (player.isPlaying() || this.isPlayInitiated) {\n        this.on();\n      } else {\n        this.off();\n      }\n    };\n\n    // Call handler upon these events\n    player.on(player.exports.PlayerEvent.Play, (e) => {\n      this.isPlayInitiated = true;\n      firstPlay = false;\n      playbackStateHandler();\n    });\n\n    player.on(player.exports.PlayerEvent.Paused, (e) => {\n      this.isPlayInitiated = false;\n      playbackStateHandler();\n    });\n\n    player.on(player.exports.PlayerEvent.Playing, (e) => {\n      this.isPlayInitiated = false;\n      playbackStateHandler();\n    });\n    // after unloading + loading a new source, the player might be in a different playing state (from playing into stopped)\n    player.on(player.exports.PlayerEvent.SourceLoaded, playbackStateHandler);\n    uimanager.getConfig().events.onUpdated.subscribe(playbackStateHandler);\n    player.on(player.exports.PlayerEvent.SourceUnloaded, playbackStateHandler);\n    // when playback finishes, player turns to paused mode\n    player.on(player.exports.PlayerEvent.PlaybackFinished, playbackStateHandler);\n    player.on(player.exports.PlayerEvent.CastStarted, playbackStateHandler);\n\n    // When a playback attempt is rejected with warning 5008, we switch the button state back to off\n    // This is required for blocked autoplay, because there is no Paused event in such case\n    player.on(player.exports.PlayerEvent.Warning, (event: WarningEvent) => {\n      if (event.code === player.exports.WarningCode.PLAYBACK_COULD_NOT_BE_STARTED) {\n        this.isPlayInitiated = false;\n        firstPlay = true;\n        this.off();\n      }\n    });\n\n    const updateLiveState = () => {\n      const showStopToggle = player.isLive() && !PlayerUtils.isTimeShiftAvailable(player);\n\n      if (showStopToggle) {\n        this.getDomElement().addClass(this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));\n      } else {\n        this.getDomElement().removeClass(this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));\n      }\n    };\n\n    // Detect absence of timeshifting on live streams and add tagging class to convert button icons to play/stop\n    let timeShiftDetector = new PlayerUtils.TimeShiftAvailabilityDetector(player);\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n\n    timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(() => updateLiveState());\n    liveStreamDetector.onLiveChanged.subscribe(() => updateLiveState());\n\n    timeShiftDetector.detect(); // Initial detection\n    liveStreamDetector.detect();\n\n    if (handleClickEvent) {\n      // Control player by button events\n      // When a button event triggers a player API call, events are fired which in turn call the event handler\n      // above that updated the button state.\n      this.onClick.subscribe(() => {\n        if (player.isPlaying() || this.isPlayInitiated) {\n          player.pause('ui');\n        } else {\n          player.play('ui');\n\n          if (firstPlay && this.config.enterFullscreenOnInitialPlayback) {\n            player.setViewMode(player.exports.ViewMode.Fullscreen);\n          }\n        }\n      });\n    }\n\n    // Track UI seeking status\n    uimanager.onSeek.subscribe(() => {\n      isSeeking = true;\n    });\n    uimanager.onSeeked.subscribe(() => {\n      isSeeking = false;\n    });\n\n    // Startup init\n    playbackStateHandler();\n  }\n}\n","import {Container, ContainerConfig} from './container';\nimport {HugePlaybackToggleButton} from './hugeplaybacktogglebutton';\n\n/**\n * @category Configs\n */\nexport interface PlaybackToggleOverlayConfig extends ContainerConfig {\n  /**\n   * Specify whether the player should be set to enter fullscreen by clicking on the playback toggle button\n   * when initiating the initial playback.\n   * Default is false.\n   */\n  enterFullscreenOnInitialPlayback?: boolean;\n}\n\n/**\n * Overlays the player and displays error messages.\n *\n * @category Components\n */\nexport class PlaybackToggleOverlay extends Container<PlaybackToggleOverlayConfig> {\n\n  private playbackToggleButton: HugePlaybackToggleButton;\n\n  constructor(config: PlaybackToggleOverlayConfig = {}) {\n    super(config);\n\n    this.playbackToggleButton = new HugePlaybackToggleButton({\n      enterFullscreenOnInitialPlayback: Boolean(config.enterFullscreenOnInitialPlayback),\n    });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-playbacktoggle-overlay',\n      components: [this.playbackToggleButton],\n    }, this.config);\n  }\n}","import { Button, ButtonConfig } from './button';\nimport { i18n } from '../localization/i18n';\nimport { PlayerAPI, SeekEvent, TimeShiftEvent } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerUtils } from '../playerutils';\n\n/**\n * @category Configs\n */\nexport interface QuickSeekButtonConfig extends ButtonConfig {\n  /**\n   * Specify how many seconds the player should seek forward/backwards in the stream.\n   * Negative values mean a backwards seek, positive values mean a forward seek.\n   * Default is -10.\n   */\n  seekSeconds?: number;\n}\n\n/**\n * @category Buttons\n */\nexport class QuickSeekButton extends Button<QuickSeekButtonConfig> {\n  private currentSeekTarget: number | null;\n  private player: PlayerAPI;\n\n  constructor(config: QuickSeekButtonConfig = {}) {\n    super(config);\n    this.currentSeekTarget = null;\n\n    this.config = this.mergeConfig(\n      config,\n      {\n        seekSeconds: -10,\n        cssClass: 'ui-quickseekbutton',\n      },\n      this.config,\n    );\n\n    const seekDirection = this.config.seekSeconds < 0 ? 'rewind' : 'forward';\n\n    this.config.text = this.config.text || i18n.getLocalizer(`quickseek.${seekDirection}`);\n    this.config.ariaLabel = this.config.ariaLabel || i18n.getLocalizer(`quickseek.${seekDirection}`);\n\n    this.getDomElement().data(this.prefixCss('seek-direction'), seekDirection);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    this.player = player;\n\n    let isLive: boolean;\n    let hasTimeShift: boolean;\n\n    const switchVisibility = (isLive: boolean, hasTimeShift: boolean) => {\n      if (isLive && !hasTimeShift) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    };\n\n    const timeShiftDetector = new PlayerUtils.TimeShiftAvailabilityDetector(player);\n    timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(\n      (sender, args: PlayerUtils.TimeShiftAvailabilityChangedArgs) => {\n        hasTimeShift = args.timeShiftAvailable;\n        switchVisibility(isLive, hasTimeShift);\n      },\n    );\n\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: PlayerUtils.LiveStreamDetectorEventArgs) => {\n      isLive = args.live;\n      switchVisibility(isLive, hasTimeShift);\n    });\n\n    // Initial detection\n    timeShiftDetector.detect();\n    liveStreamDetector.detect();\n\n    this.onClick.subscribe(() => {\n      if (isLive && !hasTimeShift) {\n        // If no DVR window is available, the button should be hidden anyway, so this is to be absolutely sure\n        return;\n      }\n\n      if (isLive && this.config.seekSeconds > 0 && player.getTimeShift() === 0) {\n        // Don't do anything if the player is already on the live edge\n        return;\n      }\n\n      const currentPosition =\n        this.currentSeekTarget !== null\n          ? this.currentSeekTarget\n          : isLive\n            ? player.getTimeShift()\n            : player.getCurrentTime();\n\n      const newSeekTime = currentPosition + this.config.seekSeconds;\n\n      if (isLive) {\n        const clampedValue = PlayerUtils.clampValueToRange(newSeekTime, player.getMaxTimeShift(), 0);\n        player.timeShift(clampedValue);\n      } else {\n        const clampedValue = PlayerUtils.clampValueToRange(newSeekTime, 0, player.getDuration());\n        player.seek(clampedValue);\n      }\n    });\n\n    this.player.on(this.player.exports.PlayerEvent.Seek, this.onSeek);\n    this.player.on(this.player.exports.PlayerEvent.Seeked, this.onSeekedOrTimeShifted);\n    this.player.on(this.player.exports.PlayerEvent.TimeShift, this.onTimeShift);\n    this.player.on(this.player.exports.PlayerEvent.TimeShifted, this.onSeekedOrTimeShifted);\n  }\n\n  private onSeek = (event: SeekEvent): void => {\n    this.currentSeekTarget = event.seekTarget;\n  };\n\n  private onSeekedOrTimeShifted = () => {\n    this.currentSeekTarget = null;\n  };\n\n  private onTimeShift = (event: TimeShiftEvent): void => {\n    this.currentSeekTarget = this.player.getTimeShift() + (event.target - event.position);\n  }\n\n  release(): void {\n    this.player.off(this.player.exports.PlayerEvent.Seek, this.onSeek);\n    this.player.off(this.player.exports.PlayerEvent.Seeked, this.onSeekedOrTimeShifted);\n    this.player.off(this.player.exports.PlayerEvent.TimeShift, this.onTimeShift);\n    this.player.off(this.player.exports.PlayerEvent.TimeShifted, this.onSeekedOrTimeShifted);\n    this.currentSeekTarget = null;\n    this.player = null;\n  }\n}\n","import {ContainerConfig, Container} from './container';\nimport {Component, ComponentConfig} from './component';\nimport {DOM} from '../dom';\nimport {UIInstanceManager} from '../uimanager';\nimport {StringUtils} from '../stringutils';\nimport {HugeReplayButton} from './hugereplaybutton';\nimport { UIRecommendationConfig } from '../uiconfig';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Overlays the player and displays recommended videos.\n *\n * @category Containers\n */\nexport class RecommendationOverlay extends Container<ContainerConfig> {\n\n  private replayButton: HugeReplayButton;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.replayButton = new HugeReplayButton();\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-recommendation-overlay',\n      hidden: true,\n      components: [this.replayButton],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let clearRecommendations = () => {\n      for (let component of this.getComponents().slice()) {\n        if (component instanceof RecommendationItem) {\n          this.removeComponent(component);\n        }\n      }\n      this.updateComponents();\n      this.getDomElement().removeClass(this.prefixCss('recommendations'));\n    };\n\n    let setupRecommendations = () => {\n      clearRecommendations();\n\n      const recommendations = uimanager.getConfig().recommendations;\n\n      if (recommendations.length > 0) {\n        let index = 1;\n        for (let item of recommendations) {\n          this.addComponent(new RecommendationItem({\n            itemConfig: item,\n            cssClasses: ['recommendation-item-' + (index++)],\n          }));\n        }\n        this.updateComponents(); // create container DOM elements\n\n        this.getDomElement().addClass(this.prefixCss('recommendations'));\n      }\n    };\n\n    uimanager.getConfig().events.onUpdated.subscribe(setupRecommendations);\n    // Remove recommendations and hide overlay when source is unloaded\n    player.on(player.exports.PlayerEvent.SourceUnloaded, () => {\n      clearRecommendations();\n      this.hide();\n    });\n    // Display recommendations when playback has finished\n    player.on(player.exports.PlayerEvent.PlaybackFinished, () => {\n      this.show();\n    });\n    // Hide recommendations when playback starts, e.g. a restart\n    player.on(player.exports.PlayerEvent.Play, () => {\n      this.hide();\n    });\n\n    // Init on startup\n    setupRecommendations();\n  }\n}\n\n/**\n * Configuration interface for the {@link RecommendationItem}\n */\ninterface RecommendationItemConfig extends ComponentConfig {\n  itemConfig: UIRecommendationConfig;\n}\n\n/**\n * An item of the {@link RecommendationOverlay}. Used only internally in {@link RecommendationOverlay}.\n */\nclass RecommendationItem extends Component<RecommendationItemConfig> {\n\n  constructor(config: RecommendationItemConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-recommendation-item',\n      itemConfig: null, // this must be passed in from outside\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    let config = this.config.itemConfig;\n\n    let itemElement = new DOM('a', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'href': config.url,\n    }, this).css({ 'background-image': `url(${config.thumbnail})` });\n\n    let bgElement = new DOM('div', {\n      'class': this.prefixCss('background'),\n    });\n    itemElement.append(bgElement);\n\n    let titleElement = new DOM('span', {\n      'class': this.prefixCss('title'),\n    }).append(new DOM('span', {\n      'class': this.prefixCss('innertitle'),\n    }).html(config.title));\n    itemElement.append(titleElement);\n\n    let timeElement = new DOM('span', {\n      'class': this.prefixCss('duration'),\n    }).append(new DOM('span', {\n      'class': this.prefixCss('innerduration'),\n    }).html(config.duration ? StringUtils.secondsToTime(config.duration) : ''));\n    itemElement.append(timeElement);\n\n    return itemElement;\n  }\n}","import { ButtonConfig, Button } from './button';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { PlayerUtils } from '../playerutils';\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\n\n/**\n * A button to play/replay a video.\n *\n * @category Buttons\n */\nexport class ReplayButton extends Button<ButtonConfig> {\n\n  constructor(config: ButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-replaybutton',\n      text: i18n.getLocalizer('replay'),\n      ariaLabel: i18n.getLocalizer('replay'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    if (player.isLive()) {\n      this.hide();\n    }\n\n    const liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: LiveStreamDetectorEventArgs) => {\n      if (args.live) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    this.onClick.subscribe(() => {\n      if (!player.hasEnded()) {\n        player.seek(0);\n        // Not calling `play` will keep the play/pause state as is\n      } else {\n        // If playback has already ended, calling `play` will automatically restart from the beginning\n        player.play('ui');\n      }\n    });\n  }\n}\n","import { ExtendedPlayerAPI, GroupPlaybackSuspension, GroupPlaybackSuspensionReason } from './../groupplaybackapi';\nimport { Component, ComponentConfig } from './component';\nimport { DOM } from '../dom';\nimport { Event, EventDispatcher, NoArgs } from '../eventdispatcher';\nimport { SeekBarLabel } from './seekbarlabel';\nimport { UIInstanceManager, SeekPreviewArgs } from '../uimanager';\nimport { Timeout } from '../timeout';\nimport { PlayerUtils } from '../playerutils';\nimport TimeShiftAvailabilityChangedArgs = PlayerUtils.TimeShiftAvailabilityChangedArgs;\nimport LiveStreamDetectorEventArgs = PlayerUtils.LiveStreamDetectorEventArgs;\nimport { TimelineMarker } from '../uiconfig';\nimport { PlayerAPI, PlayerEventBase } from 'bitmovin-player';\nimport { StringUtils } from '../stringutils';\nimport { SeekBarType, SeekBarController } from './seekbarcontroller';\nimport { i18n } from '../localization/i18n';\nimport { BrowserUtils } from '../browserutils';\nimport { TimelineMarkersHandler } from './timelinemarkershandler';\nimport { getMinBufferLevel } from './seekbarbufferlevel';\n\n/**\n * Configuration interface for the {@link SeekBar} component.\n *\n * @category Configs\n */\nexport interface SeekBarConfig extends ComponentConfig {\n  /**\n   * The label above the seek position.\n   */\n  label?: SeekBarLabel;\n  /**\n   * Bar will be vertical instead of horizontal if set to true.\n   */\n  vertical?: boolean;\n  /**\n   * The interval in milliseconds in which the playback position on the seek bar will be updated. The shorter the\n   * interval, the smoother it looks and the more resource intense it is. The update interval will be kept as steady\n   * as possible to avoid jitter.\n   * Set to -1 to disable smooth updating and update it on player TimeChanged events instead.\n   * Default: 50 (50ms = 20fps).\n   */\n  smoothPlaybackPositionUpdateIntervalMs?: number;\n\n  /**\n   * Used for seekBar control increments and decrements\n   */\n  keyStepIncrements?: { leftRight: number, upDown: number };\n\n  /**\n   * Used to enable/disable snapping to markers on the seek bar when seeking near them.\n   * Default: true\n   */\n  snappingEnabled?: boolean;\n\n  /**\n   * Defines tolerance for snapping to markers, if snapping to seek bar markers is enabled.\n   */\n  snappingRange?: number;\n\n  /**\n   * Used to enable/disable seek preview\n   */\n  enableSeekPreview?: boolean;\n}\n\n/**\n * Event argument interface for a seek preview event.\n */\nexport interface SeekPreviewEventArgs extends SeekPreviewArgs {\n  /**\n   * Tells if the seek preview event comes from a scrubbing.\n   */\n  scrubbing: boolean;\n}\n\n/**\n * @category Components\n */\nexport interface SeekBarMarker {\n  marker: TimelineMarker;\n  position: number;\n  duration?: number;\n  element?: DOM;\n}\n\n/**\n * A seek bar to seek within the player's media. It displays the current playback position, amount of buffed data, seek\n * target, and keeps status about an ongoing seek.\n *\n * The seek bar displays different 'bars':\n *  - the playback position, i.e. the position in the media at which the player current playback pointer is positioned\n *  - the buffer position, which usually is the playback position plus the time span that is already buffered ahead\n *  - the seek position, used to preview to where in the timeline a seek will jump to\n *\n *  @category Components\n */\nexport class SeekBar extends Component<SeekBarConfig> {\n\n  public static readonly SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED = -1;\n\n  /**\n   * The CSS class that is added to the DOM element while the seek bar is in 'seeking' state.\n   */\n  private static readonly CLASS_SEEKING = 'seeking';\n\n  private seekBar: DOM;\n  private seekBarPlaybackPosition: DOM;\n  private seekBarPlaybackPositionMarker: DOM;\n  private seekBarBufferPosition: DOM;\n  private seekBarSeekPosition: DOM;\n  private seekBarBackdrop: DOM;\n\n  private label: SeekBarLabel;\n\n  private seekBarMarkersContainer: DOM;\n  private timelineMarkersHandler: TimelineMarkersHandler;\n\n  private player: PlayerAPI;\n\n  protected seekBarType: SeekBarType;\n\n  protected isUiShown: boolean;\n\n  /**\n   * Buffer of the the current playback position. The position must be buffered in case the element\n   * needs to be refreshed with {@link #refreshPlaybackPosition}.\n   * @type {number}\n   */\n  private playbackPositionPercentage = 0;\n\n  private smoothPlaybackPositionUpdater: Timeout;\n  private pausedTimeshiftUpdater: Timeout;\n\n  private isUserSeeking = false;\n\n  private seekBarEvents = {\n    /**\n     * Fired when a scrubbing seek operation is started.\n     */\n    onSeek: new EventDispatcher<SeekBar, NoArgs>(),\n    /**\n     * Fired during a scrubbing seek to indicate that the seek preview (i.e. the video frame) should be updated.\n     */\n    onSeekPreview: new EventDispatcher<SeekBar, SeekPreviewEventArgs>(),\n    /**\n     * Fired when a scrubbing seek has finished or when a direct seek is issued.\n     */\n    onSeeked: new EventDispatcher<SeekBar, number>(),\n  };\n\n  constructor(config: SeekBarConfig = {}) {\n    super(config);\n\n    const keyStepIncrements = this.config.keyStepIncrements || {\n      leftRight: 1,\n      upDown: 5,\n    };\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-seekbar',\n      vertical: false,\n      smoothPlaybackPositionUpdateIntervalMs: 50,\n      keyStepIncrements,\n      ariaLabel: i18n.getLocalizer('seekBar'),\n      tabIndex: 0,\n      snappingRange: 1,\n      enableSeekPreview: true,\n      snappingEnabled: true,\n    }, this.config);\n\n    this.label = this.config.label;\n  }\n\n  initialize(): void {\n    super.initialize();\n\n    if (this.hasLabel()) {\n      this.getLabel().initialize();\n    }\n  }\n\n  protected setAriaSliderMinMax(min: string, max: string) {\n    this.getDomElement().attr('aria-valuemin', min);\n    this.getDomElement().attr('aria-valuemax', max);\n  }\n\n  private setAriaSliderValues() {\n    if (this.seekBarType === SeekBarType.Live) {\n      const timeshiftValue = Math.ceil(this.player.getTimeShift()).toString();\n      this.getDomElement().attr('aria-valuenow', timeshiftValue);\n      this.getDomElement().attr('aria-valuetext', `${i18n.performLocalization(i18n.getLocalizer('seekBar.timeshift'))} ${i18n.performLocalization(i18n.getLocalizer('seekBar.value'))}: ${timeshiftValue}`);\n    } else if (this.seekBarType === SeekBarType.Vod) {\n      const ariaValueText = `${StringUtils.secondsToText(this.player.getCurrentTime())} ${i18n.performLocalization(i18n.getLocalizer('seekBar.durationText'))} ${StringUtils.secondsToText(this.player.getDuration())}`;\n      this.getDomElement().attr('aria-valuenow', Math.floor(this.player.getCurrentTime()).toString());\n      this.getDomElement().attr('aria-valuetext', ariaValueText);\n    }\n  }\n\n  private getPlaybackPositionPercentage(): number {\n    if (this.player.isLive()) {\n      return 100 - (100 / this.player.getMaxTimeShift() * this.player.getTimeShift());\n    }\n\n    return 100 / this.player.getDuration() * this.getRelativeCurrentTime();\n  }\n\n  private updateBufferLevel(playbackPositionPercentage: number): void {\n\n    let bufferLoadedPercentageLevel: number;\n    if (this.player.isLive()) {\n      // Always show full buffer for live streams\n      bufferLoadedPercentageLevel = 100;\n    } else {\n      bufferLoadedPercentageLevel = playbackPositionPercentage + getMinBufferLevel(this.player);\n    }\n\n    this.setBufferPosition(bufferLoadedPercentageLevel);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager, configureSeek: boolean = true): void {\n    super.configure(player, uimanager);\n\n    this.player = player;\n\n    // Apply scaling transform to the backdrop bar to have all bars rendered similarly\n    // (the call must be up here to be executed for the volume slider as well)\n    this.setPosition(this.seekBarBackdrop, 100);\n\n    // Add seekbar controls to the seekbar\n    const seekBarController = new SeekBarController(this.config.keyStepIncrements, player, uimanager.getConfig().volumeController);\n\n    seekBarController.setSeekBarControls(this.getDomElement(), () => this.seekBarType);\n\n    // The configureSeek flag can be used by subclasses to disable configuration as seek bar. E.g. the volume\n    // slider is reusing this component but adds its own functionality, and does not need the seek functionality.\n    // This is actually a hack, the proper solution would be for both seek bar and volume sliders to extend\n    // a common base slider component and implement their functionality there.\n    if (!configureSeek) {\n      this.seekBarType = SeekBarType.Volume;\n\n      return;\n    }\n\n    uimanager.onControlsShow.subscribe(() => {\n      this.isUiShown = true;\n    });\n\n    uimanager.onControlsHide.subscribe(() => {\n      this.isUiShown = false;\n    });\n\n    let isPlaying = false;\n    let scrubbing = false;\n    let isPlayerSeeking = false;\n    let suspension: GroupPlaybackSuspension | undefined;\n\n    // Update playback and buffer positions\n    let playbackPositionHandler = (event: PlayerEventBase = null, forceUpdate: boolean = false) => {\n      if (this.isUserSeeking) {\n        // We caught a seek preview seek, do not update the seekbar\n        return;\n      }\n\n      let playbackPositionPercentage = this.getPlaybackPositionPercentage();\n\n      this.updateBufferLevel(playbackPositionPercentage);\n\n      // The segment request finished is used to help the playback position move, when the smooth playback position is not enabled.\n      // At the same time when the user is scrubbing, we also move the position of the seekbar to display a preview during scrubbing.\n      // When the user is scrubbing we do not record this as a user seek operation, as the user has yet to finish their seek,\n      // but we should not move the playback position to not create a jumping behaviour.\n      if (scrubbing && event && event.type === player.exports.PlayerEvent.SegmentRequestFinished && playbackPositionPercentage !== this.playbackPositionPercentage) {\n        playbackPositionPercentage = this.playbackPositionPercentage;\n      }\n\n      if (player.isLive()) {\n        if (player.getMaxTimeShift() === 0) {\n          // This case must be explicitly handled to avoid division by zero\n          this.setPlaybackPosition(100);\n        } else {\n          if (!this.isSeeking()) {\n            this.setPlaybackPosition(playbackPositionPercentage);\n          }\n\n          this.setAriaSliderMinMax(player.getMaxTimeShift().toString(), '0');\n        }\n      } else {\n        // Update playback position only in paused state or in the initial startup state where player is neither\n        // paused nor playing. Playback updates are handled in the Timeout below.\n        const isInInitialStartupState = this.config.smoothPlaybackPositionUpdateIntervalMs === SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED\n            || forceUpdate || player.isPaused();\n        const isNeitherPausedNorPlaying = player.isPaused() === player.isPlaying();\n\n        if ((isInInitialStartupState || isNeitherPausedNorPlaying) && !this.isSeeking()) {\n          this.setPlaybackPosition(playbackPositionPercentage);\n        }\n\n        this.setAriaSliderMinMax('0', player.getDuration().toString());\n      }\n\n      if (this.isUiShown) {\n        this.setAriaSliderValues();\n      }\n    };\n\n    // Update seekbar upon these events\n    // init playback position when the player is ready\n    player.on(player.exports.PlayerEvent.Ready, playbackPositionHandler);\n    // update playback position when it changes\n    player.on(player.exports.PlayerEvent.TimeChanged, playbackPositionHandler);\n    // update bufferlevel when buffering is complete\n    player.on(player.exports.PlayerEvent.StallEnded, playbackPositionHandler);\n    // update playback position when a timeshift has finished\n    player.on(player.exports.PlayerEvent.TimeShifted, playbackPositionHandler);\n    // update bufferlevel when a segment has been downloaded\n    player.on(player.exports.PlayerEvent.SegmentRequestFinished, playbackPositionHandler);\n\n    this.configureLivePausedTimeshiftUpdater(player, uimanager, playbackPositionHandler);\n\n    // Seek handling\n    let onPlayerSeek = () => {\n      isPlayerSeeking = true;\n      this.setSeeking(true);\n      scrubbing = false;\n    };\n\n    let onPlayerSeeked = (event: PlayerEventBase = null, forceUpdate: boolean = false ) => {\n      isPlayerSeeking = false;\n      this.setSeeking(false);\n\n      // update playback position when a seek has finished\n      playbackPositionHandler(event, forceUpdate);\n    };\n\n    let restorePlayingState = function () {\n      // Continue playback after seek if player was playing when seek started\n      if (isPlaying) {\n        // use the same issuer here as in the pause on seek\n        player.play('ui-seek');\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.Seek, onPlayerSeek);\n    player.on(player.exports.PlayerEvent.Seeked, onPlayerSeeked);\n    player.on(player.exports.PlayerEvent.TimeShift, onPlayerSeek);\n    player.on(player.exports.PlayerEvent.TimeShifted, onPlayerSeeked);\n\n    let isGroupPlaybackAPIAvailable = (player: PlayerAPI): player is ExtendedPlayerAPI => {\n      return !!(player as ExtendedPlayerAPI).groupPlayback;\n    };\n\n    this.onSeek.subscribe((sender) => {\n      // track seeking status so we can catch events from seek preview seeks\n      this.isUserSeeking = true;\n      // Notify UI manager of started seek\n      uimanager.onSeek.dispatch(sender);\n\n      if (isGroupPlaybackAPIAvailable(player) && player.groupPlayback.hasJoined() && !suspension) {\n        suspension = player.groupPlayback.beginSuspension(GroupPlaybackSuspensionReason.UserIsScrubbing);\n      }\n\n      // Save current playback state before performing the seek\n      if (!isPlayerSeeking) {\n        isPlaying = player.isPlaying();\n\n        // Pause playback while seeking\n        if (isPlaying) {\n          // use a different issuer here, as play/pause on seek is not \"really\" triggerd by the user\n          player.pause('ui-seek');\n        }\n      }\n    });\n\n    this.onSeekPreview.subscribe((sender: SeekBar, args: SeekPreviewEventArgs) => {\n      // Notify UI manager of seek preview\n      uimanager.onSeekPreview.dispatch(sender, args);\n      scrubbing = args.scrubbing;\n    });\n\n    // Set enableSeekPreview if set in the uimanager config\n    if (typeof uimanager.getConfig().enableSeekPreview === 'boolean') {\n      this.config.enableSeekPreview = uimanager.getConfig().enableSeekPreview;\n    }\n\n    // Rate-limited scrubbing seek\n    if (this.config.enableSeekPreview) {\n      this.onSeekPreview.subscribeRateLimited(this.seekWhileScrubbing, 200);\n    }\n\n    this.onSeeked.subscribe((sender, percentage) => {\n      this.isUserSeeking = false;\n\n      // Do the seek\n      this.seek(percentage);\n\n      // Notify UI manager of finished seek\n      uimanager.onSeeked.dispatch(sender);\n\n      // Continue playback after seek if player was playing when seek started\n      restorePlayingState();\n\n      if (isGroupPlaybackAPIAvailable(player) && player.groupPlayback.hasJoined() && suspension) {\n        const proposedPlaybackTime = this.getTargetSeekPosition(percentage);\n        player.groupPlayback.endSuspension(suspension, { proposedPlaybackTime });\n        suspension = undefined;\n      }\n    });\n\n    if (this.hasLabel()) {\n      // Configure a seekbar label that is internal to the seekbar)\n      this.getLabel().configure(player, uimanager);\n    }\n\n    // Hide seekbar for live sources without timeshift\n    let isLive = false;\n    let hasTimeShift = false;\n    let switchVisibility = (isLive: boolean, hasTimeShift: boolean) => {\n      if (isLive && !hasTimeShift) {\n        this.hide();\n      } else {\n        this.show();\n      }\n      playbackPositionHandler(null, true);\n      this.refreshPlaybackPosition();\n    };\n    let liveStreamDetector = new PlayerUtils.LiveStreamDetector(player, uimanager);\n    liveStreamDetector.onLiveChanged.subscribe((sender, args: LiveStreamDetectorEventArgs) => {\n      isLive = args.live;\n      if (isLive && this.smoothPlaybackPositionUpdater != null) {\n        this.smoothPlaybackPositionUpdater.clear();\n        this.seekBarType = SeekBarType.Live;\n      } else {\n        this.seekBarType = SeekBarType.Vod;\n      }\n      switchVisibility(isLive, hasTimeShift);\n    });\n    let timeShiftDetector = new PlayerUtils.TimeShiftAvailabilityDetector(player);\n    timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe((sender, args: TimeShiftAvailabilityChangedArgs) => {\n      hasTimeShift = args.timeShiftAvailable;\n      switchVisibility(isLive, hasTimeShift);\n    });\n    // Initial detection\n    liveStreamDetector.detect();\n    timeShiftDetector.detect();\n\n    // Refresh the playback position when the player resized or the UI is configured. The playback position marker\n    // is positioned absolutely and must therefore be updated when the size of the seekbar changes.\n    player.on(player.exports.PlayerEvent.PlayerResized, () => {\n      this.refreshPlaybackPosition();\n    });\n    // Additionally, when this code is called, the seekbar is not part of the UI yet and therefore does not have a size,\n    // resulting in a wrong initial position of the marker. Refreshing it once the UI is configured solved this issue.\n    uimanager.onConfigured.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n    // It can also happen when a new source is loaded\n    player.on(player.exports.PlayerEvent.SourceLoaded, () => {\n      this.refreshPlaybackPosition();\n    });\n    // Add markers when a source is loaded or update when a marker is added or removed\n    uimanager.getConfig().events.onUpdated.subscribe(() => {\n      playbackPositionHandler();\n    });\n\n    // Set the snappingRange if set in the uimanager config\n    if (typeof uimanager.getConfig().seekbarSnappingRange === 'number') {\n      this.config.snappingRange = uimanager.getConfig().seekbarSnappingRange;\n    }\n\n    if (typeof uimanager.getConfig().seekbarSnappingEnabled === 'boolean') {\n      this.config.snappingEnabled = uimanager.getConfig().seekbarSnappingEnabled;\n    }\n\n    // Initialize seekbar\n    playbackPositionHandler(); // Set the playback position\n    this.setBufferPosition(0);\n    this.setSeekPosition(0);\n    if (this.config.smoothPlaybackPositionUpdateIntervalMs !== SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED) {\n      this.configureSmoothPlaybackPositionUpdater(player, uimanager);\n    }\n\n    // Initialize markers\n    this.initializeTimelineMarkers(player, uimanager);\n  }\n\n  private initializeTimelineMarkers(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    const timelineMarkerConfig = {\n      cssPrefix: this.config.cssPrefix,\n      snappingRange: this.config.snappingRange,\n    };\n    this.timelineMarkersHandler = new TimelineMarkersHandler(timelineMarkerConfig, () => this.seekBar.width(), this.seekBarMarkersContainer);\n    this.timelineMarkersHandler.initialize(player, uimanager);\n  }\n\n  private seekWhileScrubbing = (sender: SeekBar, args: SeekPreviewEventArgs) => {\n    if (args.scrubbing) {\n      this.seek(args.position);\n    }\n  };\n\n  private getTargetSeekPosition = (percentage: number) => {\n    let target: number;\n    if (this.player.isLive()) {\n      const maxTimeShift = this.player.getMaxTimeShift();\n      target = maxTimeShift - (maxTimeShift * (percentage / 100));\n    } else {\n      const seekableRangeStart = PlayerUtils.getSeekableRangeStart(this.player, 0);\n      const relativeSeekTarget = this.player.getDuration() * (percentage / 100);\n      target = relativeSeekTarget + seekableRangeStart;\n    }\n\n    return target;\n  }\n\n  private seek = (percentage: number) => {\n    const targetPlaybackPosition = this.getTargetSeekPosition(percentage);\n    if (this.player.isLive()) {\n      this.player.timeShift(targetPlaybackPosition, 'ui');\n    } else {\n      this.player.seek(targetPlaybackPosition, 'ui');\n    }\n  };\n\n  /**\n   * Update seekbar while a live stream with DVR window is paused.\n   * The playback position stays still and the position indicator visually moves towards the back.\n   */\n  private configureLivePausedTimeshiftUpdater(\n    player: PlayerAPI,\n    uimanager: UIInstanceManager,\n    playbackPositionHandler: () => void,\n  ): void {\n    // Regularly update the playback position while the timeout is active\n    this.pausedTimeshiftUpdater = new Timeout(1000, playbackPositionHandler, true);\n\n    // Start updater when a live stream with timeshift window is paused\n    player.on(player.exports.PlayerEvent.Paused, () => {\n      if (player.isLive() && player.getMaxTimeShift() < 0) {\n        this.pausedTimeshiftUpdater.start();\n      }\n    });\n\n    // Stop updater when playback continues (no matter if the updater was started before)\n    player.on(player.exports.PlayerEvent.Play, () => this.pausedTimeshiftUpdater.clear());\n  }\n\n  private configureSmoothPlaybackPositionUpdater(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    /*\n     * Playback position update\n     *\n     * We do not update the position directly from the TimeChanged event, because it arrives very jittery and\n     * results in a jittery position indicator since the CSS transition time is statically set.\n     * To work around this issue, we maintain a local playback position that is updated in a stable regular interval\n     * and kept in sync with the player.\n     */\n    let currentTimeSeekBar = 0;\n    let currentTimePlayer = 0;\n    let updateIntervalMs = 50;\n    let currentTimeUpdateDeltaSecs = updateIntervalMs / 1000;\n\n    this.smoothPlaybackPositionUpdater = new Timeout(updateIntervalMs, () => {\n      if (this.isSeeking()) {\n        return;\n      }\n\n      currentTimeSeekBar += currentTimeUpdateDeltaSecs;\n\n      try {\n        currentTimePlayer = this.getRelativeCurrentTime();\n      } catch (error) {\n        // Detect if the player has been destroyed and stop updating if so\n        if (error instanceof player.exports.PlayerAPINotAvailableError) {\n          this.smoothPlaybackPositionUpdater.clear();\n        }\n\n        // If the current time cannot be read it makes no sense to continue\n        return;\n      }\n\n      // Sync currentTime of seekbar to player\n      let currentTimeDelta = currentTimeSeekBar - currentTimePlayer;\n      // If the delta is larger that 2 secs, directly jump the seekbar to the\n      // player time instead of smoothly fast forwarding/rewinding.\n      if (Math.abs(currentTimeDelta) > 2) {\n        currentTimeSeekBar = currentTimePlayer;\n      }\n      // If currentTimeDelta is negative and below the adjustment threshold,\n      // the player is ahead of the seekbar and we 'fast forward' the seekbar\n      else if (currentTimeDelta <= -currentTimeUpdateDeltaSecs) {\n        currentTimeSeekBar += currentTimeUpdateDeltaSecs;\n      }\n      // If currentTimeDelta is positive and above the adjustment threshold,\n      // the player is behind the seekbar and we 'rewind' the seekbar\n      else if (currentTimeDelta >= currentTimeUpdateDeltaSecs) {\n        currentTimeSeekBar -= currentTimeUpdateDeltaSecs;\n      }\n\n      let playbackPositionPercentage = 100 / player.getDuration() * currentTimeSeekBar;\n      this.setPlaybackPosition(playbackPositionPercentage);\n    }, true);\n\n    let startSmoothPlaybackPositionUpdater = () => {\n      if (!player.isLive()) {\n        currentTimeSeekBar = this.getRelativeCurrentTime();\n        this.smoothPlaybackPositionUpdater.start();\n      }\n    };\n\n    let stopSmoothPlaybackPositionUpdater = () => {\n      this.smoothPlaybackPositionUpdater.clear();\n    };\n\n    player.on(player.exports.PlayerEvent.Play, startSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.Playing, startSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.Paused, stopSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.PlaybackFinished, stopSmoothPlaybackPositionUpdater);\n    player.on(player.exports.PlayerEvent.Seeked, () => {\n      currentTimeSeekBar = this.getRelativeCurrentTime();\n    });\n    player.on(player.exports.PlayerEvent.SourceUnloaded, stopSmoothPlaybackPositionUpdater);\n\n    if (player.isPlaying()) {\n      startSmoothPlaybackPositionUpdater();\n    }\n  }\n\n  private getRelativeCurrentTime(): number {\n    return PlayerUtils.getCurrentTimeRelativeToSeekableRange(this.player);\n  }\n\n  release(): void {\n    super.release();\n\n    if (this.smoothPlaybackPositionUpdater) { // object must not necessarily exist, e.g. in volume slider subclass\n      this.smoothPlaybackPositionUpdater.clear();\n    }\n\n    if (this.pausedTimeshiftUpdater) {\n      this.pausedTimeshiftUpdater.clear();\n    }\n\n    if (this.config.enableSeekPreview) {\n      this.onSeekPreview.unsubscribe(this.seekWhileScrubbing);\n    }\n  }\n\n  protected toDomElement(): DOM {\n    if (this.config.vertical) {\n      this.config.cssClasses.push('vertical');\n    }\n\n    let seekBarContainer = new DOM('div', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'role': 'slider',\n      'aria-label': i18n.performLocalization(this.config.ariaLabel),\n      'tabindex': this.config.tabIndex.toString(),\n    }, this);\n\n    let seekBar = new DOM('div', {\n      'class': this.prefixCss('seekbar'),\n    });\n    this.seekBar = seekBar;\n\n    // Indicator that shows the buffer fill level\n    let seekBarBufferLevel = new DOM('div', {\n      'class': this.prefixCss('seekbar-bufferlevel'),\n    });\n    this.seekBarBufferPosition = seekBarBufferLevel;\n\n    // Indicator that shows the current playback position\n    let seekBarPlaybackPosition = new DOM('div', {\n      'class': this.prefixCss('seekbar-playbackposition'),\n    });\n    this.seekBarPlaybackPosition = seekBarPlaybackPosition;\n\n    // A marker of the current playback position, e.g. a dot or line\n    let seekBarPlaybackPositionMarker = new DOM('div', {\n      'class': this.prefixCss('seekbar-playbackposition-marker'),\n    });\n    this.seekBarPlaybackPositionMarker = seekBarPlaybackPositionMarker;\n\n    // Indicator that show where a seek will go to\n    let seekBarSeekPosition = new DOM('div', {\n      'class': this.prefixCss('seekbar-seekposition'),\n    });\n    this.seekBarSeekPosition = seekBarSeekPosition;\n\n    // Indicator that shows the full seekbar\n    let seekBarBackdrop = new DOM('div', {\n      'class': this.prefixCss('seekbar-backdrop'),\n    });\n    this.seekBarBackdrop = seekBarBackdrop;\n\n    let seekBarChapterMarkersContainer = new DOM('div', {\n      'class': this.prefixCss('seekbar-markers'),\n    });\n    this.seekBarMarkersContainer = seekBarChapterMarkersContainer;\n\n    seekBar.append(this.seekBarBackdrop, this.seekBarBufferPosition, this.seekBarSeekPosition,\n      this.seekBarPlaybackPosition, this.seekBarMarkersContainer, this.seekBarPlaybackPositionMarker);\n\n    let seeking = false;\n\n    // Define handler functions so we can attach/remove them later\n    let mouseTouchMoveHandler = (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n      // Avoid propagation to VR handler\n      if (this.player.vr != null) {\n        e.stopPropagation();\n      }\n\n      let targetPercentage = 100 * this.getOffset(e);\n      this.setSeekPosition(targetPercentage);\n      this.setPlaybackPosition(targetPercentage);\n      this.onSeekPreviewEvent(targetPercentage, true);\n    };\n\n    let mouseTouchUpHandler = (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n\n      // Remove handlers, seek operation is finished\n      new DOM(document).off('touchmove mousemove', mouseTouchMoveHandler);\n      new DOM(document).off('touchend mouseup', mouseTouchUpHandler);\n\n      let targetPercentage = 100 * this.getOffset(e);\n\n      if (this.config.snappingEnabled) {\n        const matchingMarker = this.timelineMarkersHandler?.getMarkerAtPosition(targetPercentage);\n        targetPercentage = matchingMarker ? matchingMarker.position : targetPercentage;\n      }\n\n      this.setSeeking(false);\n      seeking = false;\n\n      // Fire seeked event\n      this.onSeekedEvent(targetPercentage);\n    };\n\n    // A seek always start with a touchstart or mousedown directly on the seekbar.\n    // To track a mouse seek also outside the seekbar (for touch events this works automatically),\n    // so the user does not need to take care that the mouse always stays on the seekbar, we attach the mousemove\n    // and mouseup handlers to the whole document. A seek is triggered when the user lifts the mouse key.\n    // A seek mouse gesture is thus basically a click with a long time frame between down and up events.\n    seekBar.on('touchstart mousedown', (e: MouseEvent | TouchEvent) => {\n      let isTouchEvent = BrowserUtils.isTouchSupported && this.isTouchEvent(e);\n\n      // Prevent selection of DOM elements (also prevents mousedown if current event is touchstart)\n      e.preventDefault();\n      // Avoid propagation to VR handler\n      if (this.player.vr != null) {\n        e.stopPropagation();\n      }\n\n      this.setSeeking(true); // Set seeking class on DOM element\n      seeking = true; // Set seek tracking flag\n\n      // Fire seeked event\n      this.onSeekEvent();\n\n      // Add handler to track the seek operation over the whole document\n      new DOM(document).on(isTouchEvent ? 'touchmove' : 'mousemove', mouseTouchMoveHandler);\n      new DOM(document).on(isTouchEvent ? 'touchend' : 'mouseup', mouseTouchUpHandler);\n    });\n\n    // Display seek target indicator when mouse hovers or finger slides over seekbar\n    seekBar.on('touchmove mousemove', (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n\n      if (seeking) {\n        mouseTouchMoveHandler(e);\n      }\n\n      let position = 100 * this.getOffset(e);\n      this.setSeekPosition(position);\n\n      this.onSeekPreviewEvent(position, false);\n\n      if (this.hasLabel() && this.getLabel().isHidden()) {\n        this.getLabel().show();\n      }\n    });\n\n    // Hide seek target indicator when mouse or finger leaves seekbar\n    seekBar.on('touchend mouseleave', (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n\n      this.setSeekPosition(0);\n\n      if (this.hasLabel()) {\n        this.getLabel().hide();\n      }\n    });\n\n    seekBarContainer.append(seekBar);\n\n    if (this.label) {\n      seekBarContainer.append(this.label.getDomElement());\n    }\n\n    return seekBarContainer;\n  }\n\n  /**\n   * Gets the horizontal offset of a mouse/touch event point from the left edge of the seek bar.\n   * @param eventPageX the pageX coordinate of an event to calculate the offset from\n   * @returns {number} a number in the range of [0, 1], where 0 is the left edge and 1 is the right edge\n   */\n  private getHorizontalOffset(eventPageX: number): number {\n    let elementOffsetPx = this.seekBar.offset().left;\n    let widthPx = this.seekBar.width();\n    let offsetPx = eventPageX - elementOffsetPx;\n    let offset = 1 / widthPx * offsetPx;\n\n    return this.sanitizeOffset(offset);\n  }\n\n  /**\n   * Gets the vertical offset of a mouse/touch event point from the bottom edge of the seek bar.\n   * @param eventPageY the pageX coordinate of an event to calculate the offset from\n   * @returns {number} a number in the range of [0, 1], where 0 is the bottom edge and 1 is the top edge\n   */\n  private getVerticalOffset(eventPageY: number): number {\n    let elementOffsetPx = this.seekBar.offset().top;\n    let widthPx = this.seekBar.height();\n    let offsetPx = eventPageY - elementOffsetPx;\n    let offset = 1 / widthPx * offsetPx;\n\n    return 1 - this.sanitizeOffset(offset);\n  }\n\n  /**\n   * Gets the mouse or touch event offset for the current configuration (horizontal or vertical).\n   * @param e the event to calculate the offset from\n   * @returns {number} a number in the range of [0, 1]\n   * @see #getHorizontalOffset\n   * @see #getVerticalOffset\n   */\n  private getOffset(e: MouseEvent | TouchEvent): number {\n    if (BrowserUtils.isTouchSupported && this.isTouchEvent(e)) {\n      if (this.config.vertical) {\n        return this.getVerticalOffset(e.type === 'touchend' ? e.changedTouches[0].pageY : e.touches[0].pageY);\n      } else {\n        return this.getHorizontalOffset(e.type === 'touchend' ? e.changedTouches[0].pageX : e.touches[0].pageX);\n      }\n    }\n    else if (e instanceof MouseEvent) {\n      if (this.config.vertical) {\n        return this.getVerticalOffset(e.pageY);\n      } else {\n        return this.getHorizontalOffset(e.pageX);\n      }\n    }\n    else {\n      if (console) {\n        console.warn('invalid event');\n      }\n      return 0;\n    }\n  }\n\n  /**\n   * Sanitizes the mouse offset to the range of [0, 1].\n   *\n   * When tracking the mouse outside the seek bar, the offset can be outside the desired range and this method\n   * limits it to the desired range. E.g. a mouse event left of the left edge of a seek bar yields an offset below\n   * zero, but to display the seek target on the seek bar, we need to limit it to zero.\n   *\n   * @param offset the offset to sanitize\n   * @returns {number} the sanitized offset.\n   */\n  private sanitizeOffset(offset: number) {\n    // Since we track mouse moves over the whole document, the target can be outside the seek range,\n    // and we need to limit it to the [0, 1] range.\n    if (offset < 0) {\n      offset = 0;\n    } else if (offset > 1) {\n      offset = 1;\n    }\n\n    return offset;\n  }\n\n  /**\n   * Sets the position of the playback position indicator.\n   * @param percent a number between 0 and 100 as returned by the player\n   */\n  setPlaybackPosition(percent: number) {\n    this.playbackPositionPercentage = percent;\n\n    // Set position of the bar\n    this.setPosition(this.seekBarPlaybackPosition, percent);\n\n    // Set position of the marker\n    let totalSize = (this.config.vertical ? (this.seekBar.height() - this.seekBarPlaybackPositionMarker.height()) : this.seekBar.width());\n    let px = (totalSize) / 100 * percent;\n    if (this.config.vertical) {\n      px = this.seekBar.height() - px - this.seekBarPlaybackPositionMarker.height();\n    }\n\n    let style = this.config.vertical ?\n      // -ms-transform required for IE9\n      // -webkit-transform required for Android 4.4 WebView\n      {\n        'transform': 'translateY(' + px + 'px)',\n        '-ms-transform': 'translateY(' + px + 'px)',\n        '-webkit-transform': 'translateY(' + px + 'px)',\n      } :\n      {\n        'transform': 'translateX(' + px + 'px)',\n        '-ms-transform': 'translateX(' + px + 'px)',\n        '-webkit-transform': 'translateX(' + px + 'px)',\n      };\n    this.seekBarPlaybackPositionMarker.css(style);\n  }\n\n  /**\n   * Refreshes the playback position. Can be used by subclasses to refresh the position when\n   * the size of the component changes.\n   */\n  protected refreshPlaybackPosition() {\n    this.setPlaybackPosition(this.playbackPositionPercentage);\n  }\n\n  /**\n   * Sets the position until which media is buffered.\n   * @param percent a number between 0 and 100\n   */\n  setBufferPosition(percent: number) {\n    this.setPosition(this.seekBarBufferPosition, percent);\n  }\n\n  /**\n   * Sets the position where a seek, if executed, would jump to.\n   * @param percent a number between 0 and 100\n   */\n  setSeekPosition(percent: number) {\n    this.setPosition(this.seekBarSeekPosition, percent);\n  }\n\n  /**\n   * Set the actual position (width or height) of a DOM element that represent a bar in the seek bar.\n   * @param element the element to set the position for\n   * @param percent a number between 0 and 100\n   */\n  private setPosition(element: DOM, percent: number) {\n    let scale = percent / 100;\n\n    // When the scale is exactly 1 or very near 1 (and the browser internally rounds it to 1), browsers seem to render\n    // the elements differently and the height gets slightly off, leading to mismatching heights when e.g. the buffer\n    // level bar has a width of 1 and the playback position bar has a width < 1. A jittering buffer level around 1\n    // leads to an even worse flickering effect.\n    // Various changes in CSS styling and DOM hierarchy did not solve the issue so the workaround is to avoid a scale\n    // of exactly 1.\n    if (scale >= 0.99999 && scale <= 1.00001) {\n      scale = 0.99999;\n    }\n\n    let style = this.config.vertical ?\n      // -ms-transform required for IE9\n      // -webkit-transform required for Android 4.4 WebView\n      {\n        'transform': 'scaleY(' + scale + ')',\n        '-ms-transform': 'scaleY(' + scale + ')',\n        '-webkit-transform': 'scaleY(' + scale + ')',\n      } :\n      {\n        'transform': 'scaleX(' + scale + ')',\n        '-ms-transform': 'scaleX(' + scale + ')',\n        '-webkit-transform': 'scaleX(' + scale + ')',\n      };\n    element.css(style);\n  }\n\n  /**\n   * Puts the seek bar into or out of seeking state by adding/removing a class to the DOM element. This can be used\n   * to adjust the styling while seeking.\n   *\n   * @param seeking should be true when entering seek state, false when exiting the seek state\n   */\n  setSeeking(seeking: boolean) {\n    if (seeking) {\n      this.getDomElement().addClass(this.prefixCss(SeekBar.CLASS_SEEKING));\n    } else {\n      this.getDomElement().removeClass(this.prefixCss(SeekBar.CLASS_SEEKING));\n    }\n  }\n\n  /**\n   * Checks if the seek bar is currently in the seek state.\n   * @returns {boolean} true if in seek state, else false\n   */\n  isSeeking(): boolean {\n    return this.getDomElement().hasClass(this.prefixCss(SeekBar.CLASS_SEEKING));\n  }\n\n  /**\n   * Checks if the seek bar has a {@link SeekBarLabel}.\n   * @returns {boolean} true if the seek bar has a label, else false\n   */\n  hasLabel(): boolean {\n    return this.label != null;\n  }\n\n  /**\n   * Gets the label of this seek bar.\n   * @returns {SeekBarLabel} the label if this seek bar has a label, else null\n   */\n  getLabel(): SeekBarLabel | null {\n    return this.label;\n  }\n\n  protected onSeekEvent() {\n    this.seekBarEvents.onSeek.dispatch(this);\n  }\n\n  protected onSeekPreviewEvent(percentage: number, scrubbing: boolean) {\n    let snappedMarker = this.timelineMarkersHandler && this.timelineMarkersHandler.getMarkerAtPosition(percentage);\n\n    let seekPositionPercentage = percentage;\n\n    if (snappedMarker) {\n      if (snappedMarker.duration > 0) {\n        if (percentage < snappedMarker.position) {\n          // Snap the position to the start of the interval if the seek is within the left snap margin\n          // We know that we are within a snap margin when we are outside the marker interval but still\n          // have a snappedMarker\n          seekPositionPercentage = snappedMarker.position;\n        } else if (percentage > snappedMarker.position + snappedMarker.duration) {\n          // Snap the position to the end of the interval if the seek is within the right snap margin\n          seekPositionPercentage = snappedMarker.position + snappedMarker.duration;\n        }\n      } else {\n        // Position markers always snap to their marker position\n        seekPositionPercentage = snappedMarker.position;\n      }\n    }\n\n    if (this.label) {\n      this.label.getDomElement().css({\n        'left': seekPositionPercentage + '%',\n      });\n    }\n\n    this.seekBarEvents.onSeekPreview.dispatch(this, {\n      scrubbing: scrubbing,\n      position: seekPositionPercentage,\n      marker: snappedMarker,\n    });\n  }\n\n  protected onSeekedEvent(percentage: number) {\n    this.seekBarEvents.onSeeked.dispatch(this, percentage);\n  }\n\n  /**\n   * Gets the event that is fired when a scrubbing seek operation is started.\n   * @returns {Event<SeekBar, NoArgs>}\n   */\n  get onSeek(): Event<SeekBar, NoArgs> {\n    return this.seekBarEvents.onSeek.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired during a scrubbing seek (to indicate that the seek preview, i.e. the video frame,\n   * should be updated), or during a normal seek preview when the seek bar is hovered (and the seek target,\n   * i.e. the seek bar label, should be updated).\n   * @returns {Event<SeekBar, SeekPreviewEventArgs>}\n   */\n  get onSeekPreview(): Event<SeekBar, SeekPreviewEventArgs> {\n    return this.seekBarEvents.onSeekPreview.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when a scrubbing seek has finished or when a direct seek is issued.\n   * @returns {Event<SeekBar, number>}\n   */\n  get onSeeked(): Event<SeekBar, number> {\n    return this.seekBarEvents.onSeeked.getEvent();\n  }\n\n\n  protected onShowEvent(): void {\n    super.onShowEvent();\n\n    // Refresh the position of the playback position when the seek bar becomes visible. To correctly set the position,\n    // the DOM element must be fully initialized an have its size calculated, because the position is set as an absolute\n    // value calculated from the size. This required size is not known when it is hidden.\n    // For such cases, we refresh the position here in onShow because here it is guaranteed that the component knows\n    // its size and can set the position correctly.\n    this.refreshPlaybackPosition();\n  }\n\n /**\n   * Checks if TouchEvent is supported.\n   * @returns {boolean} true if TouchEvent not undefined, else false\n   */\n  isTouchEvent(e: UIEvent): e is TouchEvent {\n    return window.TouchEvent && e instanceof TouchEvent;\n  }\n}\n","import {PlayerAPI} from 'bitmovin-player';\n\nexport function getMinBufferLevel(player: PlayerAPI): number {\n\n    const playerDuration = player.getDuration();\n\n    const videoBufferLength = player.getVideoBufferLength();\n    const audioBufferLength = player.getAudioBufferLength();\n    // Calculate the buffer length which is the smaller length of the audio and video buffers. If one of these\n    // buffers is not available, we set it's value to MAX_VALUE to make sure that the other real value is taken\n    // as the buffer length.\n    let bufferLength = Math.min(\n        videoBufferLength != null ? videoBufferLength : Number.MAX_VALUE,\n        audioBufferLength != null ? audioBufferLength : Number.MAX_VALUE);\n    // If both buffer lengths are missing, we set the buffer length to zero\n    if (bufferLength === Number.MAX_VALUE) {\n        bufferLength = 0;\n    }\n\n    return 100 / playerDuration * bufferLength;\n}\n","import { UIUtils } from '../uiutils';\nimport { DOM } from '../dom';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { VolumeController } from '../volumecontroller';\n\nexport enum SeekBarType {\n  Vod,\n  Live,\n  Volume,\n}\n\ninterface Range {\n  min: number;\n  max: number;\n}\n\ninterface KeyStepIncrementsConfig {\n  leftRight: number;\n  upDown: number;\n}\n\nconst coerceValueIntoRange = (\n  value: number,\n  range: Range,\n  cb: (value: number) => void,\n) => {\n  if (value < range.min) {\n    cb(range.min);\n  } else if (value > range.max) {\n    cb(range.max);\n  } else {\n    cb(value);\n  }\n};\n\n/**\n * @category Utils\n */\nexport class SeekBarController {\n  protected keyStepIncrements: KeyStepIncrementsConfig;\n  protected player: PlayerAPI;\n  protected volumeController: VolumeController;\n\n  constructor(\n    keyStepIncrements: KeyStepIncrementsConfig,\n    player: PlayerAPI,\n    volumeController: VolumeController,\n  ) {\n    this.keyStepIncrements = keyStepIncrements;\n    this.player = player;\n    this.volumeController = volumeController;\n  }\n\n  protected arrowKeyControls(\n    currentValue: number,\n    range: Range,\n    valueUpdate: (value: number) => void,\n  ) {\n    const controlValue = Math.floor(currentValue);\n\n    return {\n      left: () => coerceValueIntoRange(controlValue - this.keyStepIncrements.leftRight, range, valueUpdate),\n      right: () => coerceValueIntoRange(controlValue + this.keyStepIncrements.leftRight, range, valueUpdate),\n      up: () => coerceValueIntoRange(controlValue + this.keyStepIncrements.upDown, range, valueUpdate),\n      down: () => coerceValueIntoRange(controlValue - this.keyStepIncrements.upDown, range, valueUpdate),\n      home: () => coerceValueIntoRange(range.min, range, valueUpdate),\n      end: () => coerceValueIntoRange(range.max, range, valueUpdate),\n    };\n  }\n\n  protected seekBarControls(type: SeekBarType) {\n    if (type === SeekBarType.Live) {\n      return this.arrowKeyControls(this.player.getTimeShift(), { min: this.player.getMaxTimeShift(), max: 0 }, this.player.timeShift);\n    } else if (type === SeekBarType.Vod) {\n      return this.arrowKeyControls(this.player.getCurrentTime(), { min: 0, max: this.player.getDuration() }, this.player.seek);\n    } else if (type === SeekBarType.Volume && this.volumeController != null) {\n      const volumeTransition = this.volumeController.startTransition();\n      return this.arrowKeyControls(this.player.getVolume(), { min: 0, max: 100 }, volumeTransition.finish.bind(volumeTransition));\n    }\n  }\n\n  public setSeekBarControls(domElement: DOM, type: () => SeekBarType) {\n    domElement.on('keydown', (e: KeyboardEvent) => {\n      const controls = this.seekBarControls(type());\n      switch (e.keyCode) {\n        case UIUtils.KeyCode.LeftArrow: {\n          controls.left();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.RightArrow: {\n          controls.right();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.UpArrow: {\n          controls.up();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.DownArrow: {\n          controls.down();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.Home: {\n          controls.home();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.End: {\n          controls.end();\n          e.preventDefault();\n          break;\n        }\n        case UIUtils.KeyCode.Space: {\n          this.player.isPlaying() ? this.player.pause() : this.player.play();\n          e.preventDefault();\n          break;\n        }\n      }\n    });\n  }\n}","import {Container, ContainerConfig} from './container';\nimport {Label, LabelConfig} from './label';\nimport {Component, ComponentConfig} from './component';\nimport { UIInstanceManager } from '../uimanager';\nimport {StringUtils} from '../stringutils';\nimport {ImageLoader} from '../imageloader';\nimport {CssProperties} from '../dom';\nimport { PlayerAPI, Thumbnail } from 'bitmovin-player';\nimport { SeekBar, SeekPreviewEventArgs } from './seekbar';\nimport { PlayerUtils } from '../playerutils';\n\n/**\n * Configuration interface for a {@link SeekBarLabel}.\n *\n * @category Configs\n */\nexport interface SeekBarLabelConfig extends ContainerConfig {\n  // nothing yet\n}\n\n/**\n * A label for a {@link SeekBar} that can display the seek target time, a thumbnail, and title (e.g. chapter title).\n *\n * @category Components\n */\nexport class SeekBarLabel extends Container<SeekBarLabelConfig> {\n\n  private timeLabel: Label<LabelConfig>;\n  private titleLabel: Label<LabelConfig>;\n  private thumbnail: Component<ComponentConfig>;\n\n  private thumbnailImageLoader: ImageLoader;\n\n  private timeFormat: string;\n\n  private appliedMarkerCssClasses: string[] = [];\n  private player: PlayerAPI;\n  private uiManager: UIInstanceManager;\n\n  constructor(config: SeekBarLabelConfig = {}) {\n    super(config);\n\n    this.timeLabel = new Label({ cssClasses: ['seekbar-label-time'] });\n    this.titleLabel = new Label({ cssClasses: ['seekbar-label-title'] });\n    this.thumbnail = new Component({ cssClasses: ['seekbar-thumbnail'], role: 'img' });\n    this.thumbnailImageLoader = new ImageLoader();\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-seekbar-label',\n      components: [new Container({\n        components: [\n          this.thumbnail,\n          new Container({\n            components: [this.titleLabel, this.timeLabel],\n            cssClass: 'seekbar-label-metadata',\n          })],\n        cssClass: 'seekbar-label-inner',\n      })],\n      hidden: true,\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.player = player;\n    this.uiManager = uimanager;\n    uimanager.onSeekPreview.subscribeRateLimited(this.handleSeekPreview, 100);\n\n    let init = () => {\n      // Set time format depending on source duration\n      this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?\n        StringUtils.FORMAT_HHMMSS : StringUtils.FORMAT_MMSS;\n      // Set initial state of title and thumbnail to handle sourceLoaded when switching to a live-stream\n      this.setTitleText(null);\n      this.setThumbnail(null);\n    };\n\n    uimanager.getConfig().events.onUpdated.subscribe(init);\n    init();\n  }\n\n  private handleSeekPreview = (sender: SeekBar, args: SeekPreviewEventArgs) => {\n    if (this.player.isLive()) {\n      let maxTimeShift = this.player.getMaxTimeShift();\n      let timeShiftPreview = maxTimeShift - maxTimeShift * (args.position / 100);\n\n      this.setTime(timeShiftPreview);\n\n      // In case of a live stream the player expects the time passed into the getThumbnail as a wallClockTime and not\n      // as a relative timeShift value.\n      const convertTimeShiftPreviewToWallClockTime = (targetTimeShift: number): number => {\n        const currentTimeShift = this.player.getTimeShift();\n        const currentTime = this.player.getCurrentTime();\n\n        const wallClockTimeOfLiveEdge = currentTime - currentTimeShift;\n        return wallClockTimeOfLiveEdge + targetTimeShift;\n      };\n\n      const wallClockTime = convertTimeShiftPreviewToWallClockTime(timeShiftPreview);\n      this.setThumbnail(this.player.getThumbnail(wallClockTime));\n\n    } else {\n      let time = this.player.getDuration() * (args.position / 100);\n      this.setTime(time);\n\n      const seekableRangeStart = PlayerUtils.getSeekableRangeStart(this.player, 0);\n      const absoluteSeekTarget = time + seekableRangeStart;\n      this.setThumbnail(this.player.getThumbnail(absoluteSeekTarget));\n    }\n\n    if (args.marker) {\n      this.setTitleText(args.marker.marker.title);\n    } else {\n      this.setTitleText(null);\n    }\n\n    // Remove CSS classes from previous marker\n    if (this.appliedMarkerCssClasses.length > 0) {\n      this.getDomElement().removeClass(this.appliedMarkerCssClasses.join(' '));\n      this.appliedMarkerCssClasses = [];\n    }\n\n    // Add CSS classes of current marker\n    if (args.marker) {\n      const cssClasses = (args.marker.marker.cssClasses || []).map(cssClass => this.prefixCss(cssClass));\n      this.getDomElement().addClass(cssClasses.join(' '));\n      this.appliedMarkerCssClasses = cssClasses;\n    }\n  };\n\n  /**\n   * Sets arbitrary text on the label.\n   * @param text the text to show on the label\n   */\n  setText(text: string) {\n    this.timeLabel.setText(text);\n  }\n\n  /**\n   * Sets a time to be displayed on the label.\n   * @param seconds the time in seconds to display on the label\n   */\n  setTime(seconds: number) {\n    this.setText(StringUtils.secondsToTime(seconds, this.timeFormat));\n  }\n\n  /**\n   * Sets the text on the title label.\n   * @param text the text to show on the label\n   */\n  setTitleText(text = '') {\n    this.titleLabel.setText(text);\n  }\n\n  /**\n   * Sets or removes a thumbnail on the label.\n   * @param thumbnail the thumbnail to display on the label or null to remove a displayed thumbnail\n   */\n  setThumbnail(thumbnail: Thumbnail = null) {\n    let thumbnailElement = this.thumbnail.getDomElement();\n\n    if (thumbnail == null) {\n      thumbnailElement.css({\n        'background-image': null,\n        'display': null,\n        'width': null,\n        'height': null,\n      });\n    }\n    else {\n      // We use the thumbnail image loader to make sure the thumbnail is loaded and it's size is known before be can\n      // calculate the CSS properties and set them on the element.\n      this.thumbnailImageLoader.load(thumbnail.url, (url, width, height) => {\n        // can be checked like that because x/y/w/h are either all present or none\n        // https://www.w3.org/TR/media-frags/#naming-space\n        if (thumbnail.x !== undefined) {\n          thumbnailElement.css(this.thumbnailCssSprite(thumbnail, width, height));\n        } else {\n          thumbnailElement.css(this.thumbnailCssSingleImage(thumbnail, width, height));\n        }\n      });\n    }\n  }\n\n  private thumbnailCssSprite(thumbnail: Thumbnail, width: number, height: number): CssProperties {\n    let thumbnailCountX = width / thumbnail.width;\n    let thumbnailCountY = height / thumbnail.height;\n\n    let thumbnailIndexX = thumbnail.x / thumbnail.width;\n    let thumbnailIndexY = thumbnail.y / thumbnail.height;\n\n    let sizeX = 100 * thumbnailCountX;\n    let sizeY = 100 * thumbnailCountY;\n\n    let offsetX = 100 * thumbnailIndexX;\n    let offsetY = 100 * thumbnailIndexY;\n\n    let aspectRatio = 1 / thumbnail.width * thumbnail.height;\n\n    // The thumbnail size is set by setting the CSS 'width' and 'padding-bottom' properties. 'padding-bottom' is\n    // used because it is relative to the width and can be used to set the aspect ratio of the thumbnail.\n    // A default value for width is set in the stylesheet and can be overwritten from there or anywhere else.\n    return {\n      'display': 'inherit',\n      'background-image': `url(${thumbnail.url})`,\n      'padding-bottom': `${100 * aspectRatio}%`,\n      'background-size': `${sizeX}% ${sizeY}%`,\n      'background-position': `-${offsetX}% -${offsetY}%`,\n    };\n  }\n\n  private thumbnailCssSingleImage(thumbnail: Thumbnail, width: number, height: number): CssProperties {\n    let aspectRatio = 1 / width * height;\n\n    return {\n      'display': 'inherit',\n      'background-image': `url(${thumbnail.url})`,\n      'padding-bottom': `${100 * aspectRatio}%`,\n      'background-size': `100% 100%`,\n      'background-position': `0 0`,\n    };\n  }\n\n  release(): void {\n    super.release();\n\n    this.uiManager.onSeekPreview.unsubscribe(this.handleSeekPreview);\n  }\n}\n","import { ListSelector, ListSelectorConfig } from './listselector';\nimport { DOM } from '../dom';\nimport { i18n } from '../localization/i18n';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { UIContainer } from './uicontainer';\nimport { PlayerUtils } from '../playerutils';\nimport { ViewMode } from './component';\n\nconst DocumentDropdownClosedEvents = [\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'pointermove',\n  'click',\n  'keydown',\n  'keypress',\n  'keyup',\n  'blur',\n];\n\nconst SelectDropdownClosedEvents = [\n  'change',\n  'keyup',\n  'mouseup',\n];\n\nconst DropdownOpenedEvents: [string, (event: Event) => boolean][] = [\n  ['click', () => true],\n  ['keydown', (event: KeyboardEvent) => [' ', 'ArrowUp', 'ArrowDown'].includes(event.key)],\n  ['mousedown', () => true],\n];\n\nconst Timeout = 100;\n\n/**\n * A simple select box providing the possibility to select a single item out of a list of available items.\n *\n * DOM example:\n * <code>\n *     <select class='ui-selectbox'>\n *         <option value='key'>label</option>\n *         ...\n *     </select>\n * </code>\n *\n * @category Components\n */\n\nexport class SelectBox extends ListSelector<ListSelectorConfig> {\n  private selectElement: DOM | undefined;\n  private dropdownCloseListenerTimeoutId = 0;\n  private removeDropdownCloseListeners = () => {};\n  private uiContainer: UIContainer | undefined;\n  private removeDropdownOpenedListeners = () => {};\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-selectbox',\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    this.selectElement = new DOM('select', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'aria-label': i18n.performLocalization(this.config.ariaLabel),\n    }, this);\n\n    this.onDisabled.subscribe(this.closeDropdown);\n    this.onHide.subscribe(this.closeDropdown);\n    this.addDropdownOpenedListeners();\n    this.updateDomItems();\n\n    this.selectElement.on('change', this.onChange);\n\n    return this.selectElement;\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager) {\n    super.configure(player, uimanager);\n    this.uiContainer = uimanager.getUI();\n    this.uiContainer?.onPlayerStateChange().subscribe(this.onPlayerStateChange);\n  }\n\n  private readonly onChange = () => {\n    let value = this.selectElement.val();\n    this.onItemSelectedEvent(value, false);\n  };\n\n  private getSelectElement() {\n    return this.selectElement?.get()?.[0];\n  }\n\n  protected updateDomItems(selectedValue: string = null) {\n    if (this.selectElement === undefined) {\n      return;\n    }\n\n    // Delete all children\n    this.selectElement.empty();\n\n    // Add updated children\n    for (let item of this.items) {\n      let optionElement = new DOM('option', {\n        'value': String(item.key),\n      }).html(i18n.performLocalization(item.label));\n\n      if (item.key === String(selectedValue)) { // convert selectedValue to string to catch 'null'/null case\n        optionElement.attr('selected', 'selected');\n      }\n\n      this.selectElement.append(optionElement);\n    }\n  }\n\n  protected onItemAddedEvent(value: string) {\n    super.onItemAddedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemRemovedEvent(value: string) {\n    super.onItemRemovedEvent(value);\n    this.updateDomItems(this.selectedItem);\n  }\n\n  protected onItemSelectedEvent(value: string, updateDomItems: boolean = true) {\n    super.onItemSelectedEvent(value);\n    if (updateDomItems) {\n      this.updateDomItems(value);\n    }\n  }\n\n  public readonly closeDropdown = () => {\n    const select = this.getSelectElement();\n\n    if (select === undefined) {\n      return;\n    }\n\n    select.blur();\n  };\n\n  private readonly onPlayerStateChange = (_: UIContainer, state: PlayerUtils.PlayerState) => {\n    if ([PlayerUtils.PlayerState.Idle, PlayerUtils.PlayerState.Finished].includes(state)) {\n      this.closeDropdown();\n    }\n  };\n\n  private onDropdownOpened = () => {\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n\n    this.dropdownCloseListenerTimeoutId = window.setTimeout(() => this.addDropdownCloseListeners(), Timeout);\n    this.onViewModeChangedEvent(ViewMode.Persistent);\n  };\n\n  private onDropdownClosed = () => {\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n\n    this.removeDropdownCloseListeners();\n    this.onViewModeChangedEvent(ViewMode.Temporary);\n  };\n\n  private addDropdownCloseListeners() {\n    this.removeDropdownCloseListeners();\n\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n\n    DocumentDropdownClosedEvents.forEach(event => document.addEventListener(event, this.onDropdownClosed, true));\n    SelectDropdownClosedEvents.forEach(event => this.selectElement.on(event, this.onDropdownClosed, true));\n\n    this.removeDropdownCloseListeners = () => {\n      DocumentDropdownClosedEvents.forEach(event => document.removeEventListener(event, this.onDropdownClosed, true));\n      SelectDropdownClosedEvents.forEach(event => this.selectElement.off(event, this.onDropdownClosed, true));\n    };\n  }\n\n  private addDropdownOpenedListeners() {\n    const removeListenerFunctions: (() => void)[] = [];\n\n    this.removeDropdownOpenedListeners();\n\n    for (const [event, filter] of DropdownOpenedEvents) {\n      const listener = (event: Event) => {\n        if (filter(event)) {\n          this.onDropdownOpened();\n        }\n      };\n\n      removeListenerFunctions.push(() => this.selectElement.off(event, listener, true));\n      this.selectElement.on(event, listener, true);\n    }\n\n    this.removeDropdownOpenedListeners = () => {\n      for (const remove of removeListenerFunctions) {\n        remove();\n      }\n    };\n  }\n\n  release() {\n    super.release();\n\n    this.removeDropdownCloseListeners();\n    this.removeDropdownOpenedListeners();\n    clearTimeout(this.dropdownCloseListenerTimeoutId);\n  }\n}\n","import { Container, ContainerConfig } from './container';\nimport { SelectBox } from './selectbox';\nimport { UIInstanceManager } from '../uimanager';\nimport { Timeout } from '../timeout';\nimport { Event, EventDispatcher, NoArgs } from '../eventdispatcher';\nimport { SettingsPanelPage } from './settingspanelpage';\nimport { SettingsPanelItem } from './settingspanelitem';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { Component, ComponentConfig } from './component';\n\n/**\n * Configuration interface for a {@link SettingsPanel}.\n *\n * @category Configs\n */\nexport interface SettingsPanelConfig extends ContainerConfig {\n  /**\n   * The delay in milliseconds after which the settings panel will be hidden when there is no user interaction.\n   * Set to -1 to disable automatic hiding.\n   * Default: 3 seconds (3000)\n   */\n  hideDelay?: number;\n\n  /**\n   * Flag to specify if there should be an animation when switching SettingsPanelPages.\n   * Default: true\n   */\n  pageTransitionAnimation?: boolean;\n}\n\nenum NavigationDirection {\n  Forwards,\n  Backwards,\n}\n\n/**\n * A panel containing a list of {@link SettingsPanelPage items}.\n *\n * To configure pages just pass them in the components array.\n *\n * Example:\n *  let settingsPanel = new SettingsPanel({\n *    hidden: true,\n *  });\n *\n *  let settingsPanelPage = new SettingsPanelPage({\n *    components: […]\n *  });\n *\n *  let secondSettingsPanelPage = new SettingsPanelPage({\n *    components: […]\n *  });\n *\n *  settingsPanel.addComponent(settingsPanelPage);\n *  settingsPanel.addComponent(secondSettingsPanelPage);\n *\n * For an example how to navigate between pages @see SettingsPanelPageNavigatorButton\n *\n * @category Components\n */\nexport class SettingsPanel extends Container<SettingsPanelConfig> {\n\n  private static readonly CLASS_ACTIVE_PAGE = 'active';\n\n  // navigation handling\n  private activePage: SettingsPanelPage;\n  private navigationStack: SettingsPanelPage[] = [];\n\n  private settingsPanelEvents = {\n    onSettingsStateChanged: new EventDispatcher<SettingsPanel, NoArgs>(),\n  };\n\n  private hideTimeout: Timeout;\n\n  constructor(config: SettingsPanelConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settings-panel',\n      hideDelay: 3000,\n      pageTransitionAnimation: true,\n    } as SettingsPanelConfig, this.config);\n\n    this.activePage = this.getRootPage();\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n\n    uimanager.onControlsHide.subscribe(() => this.hideHoveredSelectBoxes());\n    uimanager.onComponentViewModeChanged.subscribe((_, { mode }) => this.trackComponentViewMode(mode));\n\n    if (config.hideDelay > -1) {\n      this.hideTimeout = new Timeout(config.hideDelay, () => {\n        this.hide();\n        this.hideHoveredSelectBoxes();\n      });\n      this.getDomElement().on('mouseenter', () => {\n        // On mouse enter clear the timeout\n        this.hideTimeout.clear();\n      });\n      this.getDomElement().on('mouseleave', () => {\n        // On mouse leave activate the timeout\n        this.hideTimeout.reset();\n      });\n      this.getDomElement().on('focusin', () => {\n        this.hideTimeout.clear();\n      });\n      this.getDomElement().on('focusout', () => {\n        this.hideTimeout.reset();\n      });\n    }\n\n    this.onHide.subscribe(() => {\n      if (config.hideDelay > -1) {\n        // Clear timeout when hidden from outside\n        this.hideTimeout.clear();\n      }\n\n      // Since we don't reset the actual navigation here we need to simulate a onInactive event in case some panel\n      // needs to do something when they become invisible / inactive.\n      this.activePage.onInactiveEvent();\n    });\n\n    this.onShow.subscribe(() => {\n      // Reset navigation when te panel gets visible to avoid a weird animation when hiding\n      this.resetNavigation(true);\n      // Since we don't need to navigate to the root page again we need to fire the onActive event when the settings\n      // panel gets visible.\n      this.activePage.onActiveEvent();\n\n      if (config.hideDelay > -1) {\n        // Activate timeout when shown\n        this.hideTimeout.start();\n      }\n    });\n\n    // pass event from root page through\n    this.getRootPage().onSettingsStateChanged.subscribe(() => {\n      this.onSettingsStateChangedEvent();\n    });\n\n    this.updateActivePageClass();\n  }\n\n  /**\n   * Returns the current active / visible page\n   * @return {SettingsPanelPage}\n   */\n  getActivePage(): SettingsPanelPage {\n    return this.activePage;\n  }\n\n  /**\n   * Sets the\n   * @deprecated Use {@link setActivePage} instead\n   * @param index\n   */\n  setActivePageIndex(index: number): void {\n    this.setActivePage(this.getPages()[index]);\n  }\n\n  /**\n   * Adds the passed page to the navigation stack and makes it visible.\n   * Use {@link popSettingsPanelPage} to navigate backwards.\n   *\n   * Results in no-op if the target page is the current page.\n   * @param targetPage\n   */\n  setActivePage(targetPage: SettingsPanelPage): void {\n    if (targetPage === this.getActivePage()) {\n      console.warn('Page is already the current one ... skipping navigation');\n      return;\n    }\n\n    this.navigateToPage(\n      targetPage,\n      this.getActivePage(),\n      NavigationDirection.Forwards,\n      !(this.config as SettingsPanelConfig).pageTransitionAnimation,\n    );\n  }\n\n  /**\n   * Resets the navigation stack by navigating back to the root page and displaying it.\n   */\n  popToRootSettingsPanelPage(): void {\n    this.resetNavigation((this.config as SettingsPanelConfig).pageTransitionAnimation);\n  }\n\n  /**\n   * Removes the current page from the navigation stack and makes the previous one visible.\n   * Results in a no-op if we are already on the root page.\n   */\n  popSettingsPanelPage() {\n    if (this.navigationStack.length === 0) {\n      console.warn('Already on the root page ... skipping navigation');\n      return;\n    }\n\n    let targetPage = this.navigationStack[this.navigationStack.length - 2];\n    // The root part isn't part of the navigation stack so handle it explicitly here\n    if (!targetPage) {\n      targetPage = this.getRootPage();\n    }\n\n    this.navigateToPage(\n      targetPage,\n      this.activePage,\n      NavigationDirection.Backwards,\n      !(this.config as SettingsPanelConfig).pageTransitionAnimation,\n    );\n  }\n\n  /**\n   * Checks if there are active settings within the root page of the settings panel.\n   * An active setting is a setting that is visible and enabled, which the user can interact with.\n   * @returns {boolean} true if there are active settings, false if the panel is functionally empty to a user\n   */\n  rootPageHasActiveSettings(): boolean {\n    return this.getRootPage().hasActiveSettings();\n  }\n\n  /**\n   * Return all configured pages\n   * @returns {SettingsPanelPage[]}\n   */\n  getPages(): SettingsPanelPage[] {\n    return <SettingsPanelPage[]>this.config.components.filter(component => component instanceof SettingsPanelPage);\n  }\n\n  get onSettingsStateChanged(): Event<SettingsPanel, NoArgs> {\n    return this.settingsPanelEvents.onSettingsStateChanged.getEvent();\n  }\n\n  release(): void {\n    super.release();\n    if (this.hideTimeout) {\n      this.hideTimeout.clear();\n    }\n  }\n\n  // Support adding settingsPanelPages after initialization\n  addComponent(component: Component<ComponentConfig>) {\n    if (this.getPages().length === 0 && component instanceof SettingsPanelPage) {\n      this.activePage = component;\n    }\n    super.addComponent(component);\n  }\n\n  protected suspendHideTimeout() {\n    this.hideTimeout.suspend();\n  }\n\n  protected resumeHideTimeout() {\n    this.hideTimeout.resume(true);\n  }\n\n  private updateActivePageClass(): void {\n    this.getPages().forEach((page: SettingsPanelPage) => {\n      if (page === this.activePage) {\n        page.getDomElement().addClass(this.prefixCss(SettingsPanel.CLASS_ACTIVE_PAGE));\n      } else {\n        page.getDomElement().removeClass(this.prefixCss(SettingsPanel.CLASS_ACTIVE_PAGE));\n      }\n    });\n  }\n\n  private resetNavigation(resetNavigationOnShow: boolean): void {\n    const sourcePage = this.getActivePage();\n    const rootPage = this.getRootPage();\n    if (sourcePage) {\n      // Since the onInactiveEvent was already fired in the onHide we need to suppress it here\n      if (!resetNavigationOnShow) {\n        sourcePage.onInactiveEvent();\n      }\n    }\n    this.navigationStack = [];\n    this.animateNavigation(rootPage, sourcePage, resetNavigationOnShow);\n    this.activePage = rootPage;\n    this.updateActivePageClass();\n  }\n\n  private navigateToPage(\n    targetPage: SettingsPanelPage,\n    sourcePage: SettingsPanelPage,\n    direction: NavigationDirection,\n    skipAnimation: boolean,\n  ): void {\n    this.activePage = targetPage;\n\n    if (direction === NavigationDirection.Forwards) {\n      this.navigationStack.push(targetPage);\n    } else {\n      this.navigationStack.pop();\n    }\n\n    this.animateNavigation(targetPage, sourcePage, skipAnimation);\n\n    this.updateActivePageClass();\n    targetPage.onActiveEvent();\n    sourcePage.onInactiveEvent();\n  }\n\n  /**\n   * @param targetPage\n   * @param sourcePage\n   * @param skipAnimation This is just an internal flag if we want to have an animation. It is set true when we reset\n   * the navigation within the onShow callback of the settingsPanel. In this case we don't want an actual animation but\n   * the recalculation of the dimension of the settingsPanel.\n   * This is independent of the pageTransitionAnimation flag.\n   */\n  private animateNavigation(targetPage: SettingsPanelPage, sourcePage: SettingsPanelPage, skipAnimation: boolean) {\n    if (!(this.config as SettingsPanelConfig).pageTransitionAnimation) {\n      return;\n    }\n\n    const settingsPanelDomElement = this.getDomElement();\n    const settingsPanelHTMLElement = this.getDomElement().get(0);\n\n    // get current dimension\n    const settingsPanelWidth = settingsPanelHTMLElement.scrollWidth;\n    const settingsPanelHeight = settingsPanelHTMLElement.scrollHeight;\n\n    // calculate target size of the settings panel\n    sourcePage.getDomElement().css('display', 'none');\n    this.getDomElement().css({ width: '', height: '' }); // let css auto settings kick in again\n\n    const targetPageHtmlElement = targetPage.getDomElement().get(0);\n    // clone the targetPage DOM element so that we can calculate the width / height how they will be after\n    // switching the page. We are using a clone to prevent (mostly styling) side-effects on the real DOM element\n    const clone = targetPageHtmlElement.cloneNode(true) as HTMLElement;\n    // append to parent so we get the 'real' size\n    const containerWrapper = targetPageHtmlElement.parentNode;\n    containerWrapper.appendChild(clone);\n    // set clone visible\n    clone.style.display = 'block';\n\n    // collect target dimension\n    const targetSettingsPanelWidth = settingsPanelHTMLElement.scrollWidth;\n    const targetSettingsPanelHeight = settingsPanelHTMLElement.scrollHeight;\n\n    // remove clone from the DOM\n    clone.parentElement.removeChild(clone); // .remove() is not working in IE\n    sourcePage.getDomElement().css('display', '');\n\n    // set the values back to the current ones that the browser animates it (browsers don't animate 'auto' values)\n    settingsPanelDomElement.css({\n      width: settingsPanelWidth + 'px',\n      height: settingsPanelHeight + 'px',\n    });\n\n    if (!skipAnimation) {\n      // We need to force the browser to reflow between setting the width and height that we actually get a animation\n      this.forceBrowserReflow();\n    }\n\n    // set the values to the target dimension\n    settingsPanelDomElement.css({\n      width: targetSettingsPanelWidth + 'px',\n      height: targetSettingsPanelHeight + 'px',\n    });\n  }\n\n  private forceBrowserReflow(): void {\n    // Force the browser to reflow the layout\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    this.getDomElement().get(0).offsetLeft;\n  }\n\n  /**\n   * Workaround for IE, Firefox and Safari\n   * when the settings panel fades out while an item of a select box is still hovered, the select box will not fade out\n   * while the settings panel does. This would leave a floating select box, which is just weird\n   */\n  private hideHoveredSelectBoxes(): void {\n    this.getComputedItems()\n      .map(item => item['setting'])\n      .filter(component => component instanceof SelectBox)\n      .forEach((selectBox: SelectBox) => selectBox.closeDropdown());\n  }\n\n  // collect all items from all pages (see hideHoveredSelectBoxes)\n  private getComputedItems(): SettingsPanelItem[] {\n    const allItems: SettingsPanelItem[] = [];\n    for (let page of this.getPages()) {\n      allItems.push(...page.getItems());\n    }\n    return allItems;\n  }\n\n  private getRootPage(): SettingsPanelPage {\n    return this.getPages()[0];\n  }\n\n  protected onSettingsStateChangedEvent() {\n    this.settingsPanelEvents.onSettingsStateChanged.dispatch(this);\n  }\n}\n","import {Container, ContainerConfig} from './container';\nimport {Component, ComponentConfig} from './component';\nimport {Event, EventDispatcher, NoArgs} from '../eventdispatcher';\nimport { Label, LabelConfig } from './label';\nimport {UIInstanceManager} from '../uimanager';\nimport {SelectBox} from './selectbox';\nimport {ListBox} from './listbox';\nimport {VideoQualitySelectBox} from './videoqualityselectbox';\nimport {AudioQualitySelectBox} from './audioqualityselectbox';\nimport {PlaybackSpeedSelectBox} from './playbackspeedselectbox';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { LocalizableText } from '../localization/i18n';\n\n/**\n * An item for a {@link SettingsPanelPage},\n * Containing an optional {@link Label} and a component that configures a setting.\n * If the components is a {@link SelectBox} it will handle the logic of displaying it or not\n *\n * @category Components\n */\nexport class SettingsPanelItem extends Container<ContainerConfig> {\n\n  private label: Component<ComponentConfig>;\n  private setting: Component<ComponentConfig>;\n\n  private settingsPanelItemEvents = {\n    onActiveChanged: new EventDispatcher<SettingsPanelItem, NoArgs>(),\n  };\n\n  constructor(label: LocalizableText | Component<ComponentConfig>, setting: Component<ComponentConfig>, config: ContainerConfig = {}) {\n    super(config);\n\n    this.setting = setting;\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settings-panel-item',\n      role: 'menuitem',\n    }, this.config);\n\n    if (label !== null) {\n      if (label instanceof Component) {\n        this.label = label;\n      } else {\n        this.label = new Label({ text: label, for: this.setting.getConfig().id } as LabelConfig);\n      }\n      this.addComponent(this.label);\n    }\n\n    this.addComponent(this.setting);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    if (this.setting instanceof SelectBox || this.setting instanceof ListBox) {\n      let handleConfigItemChanged = () => {\n        if (!(this.setting instanceof SelectBox) && !(this.setting instanceof ListBox)) {\n          return;\n        }\n        // The minimum number of items that must be available for the setting to be displayed\n        // By default, at least two items must be available, else a selection is not possible\n        let minItemsToDisplay = 2;\n        // Audio/video quality select boxes contain an additional 'auto' mode, which in combination with a single\n        // available quality also does not make sense\n        if ((this.setting instanceof VideoQualitySelectBox && this.setting.hasAutoItem())\n          || this.setting instanceof AudioQualitySelectBox) {\n          minItemsToDisplay = 3;\n        }\n\n        if (this.setting.itemCount() < minItemsToDisplay) {\n          // Hide the setting if no meaningful choice is available\n          this.hide();\n        } else if (this.setting instanceof PlaybackSpeedSelectBox\n          && !uimanager.getConfig().playbackSpeedSelectionEnabled) {\n          // Hide the PlaybackSpeedSelectBox if disabled in config\n          this.hide();\n        } else {\n          this.show();\n        }\n\n        // Visibility might have changed and therefore the active state might have changed so we fire the event\n        // TODO fire only when state has really changed (e.g. check if visibility has really changed)\n        this.onActiveChangedEvent();\n\n        this.getDomElement().attr('aria-haspopup', 'true');\n      };\n\n      this.setting.onItemAdded.subscribe(handleConfigItemChanged);\n      this.setting.onItemRemoved.subscribe(handleConfigItemChanged);\n\n      // Initialize hidden state\n      handleConfigItemChanged();\n    }\n  }\n\n  /**\n   * Checks if this settings panel item is active, i.e. visible and enabled and a user can interact with it.\n   * @returns {boolean} true if the panel is active, else false\n   */\n  isActive(): boolean {\n    return this.isShown();\n  }\n\n  protected onActiveChangedEvent() {\n    this.settingsPanelItemEvents.onActiveChanged.dispatch(this);\n  }\n\n  /**\n   * Gets the event that is fired when the 'active' state of this item changes.\n   * @see #isActive\n   * @returns {Event<SettingsPanelItem, NoArgs>}\n   */\n  get onActiveChanged(): Event<SettingsPanelItem, NoArgs> {\n    return this.settingsPanelItemEvents.onActiveChanged.getEvent();\n  }\n}\n","import {Container, ContainerConfig} from './container';\nimport {SettingsPanelItem} from './settingspanelitem';\nimport {UIInstanceManager} from '../uimanager';\nimport {Event, EventDispatcher, NoArgs} from '../eventdispatcher';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { BrowserUtils } from '../browserutils';\n\n/**\n * A panel containing a list of {@link SettingsPanelItem items} that represent labelled settings.\n *\n * @category Components\n */\nexport class SettingsPanelPage extends Container<ContainerConfig> {\n\n  private static readonly CLASS_LAST = 'last';\n\n  private settingsPanelPageEvents = {\n    onSettingsStateChanged: new EventDispatcher<SettingsPanelPage, NoArgs>(),\n    onActive: new EventDispatcher<SettingsPanelPage, NoArgs>(),\n    onInactive: new EventDispatcher<SettingsPanelPage, NoArgs>(),\n  };\n\n  constructor(config: ContainerConfig) {\n    super(config);\n\n    this.config = this.mergeConfig<ContainerConfig>(config, {\n      cssClass: 'ui-settings-panel-page',\n      role: 'menu',\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    // Fire event when the state of a settings-item has changed\n    let settingsStateChangedHandler = () => {\n      this.onSettingsStateChangedEvent();\n\n      // Attach marker class to last visible item\n      let lastShownItem = null;\n      for (let component of this.getItems()) {\n        component.getDomElement().removeClass(this.prefixCss(SettingsPanelPage.CLASS_LAST));\n        if (component.isShown()) {\n          lastShownItem = component;\n        }\n      }\n      if (lastShownItem) {\n        lastShownItem.getDomElement().addClass(this.prefixCss(SettingsPanelPage.CLASS_LAST));\n      }\n    };\n    for (let component of this.getItems()) {\n      component.onActiveChanged.subscribe(settingsStateChangedHandler);\n    }\n  }\n\n  hasActiveSettings(): boolean {\n    for (let component of this.getItems()) {\n      if (component.isActive()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getItems(): SettingsPanelItem[] {\n    return <SettingsPanelItem[]>this.config.components.filter(component => component instanceof SettingsPanelItem);\n  }\n\n  onSettingsStateChangedEvent() {\n    this.settingsPanelPageEvents.onSettingsStateChanged.dispatch(this);\n  }\n\n  get onSettingsStateChanged(): Event<SettingsPanelPage, NoArgs> {\n    return this.settingsPanelPageEvents.onSettingsStateChanged.getEvent();\n  }\n\n  onActiveEvent() {\n    const activeItems = this.getItems().filter((item) => item.isActive());\n\n    this.settingsPanelPageEvents.onActive.dispatch(this);\n    // Disable focus for iOS and iPadOS 13. They open select boxes automatically on focus and we want to avoid that.\n    if (activeItems.length > 0 && !BrowserUtils.isIOS && !(BrowserUtils.isMacIntel && BrowserUtils.isTouchSupported)) {\n      activeItems[0].getDomElement().focusToFirstInput();\n    }\n  }\n\n  get onActive(): Event<SettingsPanelPage, NoArgs> {\n    return this.settingsPanelPageEvents.onActive.getEvent();\n  }\n\n  onInactiveEvent() {\n    this.settingsPanelPageEvents.onInactive.dispatch(this);\n  }\n\n  get onInactive(): Event<SettingsPanelPage, NoArgs> {\n    return this.settingsPanelPageEvents.onInactive.getEvent();\n  }\n}\n","import {UIInstanceManager} from '../uimanager';\nimport {SettingsPanelPageNavigatorButton, SettingsPanelPageNavigatorConfig} from './settingspanelpagenavigatorbutton';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * @category Buttons\n */\nexport class SettingsPanelPageBackButton extends SettingsPanelPageNavigatorButton {\n\n  constructor(config: SettingsPanelPageNavigatorConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settingspanelpagebackbutton',\n      text: 'back',\n    } as SettingsPanelPageNavigatorConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onClick.subscribe(() => {\n      this.popPage();\n    });\n  }\n}\n","import {Button, ButtonConfig} from './button';\nimport {SettingsPanel} from './settingspanel';\nimport {SettingsPanelPage} from './settingspanelpage';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\n\n/**\n * Configuration interface for a {@link SettingsPanelPageNavigatorButton}\n *\n * @category Configs\n */\nexport interface SettingsPanelPageNavigatorConfig extends ButtonConfig {\n  /**\n   * Container `SettingsPanel` where the navigation takes place\n   */\n  container: SettingsPanel;\n  /**\n   * Page where the button should navigate to\n   * If empty it will navigate to the root page (not intended to use as navigate back behavior)\n   */\n  targetPage?: SettingsPanelPage;\n\n  /**\n   * WCAG20 standard: Establishes relationships between objects and their label(s)\n   */\n  ariaLabelledBy?: string;\n}\n\n/**\n * Can be used to navigate between SettingsPanelPages\n *\n * Example:\n *  let settingPanelNavigationButton = new SettingsPanelPageNavigatorButton({\n *    container: settingsPanel,\n *    targetPage: settingsPanelPage,\n *  });\n *\n *  settingsPanelPage.addComponent(settingPanelNavigationButton);\n *\n * Don't forget to add the settingPanelNavigationButton to the settingsPanelPage.\n *\n * @category Buttons\n */\nexport class SettingsPanelPageNavigatorButton extends Button<SettingsPanelPageNavigatorConfig> {\n  private readonly container: SettingsPanel;\n  private readonly targetPage?: SettingsPanelPage;\n\n  constructor(config: SettingsPanelPageNavigatorConfig) {\n    super(config);\n    this.config = this.mergeConfig(config, {} as SettingsPanelPageNavigatorConfig, this.config);\n\n    this.container = (this.config as SettingsPanelPageNavigatorConfig).container;\n    this.targetPage = (this.config as SettingsPanelPageNavigatorConfig).targetPage;\n  }\n\n  /**\n   * navigate one level back\n   */\n  popPage() {\n    this.container.popSettingsPanelPage();\n  }\n\n  /**\n   * navigate to the target page\n   */\n  pushTargetPage() {\n    this.container.setActivePage(this.targetPage);\n  }\n}\n","import {UIInstanceManager} from '../uimanager';\nimport {SettingsPanelPageNavigatorButton, SettingsPanelPageNavigatorConfig} from './settingspanelpagenavigatorbutton';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * @category Buttons\n */\nexport class SettingsPanelPageOpenButton extends SettingsPanelPageNavigatorButton {\n  constructor(config: SettingsPanelPageNavigatorConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settingspanelpageopenbutton',\n      text: i18n.getLocalizer('open'),\n      role: 'menuitem',\n    } as SettingsPanelPageNavigatorConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.getDomElement().attr('aria-haspopup', 'true');\n    this.getDomElement().attr('aria-owns', this.config.targetPage.getConfig().id);\n\n    this.onClick.subscribe(() => {\n      this.pushTargetPage();\n    });\n  }\n}\n","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {SettingsPanel} from './settingspanel';\nimport {UIInstanceManager} from '../uimanager';\nimport {Component, ComponentConfig} from './component';\nimport {ArrayUtils} from '../arrayutils';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for the {@link SettingsToggleButton}.\n *\n * @category Configs\n */\nexport interface SettingsToggleButtonConfig extends ToggleButtonConfig {\n  /**\n   * The settings panel whose visibility the button should toggle.\n   */\n  settingsPanel: SettingsPanel;\n\n  /**\n   * Decides if the button should be automatically hidden when the settings panel does not contain any active settings.\n   * Default: true\n   */\n  autoHideWhenNoActiveSettings?: boolean;\n}\n\n/**\n * A button that toggles visibility of a settings panel.\n *\n * @category Buttons\n */\nexport class SettingsToggleButton extends ToggleButton<SettingsToggleButtonConfig> {\n\n  private visibleSettingsPanels: SettingsPanel[] = [];\n\n  constructor(config: SettingsToggleButtonConfig) {\n    super(config);\n\n    if (!config.settingsPanel) {\n      throw new Error('Required SettingsPanel is missing');\n    }\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-settingstogglebutton',\n      text: i18n.getLocalizer('settings'),\n      settingsPanel: null,\n      autoHideWhenNoActiveSettings: true,\n      role: 'pop-up button',\n    }, <SettingsToggleButtonConfig>this.config);\n\n    /**\n     * WCAG20 standard defines which popup menu (element id) is owned by the button\n     */\n    this.getDomElement().attr('aria-owns', config.settingsPanel.getActivePage().getConfig().id);\n\n    /**\n     * WCAG20 standard defines that a button has a popup menu bound to it\n     */\n    this.getDomElement().attr('aria-haspopup', 'true');\n\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let settingsPanel = config.settingsPanel;\n\n    this.onClick.subscribe(() => {\n      // only hide other `SettingsPanel`s if a new one will be opened\n      if (!settingsPanel.isShown()) {\n        // Hide all open SettingsPanels before opening this button's panel\n        // (We need to iterate a copy because hiding them will automatically remove themselves from the array\n        // due to the subscribeOnce above)\n        this.visibleSettingsPanels.slice().forEach(settingsPanel => settingsPanel.hide());\n      }\n      settingsPanel.toggleHidden();\n    });\n    settingsPanel.onShow.subscribe(() => {\n      // Set toggle status to on when the settings panel shows\n      this.on();\n    });\n    settingsPanel.onHide.subscribe(() => {\n      // Set toggle status to off when the settings panel hides\n      this.off();\n    });\n\n    // Ensure that only one `SettingPanel` is visible at once\n    // Keep track of shown SettingsPanels\n    uimanager.onComponentShow.subscribe((sender: Component<ComponentConfig>) => {\n      if (sender instanceof SettingsPanel) {\n        this.visibleSettingsPanels.push(sender);\n        sender.onHide.subscribeOnce(() => ArrayUtils.remove(this.visibleSettingsPanels, sender));\n      }\n    });\n\n    // Handle automatic hiding of the button if there are no settings for the user to interact with\n    if (config.autoHideWhenNoActiveSettings) {\n      // Setup handler to show/hide button when the settings change\n      let settingsPanelItemsChangedHandler = () => {\n        if (settingsPanel.rootPageHasActiveSettings()) {\n          if (this.isHidden()) {\n            this.show();\n          }\n        } else {\n          if (this.isShown()) {\n            this.hide();\n          }\n        }\n      };\n      // Wire the handler to the event\n      settingsPanel.onSettingsStateChanged.subscribe(settingsPanelItemsChangedHandler);\n      // Call handler for first init at startup\n      settingsPanelItemsChangedHandler();\n    }\n  }\n}\n","import {Component, ComponentConfig} from './component';\n\n/**\n * A dummy component that just reserves some space and does nothing else.\n *\n * @category Components\n */\nexport class Spacer extends Component<ComponentConfig> {\n\n  constructor(config: ComponentConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-spacer',\n    }, this.config);\n  }\n\n\n  protected onShowEvent(): void {\n    // disable event firing by overwriting and not calling super\n  }\n\n  protected onHideEvent(): void {\n    // disable event firing by overwriting and not calling super\n  }\n\n  protected onHoverChangedEvent(hovered: boolean): void {\n    // disable event firing by overwriting and not calling super\n  }\n}","import {ListBox} from './listbox';\nimport {UIInstanceManager} from '../uimanager';\nimport {SubtitleSwitchHandler} from '../subtitleutils';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * A element that is similar to a select box where the user can select a subtitle\n *\n * @category Components\n */\nexport class SubtitleListBox extends ListBox {\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    new SubtitleSwitchHandler(player, this, uimanager);\n  }\n}\n","import { Container, ContainerConfig } from './container';\nimport { UIInstanceManager } from '../uimanager';\nimport { Label, LabelConfig } from './label';\nimport { ComponentConfig, Component } from './component';\nimport { ControlBar } from './controlbar';\nimport { EventDispatcher } from '../eventdispatcher';\nimport { DOM, Size } from '../dom';\nimport { PlayerAPI, SubtitleCueEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { VttUtils } from '../vttutils';\nimport { VTTProperties } from 'bitmovin-player/types/subtitles/vtt/API';\n\ninterface SubtitleCropDetectionResult {\n  top: boolean;\n  right: boolean;\n  bottom: boolean;\n  left: boolean;\n}\n\n/**\n * Overlays the player to display subtitles.\n *\n * @category Components\n */\nexport class SubtitleOverlay extends Container<ContainerConfig> {\n\n  private subtitleManager: ActiveSubtitleManager;\n  private previewSubtitleActive: boolean;\n  private previewSubtitle: SubtitleLabel;\n\n  private preprocessLabelEventCallback = new EventDispatcher<SubtitleCueEvent, SubtitleLabel>();\n  private subtitleContainerManager: SubtitleRegionContainerManager;\n\n  private static readonly CLASS_CONTROLBAR_VISIBLE = 'controlbar-visible';\n  private static readonly CLASS_CEA_608 = 'cea608';\n\n  // The number of rows in a cea608 grid\n  private static readonly CEA608_NUM_ROWS = 15;\n  // The number of columns in a cea608 grid\n  private static readonly CEA608_NUM_COLUMNS = 32;\n  // The offset in percent for one row (which is also the height of a row)\n  private static readonly CEA608_ROW_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_ROWS;\n  // The offset in percent for one column (which is also the width of a column)\n  private static readonly CEA608_COLUMN_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_COLUMNS;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.previewSubtitleActive = false;\n    this.previewSubtitle = new SubtitleLabel({ text: i18n.getLocalizer('subtitle.example') });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-subtitle-overlay',\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let subtitleManager = new ActiveSubtitleManager();\n    this.subtitleManager = subtitleManager;\n\n    this.subtitleContainerManager = new SubtitleRegionContainerManager(this);\n\n    player.on(player.exports.PlayerEvent.CueEnter, (event: SubtitleCueEvent) => {\n      const label = this.generateLabel(event);\n      subtitleManager.cueEnter(event, label);\n\n      this.preprocessLabelEventCallback.dispatch(event, label);\n\n      if (this.previewSubtitleActive) {\n        this.subtitleContainerManager.removeLabel(this.previewSubtitle);\n      }\n\n      this.show();\n\n      this.subtitleContainerManager.addLabel(label, this.getDomElement().size());\n      this.updateComponents();\n\n      if (uimanager.getConfig().forceSubtitlesIntoViewContainer) {\n        this.handleSubtitleCropping(label);\n      }\n    });\n\n    player.on(player.exports.PlayerEvent.CueUpdate, (event: SubtitleCueEvent) => {\n      const label = this.generateLabel(event);\n      const labelToReplace = subtitleManager.cueUpdate(event, label);\n\n      this.preprocessLabelEventCallback.dispatch(event, label);\n\n      if (labelToReplace) {\n        this.subtitleContainerManager.replaceLabel(labelToReplace, label);\n      }\n\n      if (uimanager.getConfig().forceSubtitlesIntoViewContainer) {\n        this.handleSubtitleCropping(label);\n      }\n    });\n\n    player.on(player.exports.PlayerEvent.CueExit, (event: SubtitleCueEvent) => {\n      let labelToRemove = subtitleManager.cueExit(event);\n\n      if (labelToRemove) {\n        this.subtitleContainerManager.removeLabel(labelToRemove);\n        this.updateComponents();\n      }\n\n      if (!subtitleManager.hasCues) {\n        if (!this.previewSubtitleActive) {\n          this.hide();\n        } else {\n          this.subtitleContainerManager.addLabel(this.previewSubtitle);\n          this.updateComponents();\n        }\n      }\n    });\n\n    let subtitleClearHandler = () => {\n      this.hide();\n      this.subtitleContainerManager.clear();\n      subtitleManager.clear();\n      this.removeComponents();\n      this.updateComponents();\n    };\n\n    const clearInactiveCues = () => {\n      const removedActiveCues = subtitleManager.clearInactiveCues(player.getCurrentTime());\n      removedActiveCues.forEach(toRemove => {\n        this.subtitleContainerManager.removeLabel(toRemove.label);\n      });\n    };\n\n    player.on(player.exports.PlayerEvent.AudioChanged, subtitleClearHandler);\n    player.on(player.exports.PlayerEvent.SubtitleDisabled, subtitleClearHandler);\n    player.on(player.exports.PlayerEvent.Seeked, clearInactiveCues);\n    player.on(player.exports.PlayerEvent.TimeShifted, clearInactiveCues);\n    player.on(player.exports.PlayerEvent.PlaybackFinished, subtitleClearHandler);\n    player.on(player.exports.PlayerEvent.SourceUnloaded, subtitleClearHandler);\n\n    uimanager.onComponentShow.subscribe((component: Component<ComponentConfig>) => {\n      if (component instanceof ControlBar) {\n        this.getDomElement().addClass(this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));\n      }\n    });\n    uimanager.onComponentHide.subscribe((component: Component<ComponentConfig>) => {\n      if (component instanceof ControlBar) {\n        this.getDomElement().removeClass(this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));\n      }\n    });\n\n    this.configureCea608Captions(player, uimanager);\n    // Init\n    subtitleClearHandler();\n  }\n\n  detectCroppedSubtitleLabel(\n    labelElement: HTMLElement,\n  ): SubtitleCropDetectionResult {\n    const parent = this.getDomElement().get(0);\n\n    const childRect = labelElement.getBoundingClientRect();\n    const parentRect = parent.getBoundingClientRect();\n\n    return {\n      top: childRect.top < parentRect.top,\n      right: childRect.right > parentRect.right,\n      bottom: childRect.bottom > parentRect.bottom,\n      left: childRect.left < parentRect.left,\n    };\n  }\n\n  handleSubtitleCropping(label: SubtitleLabel) {\n    const labelDomElement = label.getDomElement();\n    const cropDetection = this.detectCroppedSubtitleLabel(\n      labelDomElement.get(0),\n    );\n\n    if (cropDetection.top) {\n      labelDomElement.css('top', '0');\n      labelDomElement.removeCss('bottom');\n    }\n\n    if (cropDetection.right) {\n      labelDomElement.css('right', '0');\n      labelDomElement.removeCss('left');\n    }\n\n    if (cropDetection.bottom) {\n      labelDomElement.css('bottom', '0');\n      labelDomElement.removeCss('top');\n    }\n\n    if (cropDetection.left) {\n      labelDomElement.css('left', '0');\n      labelDomElement.removeCss('right');\n    }\n  }\n\n  generateLabel(event: SubtitleCueEvent): SubtitleLabel {\n    // Sanitize cue data (must be done before the cue ID is generated in subtitleManager.cueEnter / update)\n    if (event.position) {\n      // Sometimes the positions are undefined, we assume them to be zero\n      event.position.row = event.position.row || 0;\n      event.position.column = event.position.column || 0;\n    }\n\n    const label = new SubtitleLabel({\n      // Prefer the HTML subtitle text if set, else try generating a image tag as string from the image attribute,\n      // else use the plain text\n      text: event.html || ActiveSubtitleManager.generateImageTagText(event.image) || event.text,\n      vtt: event.vtt,\n      region: event.region,\n      regionStyle: event.regionStyle,\n    });\n\n    return label;\n  }\n\n  configureCea608Captions(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    // The calculated font size\n    let fontSize = 0;\n    // The required letter spacing spread the text characters evenly across the grid\n    let fontLetterSpacing = 0;\n    // Flag telling if a font size calculation is required of if the current values are valid\n    let fontSizeCalculationRequired = true;\n    // Flag telling if the CEA-608 mode is enabled\n    let enabled = false;\n\n    const updateCEA608FontSize = () => {\n      const dummyLabel = new SubtitleLabel({ text: 'X' });\n      dummyLabel.getDomElement().css({\n        // By using a large font size we do not need to use multiple letters and can get still an\n        // accurate measurement even though the returned size is an integer value\n        'font-size': '200px',\n        'line-height': '200px',\n        'visibility': 'hidden',\n      });\n      this.addComponent(dummyLabel);\n      this.updateComponents();\n      this.show();\n\n      const dummyLabelCharWidth = dummyLabel.getDomElement().width();\n      const dummyLabelCharHeight = dummyLabel.getDomElement().height();\n      const fontSizeRatio = dummyLabelCharWidth / dummyLabelCharHeight;\n\n      this.removeComponent(dummyLabel);\n      this.updateComponents();\n      if (!this.subtitleManager.hasCues) {\n        this.hide();\n      }\n\n      // We subtract 1px here to avoid line breaks at the right border of the subtitle overlay that can happen\n      // when texts contain whitespaces. It's probably some kind of pixel rounding issue in the browser's\n      // layouting, but the actual reason could not be determined. Aiming for a target width - 1px would work in\n      // most browsers, but Safari has a \"quantized\" font size rendering with huge steps in between so we need\n      // to subtract some more pixels to avoid line breaks there as well.\n      const subtitleOverlayWidth = this.getDomElement().width() - 10;\n      const subtitleOverlayHeight = this.getDomElement().height();\n\n      // The size ratio of the letter grid\n      const fontGridSizeRatio = (dummyLabelCharWidth * SubtitleOverlay.CEA608_NUM_COLUMNS) /\n        (dummyLabelCharHeight * SubtitleOverlay.CEA608_NUM_ROWS);\n      // The size ratio of the available space for the grid\n      const subtitleOverlaySizeRatio = subtitleOverlayWidth / subtitleOverlayHeight;\n\n      if (subtitleOverlaySizeRatio > fontGridSizeRatio) {\n        // When the available space is wider than the text grid, the font size is simply\n        // determined by the height of the available space.\n        fontSize = subtitleOverlayHeight / SubtitleOverlay.CEA608_NUM_ROWS;\n\n        // Calculate the additional letter spacing required to evenly spread the text across the grid's width\n        const gridSlotWidth = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS;\n        const fontCharWidth = fontSize * fontSizeRatio;\n        fontLetterSpacing = gridSlotWidth - fontCharWidth;\n      } else {\n        // When the available space is not wide enough, texts would vertically overlap if we take\n        // the height as a base for the font size, so we need to limit the height. We do that\n        // by determining the font size by the width of the available space.\n        fontSize = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS / fontSizeRatio;\n        fontLetterSpacing = 0;\n      }\n\n      // Update font-size of all active subtitle labels\n      for (let label of this.getComponents()) {\n        if (label instanceof SubtitleLabel) {\n          label.getDomElement().css({\n            'font-size': `${fontSize}px`,\n            'letter-spacing': `${fontLetterSpacing}px`,\n          });\n        }\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.PlayerResized, () => {\n      if (enabled) {\n        updateCEA608FontSize();\n      } else {\n        fontSizeCalculationRequired = true;\n      }\n    });\n\n    this.preprocessLabelEventCallback.subscribe((event: SubtitleCueEvent, label: SubtitleLabel) => {\n      const isCEA608 = event.position != null;\n      if (!isCEA608) {\n        // Skip all non-CEA608 cues\n        return;\n      }\n\n      if (!enabled) {\n        enabled = true;\n        this.getDomElement().addClass(this.prefixCss(SubtitleOverlay.CLASS_CEA_608));\n\n        // We conditionally update the font size by this flag here to avoid updating every time a subtitle\n        // is added into an empty overlay. Because we reset the overlay when all subtitles are gone, this\n        // would trigger an unnecessary update every time, but it's only required under certain conditions,\n        // e.g. after the player size has changed.\n        if (fontSizeCalculationRequired) {\n          updateCEA608FontSize();\n          fontSizeCalculationRequired = false;\n        }\n      }\n\n      label.getDomElement().css({\n        'left': `${event.position.column * SubtitleOverlay.CEA608_COLUMN_OFFSET}%`,\n        'top': `${event.position.row * SubtitleOverlay.CEA608_ROW_OFFSET}%`,\n        'font-size': `${fontSize}px`,\n        'letter-spacing': `${fontLetterSpacing}px`,\n      });\n    });\n\n    const reset = () => {\n      this.getDomElement().removeClass(this.prefixCss(SubtitleOverlay.CLASS_CEA_608));\n      enabled = false;\n    };\n\n    player.on(player.exports.PlayerEvent.CueExit, () => {\n      if (!this.subtitleManager.hasCues) {\n        // Disable CEA-608 mode when all subtitles are gone (to allow correct formatting and\n        // display of other types of subtitles, e.g. the formatting preview subtitle)\n        reset();\n      }\n    });\n\n    player.on(player.exports.PlayerEvent.SourceUnloaded, reset);\n    player.on(player.exports.PlayerEvent.SubtitleEnabled, reset);\n    player.on(player.exports.PlayerEvent.SubtitleDisabled, reset);\n  }\n\n  enablePreviewSubtitleLabel(): void {\n    if (!this.subtitleManager.hasCues) {\n      this.previewSubtitleActive = true;\n      this.subtitleContainerManager.addLabel(this.previewSubtitle);\n      this.updateComponents();\n      this.show();\n    }\n  }\n\n  removePreviewSubtitleLabel(): void {\n    if (this.previewSubtitleActive) {\n      this.previewSubtitleActive = false;\n      this.subtitleContainerManager.removeLabel(this.previewSubtitle);\n      this.updateComponents();\n    }\n  }\n}\n\ninterface ActiveSubtitleCue {\n  event: SubtitleCueEvent;\n  label: SubtitleLabel;\n}\n\ninterface ActiveSubtitleCueMap {\n  [id: string]: ActiveSubtitleCue[];\n}\n\ninterface SubtitleLabelConfig extends LabelConfig {\n  vtt?: VTTProperties;\n  region?: string;\n  regionStyle?: string;\n}\n\nexport class SubtitleLabel extends Label<SubtitleLabelConfig> {\n\n  constructor(config: SubtitleLabelConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-subtitle-label',\n    }, this.config);\n  }\n\n  get vtt(): VTTProperties {\n    return this.config.vtt;\n  }\n\n  get region(): string {\n    return this.config.region;\n  }\n\n  get regionStyle(): string {\n    return this.config.regionStyle;\n  }\n}\n\nclass ActiveSubtitleManager {\n\n  private activeSubtitleCueMap: ActiveSubtitleCueMap;\n  private activeSubtitleCueCount: number;\n\n  constructor() {\n    this.activeSubtitleCueMap = {};\n    this.activeSubtitleCueCount = 0;\n  }\n\n  /**\n   * Calculates a unique ID for a subtitle cue, which is needed to associate an CueEnter with its CueExit\n   * event so we can remove the correct subtitle in CueExit when multiple subtitles are active at the same time.\n   * The start time plus the text should make a unique identifier, and in the only case where a collision\n   * can happen, two similar texts will be displayed at a similar time and a similar position (or without position).\n   * The start time should always be known, because it is required to schedule the CueEnter event. The end time\n   * must not necessarily be known and therefore cannot be used for the ID.\n   * @param event\n   * @return {string}\n   */\n  private static calculateId(event: SubtitleCueEvent): string {\n    let id = event.start + '-' + event.text;\n\n    if (event.position) {\n      id += '-' + event.position.row + '-' + event.position.column;\n    }\n\n    return id;\n  }\n\n  cueEnter(event: SubtitleCueEvent, label: SubtitleLabel): void {\n    this.addCueToMap(event, label);\n  }\n\n  cueUpdate(event: SubtitleCueEvent, label: SubtitleLabel): SubtitleLabel | undefined {\n    const labelToReplace = this.popCueFromMap(event);\n\n    if (labelToReplace) {\n      this.addCueToMap(event, label);\n      return labelToReplace;\n    }\n\n    return undefined;\n  }\n\n  private addCueToMap(event: SubtitleCueEvent, label: SubtitleLabel): void {\n    let id = ActiveSubtitleManager.calculateId(event);\n\n    // Create array for id if it does not exist\n    this.activeSubtitleCueMap[id] = this.activeSubtitleCueMap[id] || [];\n\n    // Add cue\n    this.activeSubtitleCueMap[id].push({ event, label });\n    this.activeSubtitleCueCount++;\n  }\n\n  private popCueFromMap(event: SubtitleCueEvent): SubtitleLabel | undefined {\n    let id = ActiveSubtitleManager.calculateId(event);\n    let activeSubtitleCues = this.activeSubtitleCueMap[id];\n\n    if (activeSubtitleCues && activeSubtitleCues.length > 0) {\n      // Remove cue\n      /* We apply the FIFO approach here and remove the oldest cue from the associated id. When there are multiple cues\n       * with the same id, there is no way to know which one of the cues is to be deleted, so we just hope that FIFO\n       * works fine. Theoretically it can happen that two cues with colliding ids are removed at different times, in\n       * the wrong order. This rare case has yet to be observed. If it ever gets an issue, we can take the unstable\n       * cue end time (which can change between CueEnter and CueExit IN CueUpdate) and use it as an\n       * additional hint to try and remove the correct one of the colliding cues.\n       */\n      let activeSubtitleCue = activeSubtitleCues.shift();\n      this.activeSubtitleCueCount--;\n\n      return activeSubtitleCue.label;\n    }\n  }\n\n  /**\n   * Removes all active cues which don't enclose the given time\n   * @param time the time for which subtitles should remain\n   */\n  public clearInactiveCues(time: number): ActiveSubtitleCue[] {\n    const removedCues: ActiveSubtitleCue[] = [];\n    Object.keys(this.activeSubtitleCueMap).forEach(key => {\n      const activeCues = this.activeSubtitleCueMap[key];\n      activeCues.forEach(cue => {\n        if (time < cue.event.start || time > cue.event.end) {\n          this.popCueFromMap(cue.event);\n          removedCues.push(cue);\n        }\n      });\n    });\n    return removedCues;\n  }\n\n  static generateImageTagText(imageData: string): string | undefined {\n    if (!imageData) {\n      return;\n    }\n\n    const imgTag = new DOM('img', {\n      src: imageData,\n    });\n    imgTag.css('width', '100%');\n    return imgTag.get(0).outerHTML; // return the html as string\n  }\n\n  /**\n   * Returns the label associated with an already added cue.\n   * @param event\n   * @return {SubtitleLabel}\n   */\n  getCues(event: SubtitleCueEvent): SubtitleLabel[] | undefined {\n    let id = ActiveSubtitleManager.calculateId(event);\n    let activeSubtitleCues = this.activeSubtitleCueMap[id];\n    if (activeSubtitleCues && activeSubtitleCues.length > 0) {\n      return activeSubtitleCues.map((cue) => cue.label);\n    }\n  }\n\n  /**\n   * Removes the subtitle cue from the manager and returns the label that should be removed from the subtitle overlay,\n   * or null if there is no associated label existing (e.g. because all labels have been {@link #clear cleared}.\n   * @param event\n   * @return {SubtitleLabel|null}\n   */\n  cueExit(event: SubtitleCueEvent): SubtitleLabel {\n    return this.popCueFromMap(event);\n  }\n\n  /**\n   * Returns the number of active subtitle cues.\n   * @return {number}\n   */\n  get cueCount(): number {\n    // We explicitly count the cues to save an Array.reduce on every cueCount call (which can happen frequently)\n    return this.activeSubtitleCueCount;\n  }\n\n  /**\n   * Returns true if there are active subtitle cues, else false.\n   * @return {boolean}\n   */\n  get hasCues(): boolean {\n    return this.cueCount > 0;\n  }\n\n  /**\n   * Removes all subtitle cues from the manager.\n   */\n  clear(): void {\n    this.activeSubtitleCueMap = {};\n    this.activeSubtitleCueCount = 0;\n  }\n}\n\nexport class SubtitleRegionContainerManager {\n  private subtitleRegionContainers: { [regionName: string]: SubtitleRegionContainer } = {};\n\n  /**\n   * @param subtitleOverlay Reference to the subtitle overlay for adding and removing the containers.\n   */\n  constructor(private subtitleOverlay: SubtitleOverlay) {\n    this.subtitleOverlay = subtitleOverlay;\n  }\n\n  private getRegion(label: SubtitleLabel): { regionContainerId: string, regionName: string } {\n    if (label.vtt) {\n      return {\n        regionContainerId: label.vtt.region && label.vtt.region.id ? label.vtt.region.id : 'vtt',\n        regionName: 'vtt',\n      };\n    }\n\n    return {\n      regionContainerId: label.region || 'default',\n      regionName: label.region || 'default',\n    };\n  }\n\n  /**\n   * Creates and wraps a subtitle label into a container div based on the subtitle region.\n   * If the subtitle has positioning information it is added to the container.\n   * @param label The subtitle label to wrap\n   */\n  addLabel(label: SubtitleLabel, overlaySize?: Size): void {\n    const { regionContainerId, regionName } = this.getRegion(label);\n    const cssClasses = [`subtitle-position-${regionName}`];\n\n    if (label.vtt && label.vtt.region) {\n      cssClasses.push(`vtt-region-${label.vtt.region.id}`);\n    }\n\n    if (!this.subtitleRegionContainers[regionContainerId]) {\n      const regionContainer = new SubtitleRegionContainer({\n        cssClasses,\n      });\n\n      this.subtitleRegionContainers[regionContainerId] = regionContainer;\n\n      if (label.regionStyle) {\n        regionContainer.getDomElement().attr('style', label.regionStyle);\n      } else if (label.vtt && !label.vtt.region) {\n        /**\n         * If there is no region present to wrap the Cue Box, the Cue box becomes the\n         * region itself. Therefore the positioning values have to come from the box.\n         */\n        regionContainer.getDomElement().css('position', 'static');\n      } else {\n        // getDomElement needs to be called at least once to ensure the component exists\n        regionContainer.getDomElement();\n      }\n\n      for (const regionContainerId in this.subtitleRegionContainers) {\n        this.subtitleOverlay.addComponent(this.subtitleRegionContainers[regionContainerId]);\n      }\n    }\n\n    this.subtitleRegionContainers[regionContainerId].addLabel(label, overlaySize);\n  }\n\n  replaceLabel(previousLabel: SubtitleLabel, newLabel: SubtitleLabel): void {\n    const { regionContainerId } = this.getRegion(previousLabel);\n\n    this.subtitleRegionContainers[regionContainerId].removeLabel(previousLabel);\n    this.subtitleRegionContainers[regionContainerId].addLabel(newLabel);\n  }\n\n  /**\n   * Removes a subtitle label from a container.\n   */\n  removeLabel(label: SubtitleLabel): void {\n    let regionContainerId;\n\n    if (label.vtt) {\n      regionContainerId = label.vtt.region && label.vtt.region.id ? label.vtt.region.id : 'vtt';\n    } else {\n      regionContainerId = label.region || 'default';\n    }\n\n    this.subtitleRegionContainers[regionContainerId].removeLabel(label);\n\n    // Remove container if no more labels are displayed\n    if (this.subtitleRegionContainers[regionContainerId].isEmpty()) {\n      this.subtitleOverlay.removeComponent(this.subtitleRegionContainers[regionContainerId]);\n      delete this.subtitleRegionContainers[regionContainerId];\n    }\n  }\n\n  /**\n   * Removes all subtitle containers.\n   */\n  clear(): void {\n    for (const regionName in this.subtitleRegionContainers) {\n      this.subtitleOverlay.removeComponent(this.subtitleRegionContainers[regionName]);\n    }\n\n    this.subtitleRegionContainers = {};\n  }\n}\n\nexport class SubtitleRegionContainer extends Container<ContainerConfig> {\n  private labelCount = 0;\n\n  constructor(config: ContainerConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'subtitle-region-container',\n    }, this.config);\n  }\n\n  addLabel(labelToAdd: SubtitleLabel, overlaySize?: Size) {\n    this.labelCount++;\n\n    if (labelToAdd.vtt) {\n      if (labelToAdd.vtt.region && overlaySize) {\n        VttUtils.setVttRegionStyles(this, labelToAdd.vtt.region, overlaySize);\n      }\n\n      VttUtils.setVttCueBoxStyles(labelToAdd, overlaySize);\n    }\n\n    this.addComponent(labelToAdd);\n    this.updateComponents();\n  }\n\n  removeLabel(labelToRemove: SubtitleLabel): void {\n    this.labelCount--;\n    this.removeComponent(labelToRemove);\n    this.updateComponents();\n  }\n\n  public isEmpty(): boolean {\n    return this.labelCount === 0;\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport {SubtitleSwitchHandler} from '../subtitleutils';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection between available subtitle and caption tracks.\n *\n * @category Components\n */\nexport class SubtitleSelectBox extends SelectBox {\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitleselectbox'],\n      ariaLabel: i18n.getLocalizer('subtitle.select'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    new SubtitleSwitchHandler(player, this, uimanager);\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background colors.\n *\n * @category Components\n */\nexport class BackgroundColorSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsbackgroundcolorselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('white', i18n.getLocalizer('colors.white'));\n    this.addItem('black', i18n.getLocalizer('colors.black'));\n    this.addItem('red', i18n.getLocalizer('colors.red'));\n    this.addItem('green', i18n.getLocalizer('colors.green'));\n    this.addItem('blue', i18n.getLocalizer('colors.blue'));\n    this.addItem('cyan', i18n.getLocalizer('colors.cyan'));\n    this.addItem('yellow', i18n.getLocalizer('colors.yellow'));\n    this.addItem('magenta', i18n.getLocalizer('colors.magenta'));\n\n    let setColorAndOpacity = () => {\n      if (this.settingsManager.backgroundColor.isSet() && this.settingsManager.backgroundOpacity.isSet()) {\n        this.toggleOverlayClass(\n          'bgcolor-' + this.settingsManager.backgroundColor.value + this.settingsManager.backgroundOpacity.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n    };\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.backgroundColor.value = key;\n    });\n\n    this.settingsManager.backgroundColor.onChanged.subscribe((sender, property) => {\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.backgroundColor.isSet()) {\n        // ... clear the opacity when the color is not set\n        this.settingsManager.backgroundOpacity.clear();\n      } else if (!this.settingsManager.backgroundOpacity.isSet()) {\n        // ... set an opacity when the color is set\n        this.settingsManager.backgroundOpacity.value = '100';\n      }\n      this.selectItem(property.value);\n      setColorAndOpacity();\n    });\n\n    this.settingsManager.backgroundOpacity.onChanged.subscribe(() => {\n      setColorAndOpacity();\n    });\n\n    // Load initial value\n    if (this.settingsManager.backgroundColor.isSet()) {\n      this.selectItem(this.settingsManager.backgroundColor.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background opacity.\n *\n * @category Components\n */\nexport class BackgroundOpacitySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsbackgroundopacityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('25', i18n.getLocalizer('percent', { value: 25 }));\n    this.addItem('0', i18n.getLocalizer('percent', { value: 0 }));\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.backgroundOpacity.value = key;\n\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.backgroundOpacity.isSet()) {\n        // ... clear the color when the opacity is not set\n        this.settingsManager.backgroundColor.clear();\n      } else if (!this.settingsManager.backgroundColor.isSet()) {\n        // ... set a color when the opacity is set\n        this.settingsManager.backgroundColor.value = 'black';\n      }\n    });\n\n    // Update selected item when value is set from somewhere else\n    this.settingsManager.backgroundOpacity.onChanged.subscribe((sender, property) => {\n      this.selectItem(property.value);\n    });\n\n    // Load initial value\n    if (this.settingsManager.backgroundOpacity.isSet()) {\n      this.selectItem(this.settingsManager.backgroundOpacity.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different character edge.\n *\n * @category Components\n */\nexport class CharacterEdgeSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingscharacteredgeselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('raised', i18n.getLocalizer('settings.subtitles.characterEdge.raised'));\n    this.addItem('depressed', i18n.getLocalizer('settings.subtitles.characterEdge.depressed'));\n    this.addItem('uniform', i18n.getLocalizer('settings.subtitles.characterEdge.uniform'));\n    this.addItem('dropshadowed', i18n.getLocalizer('settings.subtitles.characterEdge.dropshadowed'));\n\n    this.settingsManager.characterEdge.onChanged.subscribe((sender, property) => {\n      if (property.isSet()) {\n        this.toggleOverlayClass('characteredge-' + property.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n\n      // Select the item in case the property was set from outside\n      this.selectItem(property.value);\n    });\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.characterEdge.value = key;\n    });\n\n    // Load initial value\n    if (this.settingsManager.characterEdge.isSet()) {\n      this.selectItem(this.settingsManager.characterEdge.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font colors.\n *\n * @category Components\n */\nexport class FontColorSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontcolorselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('white', i18n.getLocalizer('colors.white'));\n    this.addItem('black', i18n.getLocalizer('colors.black'));\n    this.addItem('red', i18n.getLocalizer('colors.red'));\n    this.addItem('green', i18n.getLocalizer('colors.green'));\n    this.addItem('blue', i18n.getLocalizer('colors.blue'));\n    this.addItem('cyan', i18n.getLocalizer('colors.cyan'));\n    this.addItem('yellow', i18n.getLocalizer('colors.yellow'));\n    this.addItem('magenta', i18n.getLocalizer('colors.magenta'));\n\n    let setColorAndOpacity = () => {\n      if (this.settingsManager.fontColor.isSet() && this.settingsManager.fontOpacity.isSet()) {\n        this.toggleOverlayClass(\n          'fontcolor-' + this.settingsManager.fontColor.value + this.settingsManager.fontOpacity.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n    };\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontColor.value = key;\n    });\n\n    this.settingsManager.fontColor.onChanged.subscribe((sender, property) => {\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.fontColor.isSet()) {\n        // ... clear the opacity when the color is not set\n        this.settingsManager.fontOpacity.clear();\n      } else if (!this.settingsManager.fontOpacity.isSet()) {\n        // ... set an opacity when the color is set\n        this.settingsManager.fontOpacity.value = '100';\n      }\n      this.selectItem(property.value);\n      setColorAndOpacity();\n    });\n\n    this.settingsManager.fontOpacity.onChanged.subscribe(() => {\n      setColorAndOpacity();\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontColor.isSet()) {\n      this.selectItem(this.settingsManager.fontColor.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font family.\n *\n * @category Components\n */\nexport class FontFamilySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontfamilyselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('monospacedserif', i18n.getLocalizer('settings.subtitles.font.family.monospacedserif'));\n    this.addItem('proportionalserif', i18n.getLocalizer('settings.subtitles.font.family.proportionalserif'));\n    this.addItem('monospacedsansserif', i18n.getLocalizer('settings.subtitles.font.family.monospacedsansserif'));\n    this.addItem('proportionalsansserif', i18n.getLocalizer('settings.subtitles.font.family.proportionalsansserif'));\n    this.addItem('casual', i18n.getLocalizer('settings.subtitles.font.family.casual'));\n    this.addItem('cursive', i18n.getLocalizer('settings.subtitles.font.family.cursive'));\n    this.addItem('smallcapital', i18n.getLocalizer('settings.subtitles.font.family.smallcapital'));\n\n    this.settingsManager.fontFamily.onChanged.subscribe((sender, property) => {\n      if (property.isSet()) {\n        this.toggleOverlayClass('fontfamily-' + property.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n\n      // Select the item in case the property was set from outside\n      this.selectItem(property.value);\n    });\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontFamily.value = key;\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontFamily.isSet()) {\n      this.selectItem(this.settingsManager.fontFamily.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font colors.\n *\n * @category Components\n */\nexport class FontOpacitySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontopacityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('25', i18n.getLocalizer('percent', { value: 25 }));\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontOpacity.value = key;\n\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.fontOpacity.isSet()) {\n        // ... clear the color when the opacity is not set\n        this.settingsManager.fontColor.clear();\n      } else if (!this.settingsManager.fontColor.isSet()) {\n        // ... set a color when the opacity is set\n        this.settingsManager.fontColor.value = 'white';\n      }\n    });\n\n    // Update selected item when value is set from somewhere else\n    this.settingsManager.fontOpacity.onChanged.subscribe((sender, property) => {\n      this.selectItem(property.value);\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontOpacity.isSet()) {\n      this.selectItem(this.settingsManager.fontOpacity.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different font colors.\n *\n * @category Components\n */\nexport class FontSizeSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingsfontsizeselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('150', i18n.getLocalizer('percent', { value: 150 }));\n    this.addItem('200', i18n.getLocalizer('percent', { value: 200 }));\n    this.addItem('300', i18n.getLocalizer('percent', { value: 300 }));\n    this.addItem('400', i18n.getLocalizer('percent', { value: 400 }));\n\n    this.settingsManager.fontSize.onChanged.subscribe((sender, property) => {\n      if (property.isSet()) {\n        this.toggleOverlayClass('fontsize-' + property.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n\n      // Select the item in case the property was set from outside\n      this.selectItem(property.value);\n    });\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.fontSize.value = key;\n    });\n\n    // Load initial value\n    if (this.settingsManager.fontSize.isSet()) {\n      this.selectItem(this.settingsManager.fontSize.value);\n    }\n  }\n}\n","import {SubtitleOverlay} from '../subtitleoverlay';\nimport {ListSelectorConfig} from '../listselector';\nimport {SelectBox} from '../selectbox';\nimport {SubtitleSettingsManager} from './subtitlesettingsmanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../../uimanager';\n\n/**\n * @category Configs\n */\nexport interface SubtitleSettingSelectBoxConfig extends ListSelectorConfig {\n  overlay: SubtitleOverlay;\n}\n\n/**\n * Base class for all subtitles settings select box\n *\n * @category Components\n **/\nexport class SubtitleSettingSelectBox extends SelectBox {\n\n  protected settingsManager?: SubtitleSettingsManager;\n  protected overlay: SubtitleOverlay;\n  private currentCssClass: string;\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.overlay = config.overlay;\n  }\n\n  /**\n   * Removes a previously set class and adds the passed in class.\n   * @param cssClass The new class to replace the previous class with or null to just remove the previous class\n   */\n  protected toggleOverlayClass(cssClass: string): void {\n    // Remove previous class if existing\n    if (this.currentCssClass) {\n      this.overlay.getDomElement().removeClass(this.currentCssClass);\n      this.currentCssClass = null;\n    }\n\n    // Add new class if specified. If the new class is null, we don't add anything.\n    if (cssClass) {\n      this.currentCssClass = this.prefixCss(cssClass);\n      this.overlay.getDomElement().addClass(this.currentCssClass);\n    }\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n      this.settingsManager = uimanager.getSubtitleSettingsManager();\n  }\n}\n","import {LabelConfig} from '../label';\nimport {Container, ContainerConfig} from '../container';\nimport {DOM} from '../../dom';\nimport {SettingsPanelPageOpenButton} from '../settingspanelpageopenbutton';\nimport { LocalizableText, i18n } from '../../localization/i18n';\n\n/**\n * @category Configs\n */\nexport interface SubtitleSettingsLabelConfig extends LabelConfig {\n  opener: SettingsPanelPageOpenButton;\n}\n\n/**\n * @category Components\n */\nexport class SubtitleSettingsLabel extends Container<ContainerConfig> {\n\n  private opener: SettingsPanelPageOpenButton;\n\n  private text: LocalizableText;\n\n  private for: string;\n\n  constructor(config: SubtitleSettingsLabelConfig) {\n    super(config);\n\n    this.opener = config.opener;\n    this.text = config.text;\n    this.for = config.for;\n\n    this.config = this.mergeConfig(<ContainerConfig>config, {\n      cssClass: 'ui-label',\n      components: [\n        this.opener,\n      ],\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    let labelElement = new DOM('label', {\n      'id': this.config.id,\n      'class': this.getCssClasses(),\n      'for': this.for,\n    }, this).append(\n      new DOM('span', {}).html(i18n.performLocalization(this.text)),\n      this.opener.getDomElement(),\n    );\n\n    return labelElement;\n  }\n}\n","import { StorageUtils } from '../../storageutils';\nimport { Component, ComponentConfig } from '../component';\nimport { EventDispatcher, Event } from '../../eventdispatcher';\n\ninterface SubtitleSettings {\n  fontColor?: string;\n  fontOpacity?: string;\n  fontFamily?: string;\n  fontSize?: string;\n  characterEdge?: string;\n  backgroundColor?: string;\n  backgroundOpacity?: string;\n  windowColor?: string;\n  windowOpacity?: string;\n}\n\ninterface Properties {\n  [name: string]: SubtitleSettingsProperty<string>;\n}\n\n/**\n * @category Utils\n */\nexport class SubtitleSettingsManager {\n  private userSettings: SubtitleSettings;\n  private localStorageKey: string;\n\n  private _properties: Properties = {\n    fontColor: new SubtitleSettingsProperty<string>(this),\n    fontOpacity: new SubtitleSettingsProperty<string>(this),\n    fontFamily: new SubtitleSettingsProperty<string>(this),\n    fontSize: new SubtitleSettingsProperty<string>(this),\n    characterEdge: new SubtitleSettingsProperty<string>(this),\n    backgroundColor: new SubtitleSettingsProperty<string>(this),\n    backgroundOpacity: new SubtitleSettingsProperty<string>(this),\n    windowColor: new SubtitleSettingsProperty<string>(this),\n    windowOpacity: new SubtitleSettingsProperty<string>(this),\n  };\n\n  constructor() {\n    this.userSettings = {};\n    this.localStorageKey =\n      DummyComponent.instance().prefixCss('subtitlesettings');\n  }\n\n  public reset(): void {\n    for (let propertyName in this._properties) {\n      this._properties[propertyName].clear();\n    }\n  }\n\n  public get fontColor(): SubtitleSettingsProperty<string> {\n    return this._properties.fontColor;\n  }\n\n  public get fontOpacity(): SubtitleSettingsProperty<string> {\n    return this._properties.fontOpacity;\n  }\n\n  public get fontFamily(): SubtitleSettingsProperty<string> {\n    return this._properties.fontFamily;\n  }\n\n  public get fontSize(): SubtitleSettingsProperty<string> {\n    return this._properties.fontSize;\n  }\n\n  public get characterEdge(): SubtitleSettingsProperty<string> {\n    return this._properties.characterEdge;\n  }\n\n  public get backgroundColor(): SubtitleSettingsProperty<string> {\n    return this._properties.backgroundColor;\n  }\n\n  public get backgroundOpacity(): SubtitleSettingsProperty<string> {\n    return this._properties.backgroundOpacity;\n  }\n\n  public get windowColor(): SubtitleSettingsProperty<string> {\n    return this._properties.windowColor;\n  }\n\n  public get windowOpacity(): SubtitleSettingsProperty<string> {\n    return this._properties.windowOpacity;\n  }\n\n  public initialize() {\n    for (let propertyName in this._properties) {\n      this._properties[propertyName].onChanged.subscribe((sender, property) => {\n        if (property.isSet()) {\n          (<any>this.userSettings)[propertyName] = property.value;\n        } else {\n          // Delete the property from the settings object if unset to avoid serialization of null values\n          delete (<any>this.userSettings)[propertyName];\n        }\n\n        // Save the settings object when a property has changed\n        this.save();\n      });\n    }\n\n    this.load();\n  }\n\n  /**\n   * Saves the settings to local storage.\n   */\n  public save(): void {\n    StorageUtils.setObject(this.localStorageKey, this.userSettings);\n  }\n\n  /**\n   * Loads the settings from local storage\n   */\n  public load(): void {\n    this.userSettings =\n      StorageUtils.getObject<SubtitleSettings>(this.localStorageKey) || {};\n\n    // Apply the loaded settings\n    for (let property in this.userSettings) {\n      this._properties[property].value = (<any>this.userSettings)[property];\n    }\n  }\n}\n\n/**\n * A dummy component whose sole purpose is to expose the {@link #prefixCss} method to the\n * {@link SubtitleSettingsManager}.\n */\nclass DummyComponent extends Component<ComponentConfig> {\n  private static _instance: DummyComponent;\n\n  public static instance(): DummyComponent {\n    if (!DummyComponent._instance) {\n      DummyComponent._instance = new DummyComponent();\n    }\n\n    return DummyComponent._instance;\n  }\n\n  public prefixCss(cssClassOrId: string): string {\n    return super.prefixCss(cssClassOrId);\n  }\n}\n\nexport class SubtitleSettingsProperty<T> {\n  private _manager: SubtitleSettingsManager;\n  private _onChanged: EventDispatcher<\n    SubtitleSettingsManager,\n    SubtitleSettingsProperty<T>\n  >;\n  private _value: T;\n\n  constructor(manager: SubtitleSettingsManager) {\n    this._manager = manager;\n    this._onChanged = new EventDispatcher<\n      SubtitleSettingsManager,\n      SubtitleSettingsProperty<T>\n    >();\n  }\n\n  public isSet(): boolean {\n    return this._value != null;\n  }\n\n  public clear(): void {\n    this._value = null;\n    this.onChangedEvent(null);\n  }\n\n  public get value(): T {\n    return this._value;\n  }\n\n  public set value(value: T) {\n    if (typeof value === 'string' && value === 'null') {\n      value = null;\n    }\n\n    this._value = value;\n    this.onChangedEvent(value);\n  }\n\n  protected onChangedEvent(value: T) {\n    this._onChanged.dispatch(this._manager, this);\n  }\n\n  public get onChanged(): Event<\n    SubtitleSettingsManager,\n    SubtitleSettingsProperty<T>\n  > {\n    return this._onChanged.getEvent();\n  }\n}\n","import {SettingsPanelPage} from '../settingspanelpage';\nimport {SettingsPanel} from '../settingspanel';\nimport {SubtitleOverlay} from '../subtitleoverlay';\nimport {ContainerConfig} from '../container';\nimport {SubtitleSettingsManager} from './subtitlesettingsmanager';\nimport {Component, ComponentConfig} from '../component';\nimport {FontSizeSelectBox} from './fontsizeselectbox';\nimport {FontFamilySelectBox} from './fontfamilyselectbox';\nimport {FontColorSelectBox} from './fontcolorselectbox';\nimport {FontOpacitySelectBox} from './fontopacityselectbox';\nimport {CharacterEdgeSelectBox} from './characteredgeselectbox';\nimport {BackgroundColorSelectBox} from './backgroundcolorselectbox';\nimport {BackgroundOpacitySelectBox} from './backgroundopacityselectbox';\nimport {WindowColorSelectBox} from './windowcolorselectbox';\nimport {WindowOpacitySelectBox} from './windowopacityselectbox';\nimport {SubtitleSettingsResetButton} from './subtitlesettingsresetbutton';\nimport {UIInstanceManager} from '../../uimanager';\nimport {SettingsPanelPageBackButton} from '../settingspanelpagebackbutton';\nimport {SettingsPanelItem} from '../settingspanelitem';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * @category Configs\n */\nexport interface SubtitleSettingsPanelPageConfig extends ContainerConfig {\n  settingsPanel: SettingsPanel;\n  overlay: SubtitleOverlay;\n}\n\n/**\n * @category Components\n */\nexport class SubtitleSettingsPanelPage extends SettingsPanelPage {\n\n  private readonly overlay: SubtitleOverlay;\n  private readonly settingsPanel: SettingsPanel;\n\n  constructor(config: SubtitleSettingsPanelPageConfig) {\n    super(config);\n\n    this.overlay = config.overlay;\n    this.settingsPanel = config.settingsPanel;\n\n\n    this.config = this.mergeConfig(config, {\n      components: <Component<ComponentConfig>[]>[\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.size'), new FontSizeSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.family'), new FontFamilySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.color'), new FontColorSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.font.opacity'), new FontOpacitySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.characterEdge'), new CharacterEdgeSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.background.color'), new BackgroundColorSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.background.opacity'), new BackgroundOpacitySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.window.color'), new WindowColorSelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(i18n.getLocalizer('settings.subtitles.window.opacity'), new WindowOpacitySelectBox({\n          overlay: this.overlay,\n        })),\n        new SettingsPanelItem(new SettingsPanelPageBackButton({\n          container: this.settingsPanel,\n          text: i18n.getLocalizer('back'),\n        }), new SubtitleSettingsResetButton({}), {\n          role: 'menubar',\n        }),\n      ],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.onActive.subscribe(() => {\n      this.overlay.enablePreviewSubtitleLabel();\n    });\n\n    this.onInactive.subscribe(() => {\n      this.overlay.removePreviewSubtitleLabel();\n    });\n  }\n}","import {UIInstanceManager} from '../../uimanager';\nimport {SubtitleSettingsManager} from './subtitlesettingsmanager';\nimport {Button, ButtonConfig} from '../button';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A button that resets all subtitle settings to their defaults.\n *\n * @category Buttons\n */\nexport class SubtitleSettingsResetButton extends Button<ButtonConfig> {\n\n  private settingsManager: SubtitleSettingsManager;\n\n  constructor(config: ButtonConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-subtitlesettingsresetbutton',\n      text: i18n.getLocalizer('reset'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    this.settingsManager = uimanager.getSubtitleSettingsManager();\n\n    this.onClick.subscribe(() => {\n      this.settingsManager.reset();\n    });\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background colors.\n *\n * @category Components\n */\nexport class WindowColorSelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingswindowcolorselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('white', i18n.getLocalizer('colors.white'));\n    this.addItem('black', i18n.getLocalizer('colors.black'));\n    this.addItem('red', i18n.getLocalizer('colors.red'));\n    this.addItem('green', i18n.getLocalizer('colors.green'));\n    this.addItem('blue', i18n.getLocalizer('colors.blue'));\n    this.addItem('cyan', i18n.getLocalizer('colors.cyan'));\n    this.addItem('yellow', i18n.getLocalizer('colors.yellow'));\n    this.addItem('magenta', i18n.getLocalizer('colors.magenta'));\n\n\n\n    let setColorAndOpacity = () => {\n      if (this.settingsManager.windowColor.isSet() && this.settingsManager.windowOpacity.isSet()) {\n        this.toggleOverlayClass(\n          'windowcolor-' + this.settingsManager.windowColor.value + this.settingsManager.windowOpacity.value);\n      } else {\n        this.toggleOverlayClass(null);\n      }\n    };\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.windowColor.value = key;\n    });\n\n    this.settingsManager.windowColor.onChanged.subscribe((sender, property) => {\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.windowColor.isSet()) {\n        // ... clear the opacity when the color is not set\n        this.settingsManager.windowOpacity.clear();\n      } else if (!this.settingsManager.windowOpacity.isSet()) {\n        // ... set an opacity when the color is set\n        this.settingsManager.windowOpacity.value = '100';\n      }\n      this.selectItem(property.value);\n      setColorAndOpacity();\n    });\n\n    this.settingsManager.windowOpacity.onChanged.subscribe(() => {\n      setColorAndOpacity();\n    });\n\n    // Load initial value\n    if (this.settingsManager.windowColor.isSet()) {\n      this.selectItem(this.settingsManager.windowColor.value);\n    }\n  }\n}\n","import { SubtitleSettingSelectBox, SubtitleSettingSelectBoxConfig } from './subtitlesettingselectbox';\nimport {UIInstanceManager} from '../../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../../localization/i18n';\n\n/**\n * A select box providing a selection of different background opacity.\n *\n * @category Components\n */\nexport class WindowOpacitySelectBox extends SubtitleSettingSelectBox {\n\n  constructor(config: SubtitleSettingSelectBoxConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-subtitlesettingswindowopacityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    this.addItem(null, i18n.getLocalizer('default'));\n    this.addItem('100', i18n.getLocalizer('percent', { value: 100 }));\n    this.addItem('75', i18n.getLocalizer('percent', { value: 75 }));\n    this.addItem('50', i18n.getLocalizer('percent', { value: 50 }));\n    this.addItem('25', i18n.getLocalizer('percent', { value: 25 }));\n    this.addItem('0', i18n.getLocalizer('percent', { value: 0 }));\n\n    this.onItemSelected.subscribe((sender, key: string) => {\n      this.settingsManager.windowOpacity.value = key;\n\n      // Color and opacity go together, so we need to...\n      if (!this.settingsManager.windowOpacity.isSet()) {\n        // ... clear the color when the opacity is not set\n        this.settingsManager.windowColor.clear();\n      } else if (!this.settingsManager.windowColor.isSet()) {\n        // ... set a color when the opacity is set\n        this.settingsManager.windowColor.value = 'black';\n      }\n    });\n\n    // Update selected item when value is set from somewhere else\n    this.settingsManager.windowOpacity.onChanged.subscribe((sender, property) => {\n      this.selectItem(property.value);\n    });\n\n    // Load initial value\n    if (this.settingsManager.windowOpacity.isSet()) {\n      this.selectItem(this.settingsManager.windowOpacity.value);\n    }\n  }\n}\n","import { PlayerAPI } from 'bitmovin-player';\nimport { UIInstanceManager } from '../uimanager';\nimport { DOM } from '../dom';\nimport { ComponentConfig } from './component';\nimport { TimelineMarker } from '../uiconfig';\nimport { SeekBarMarker } from './seekbar';\nimport { PlayerUtils } from '../playerutils';\nimport { Timeout } from '../timeout';\n\n/**\n * @category Configs\n */\nexport interface MarkersConfig extends ComponentConfig {\n  /**\n   * Used for seekBar marker snapping range percentage\n   */\n  snappingRange?: number;\n}\n\nexport class TimelineMarkersHandler {\n  private markersContainer: DOM;\n  private timelineMarkers: SeekBarMarker[];\n  private player: PlayerAPI;\n  private uimanager: UIInstanceManager;\n  private pausedTimeshiftUpdater: Timeout;\n  private getSeekBarWidth: () => number;\n  protected config: MarkersConfig;\n\n  constructor(config: MarkersConfig, getSeekBarWidth: () => number, markersContainer: DOM) {\n    this.config = config;\n    this.getSeekBarWidth = getSeekBarWidth;\n    this.markersContainer = markersContainer;\n    this.timelineMarkers = [];\n  }\n\n  public initialize(player: PlayerAPI, uimanager: UIInstanceManager) {\n    this.player = player;\n    this.uimanager = uimanager;\n    this.configureMarkers();\n  }\n\n  private configureMarkers(): void {\n    // Remove markers when unloaded\n    this.player.on(this.player.exports.PlayerEvent.SourceUnloaded, () => this.clearMarkers());\n    this.player.on(this.player.exports.PlayerEvent.AdBreakStarted, () => this.clearMarkers());\n    this.player.on(this.player.exports.PlayerEvent.AdBreakFinished, () => this.updateMarkers());\n    // Update markers when the size of the seekbar changes\n    this.player.on(this.player.exports.PlayerEvent.PlayerResized, () => this.updateMarkersDOM());\n\n    this.player.on(this.player.exports.PlayerEvent.SourceLoaded, () => {\n      if (this.player.isLive()) {\n        // Update marker position as timeshift range changes\n        this.player.on(this.player.exports.PlayerEvent.TimeChanged, () => this.updateMarkers());\n        // Update marker postion when paused as timeshift range changes\n        this.configureLivePausedTimeshiftUpdater(() => this.updateMarkers());\n      }\n    });\n    this.uimanager.getConfig().events.onUpdated.subscribe(() => this.updateMarkers());\n    this.uimanager.onRelease.subscribe(() => this.uimanager.getConfig().events.onUpdated.unsubscribe(() => this.updateMarkers()));\n\n    // Init markers at startup\n    this.updateMarkers();\n  }\n\n  public getMarkerAtPosition(percentage: number): SeekBarMarker | null {\n    const snappingRange = this.config.snappingRange;\n\n    const matchingMarker = this.timelineMarkers.find(marker => {\n      const hasDuration = marker.duration > 0;\n      // Handle interval markers\n      const intervalMarkerMatch =\n        hasDuration &&\n        percentage >= marker.position - snappingRange &&\n        percentage <= marker.position + marker.duration + snappingRange;\n\n      // Handle position markers\n      const positionMarkerMatch =\n        percentage >= marker.position - snappingRange &&\n        percentage <= marker.position + snappingRange;\n\n      return intervalMarkerMatch || positionMarkerMatch;\n    });\n\n    return matchingMarker || null;\n  }\n\n  private clearMarkers(): void {\n    this.timelineMarkers = [];\n    this.markersContainer.empty();\n  }\n\n  private removeMarkerFromConfig(marker: TimelineMarker): void {\n    this.uimanager.getConfig().metadata.markers = this.uimanager.getConfig().metadata.markers.filter(_marker => marker !== _marker);\n  }\n\n  private filterRemovedMarkers(): void {\n    this.timelineMarkers = this.timelineMarkers.filter(seekbarMarker => {\n      const matchingMarker = this.uimanager.getConfig().metadata.markers.find(_marker => seekbarMarker.marker === _marker);\n      if (!matchingMarker) {\n        this.removeMarkerFromDOM(seekbarMarker);\n      }\n      return matchingMarker;\n    });\n  }\n\n  private removeMarkerFromDOM(marker: SeekBarMarker): void {\n    if (marker.element) {\n      marker.element.remove();\n    }\n  }\n\n  private updateMarkers(): void {\n    if (!shouldProcessMarkers(this.player, this.uimanager)) {\n      this.clearMarkers();\n      return;\n    }\n\n    this.filterRemovedMarkers();\n\n    this.uimanager.getConfig().metadata.markers.forEach(marker => {\n      const { markerPosition, markerDuration } = getMarkerPositions(this.player, marker);\n\n      if (shouldRemoveMarker(markerPosition, markerDuration)) {\n        this.removeMarkerFromConfig(marker);\n      } else if (markerPosition <= 100) {\n        const matchingMarker = this.timelineMarkers.find(seekbarMarker => seekbarMarker.marker === marker);\n\n        if (matchingMarker) {\n          matchingMarker.position = markerPosition;\n          matchingMarker.duration = markerDuration;\n\n          this.updateMarkerDOM(matchingMarker);\n        } else {\n          const newMarker: SeekBarMarker = { marker, position: markerPosition, duration: markerDuration };\n          this.timelineMarkers.push(newMarker);\n\n          this.createMarkerDOM(newMarker);\n        }\n      }\n    });\n  }\n\n  private getMarkerCssProperties(marker: SeekBarMarker): { [propertyName: string]: string } {\n    const seekBarWidthPx = this.getSeekBarWidth();\n\n    const positionInPx = (seekBarWidthPx / 100) * (marker.position < 0 ? 0 : marker.position);\n    const cssProperties: { [propertyName: string]: string } = {\n      'transform': `translateX(${positionInPx}px)`,\n    };\n\n    if (marker.duration > 0) {\n      const markerWidthPx = Math.round(seekBarWidthPx / 100 * marker.duration);\n      cssProperties['width'] = `${markerWidthPx}px`;\n    }\n\n    return cssProperties;\n  }\n\n  private updateMarkerDOM(marker: SeekBarMarker): void {\n    marker.element.css(this.getMarkerCssProperties(marker));\n  }\n\n  private createMarkerDOM(marker: SeekBarMarker): void {\n    const markerClasses = ['seekbar-marker'].concat(marker.marker.cssClasses || [])\n      .map(cssClass => this.prefixCss(cssClass));\n\n    const markerElement = new DOM('div', {\n      'class': markerClasses.join(' '),\n      'data-marker-time': String(marker.marker.time),\n      'data-marker-title': String(marker.marker.title),\n    }).css(this.getMarkerCssProperties(marker));\n\n    if (marker.marker.imageUrl) {\n      const removeImage = () => {\n        imageElement.remove();\n      };\n\n      const imageElement = new DOM('img', {\n        'class': this.prefixCss('seekbar-marker-image'),\n        'src': marker.marker.imageUrl,\n      }).on('error', removeImage);\n\n      markerElement.append(imageElement);\n    }\n\n    marker.element = markerElement;\n    this.markersContainer.append(markerElement);\n  }\n\n  private updateMarkersDOM(): void {\n    this.timelineMarkers.forEach(marker => {\n      if (marker.element) {\n        this.updateMarkerDOM(marker);\n      } else {\n        this.createMarkerDOM(marker);\n      }\n    });\n  }\n\n  private configureLivePausedTimeshiftUpdater(\n    handler: () => void,\n  ): void {\n    // Regularly update the marker position while the timeout is active\n    this.pausedTimeshiftUpdater = new Timeout(1000, handler, true);\n\n    this.player.on(this.player.exports.PlayerEvent.Paused, () => {\n      if (this.player.isLive() && this.player.getMaxTimeShift() < 0) {\n        this.pausedTimeshiftUpdater.start();\n      }\n    });\n\n    // Stop updater when playback continues (no matter if the updater was started before)\n    this.player.on(this.player.exports.PlayerEvent.Play, () => this.pausedTimeshiftUpdater.clear());\n    this.player.on(this.player.exports.PlayerEvent.Destroy, () => this.pausedTimeshiftUpdater.clear());\n  }\n\n  protected prefixCss(cssClassOrId: string): string {\n    return this.config.cssPrefix + '-' + cssClassOrId;\n  }\n}\n\nfunction getMarkerPositions(player: PlayerAPI, marker: TimelineMarker) {\n  const duration = getDuration(player);\n\n  const markerPosition = 100 / duration * getMarkerTime(marker, player, duration); // convert absolute time to percentage\n  let markerDuration = 100 / duration * marker.duration;\n\n  if (markerPosition < 0 && !isNaN(markerDuration)) {\n    // Shrink marker duration for on live streams as they reach end\n    markerDuration = markerDuration + markerPosition;\n  }\n\n  if (100 - markerPosition < markerDuration) {\n    // Shrink marker if it overflows timeline\n    markerDuration = 100 - markerPosition;\n  }\n\n  return { markerDuration, markerPosition };\n}\n\nfunction getMarkerTime(marker: TimelineMarker, player: PlayerAPI, duration: number): number {\n  if (!player.isLive()) {\n    return marker.time;\n  }\n\n  return duration - (PlayerUtils.getSeekableRangeRespectingLive(player).end - marker.time);\n}\n\nfunction getDuration(player: PlayerAPI): number {\n  if (!player.isLive()) {\n    return player.getDuration();\n  }\n  const { start, end } = PlayerUtils.getSeekableRangeRespectingLive(player);\n\n  return end - start;\n}\n\nfunction shouldRemoveMarker(markerPosition: number, markerDuration: number): boolean {\n  return (markerDuration < 0 || isNaN(markerDuration)) && markerPosition < 0;\n}\n\nfunction shouldProcessMarkers(player: PlayerAPI, uimanager: UIInstanceManager): boolean {\n  // Don't generate timeline markers if we don't yet have a duration\n  // The duration check is for buggy platforms where the duration is not available instantly (Chrome on Android 4.3)\n  const validToProcess = player.getDuration() !== Infinity || player.isLive();\n  const hasMarkers = uimanager.getConfig().metadata.markers.length > 0;\n\n  return validToProcess && hasMarkers;\n}\n","import {Container, ContainerConfig} from './container';\nimport {UIInstanceManager} from '../uimanager';\nimport {MetadataLabel, MetadataLabelContent} from './metadatalabel';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for a {@link TitleBar}.\n *\n * @category Configs\n */\nexport interface TitleBarConfig extends ContainerConfig {\n  /**\n   * Specifies if the title bar should stay hidden when no metadata label contains any text. Does not make a lot\n   * of sense if the title bar contains other components than just MetadataLabels (like in the default configuration).\n   * Default: false\n   */\n  keepHiddenWithoutMetadata?: boolean;\n}\n\n/**\n * Displays a title bar containing a label with the title of the video.\n *\n * @category Components\n */\nexport class TitleBar extends Container<TitleBarConfig> {\n\n  constructor(config: TitleBarConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-titlebar',\n      hidden: true,\n      components: [\n        new MetadataLabel({ content: MetadataLabelContent.Title }),\n        new MetadataLabel({ content: MetadataLabelContent.Description }),\n      ],\n      keepHiddenWithoutMetadata: false,\n    }, <TitleBarConfig>this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let config = this.getConfig();\n    let shouldBeShown = !this.isHidden();\n    let hasMetadataText = true; // Flag to track if any metadata label contains text\n\n    let checkMetadataTextAndUpdateVisibility = () => {\n      hasMetadataText = false;\n\n      // Iterate through metadata labels and check if at least one of them contains text\n      for (let component of this.getComponents()) {\n        if (component instanceof MetadataLabel) {\n          if (!component.isEmpty()) {\n            hasMetadataText = true;\n            break;\n          }\n        }\n      }\n\n      if (this.isShown()) {\n        // Hide a visible titlebar if it does not contain any text and the hidden flag is set\n        if (config.keepHiddenWithoutMetadata && !hasMetadataText) {\n          this.hide();\n        }\n      } else if (shouldBeShown) {\n        // Show a hidden titlebar if it should actually be shown\n        this.show();\n      }\n    };\n\n    // Listen to text change events to update the hasMetadataText flag when the metadata dynamically changes\n    for (let component of this.getComponents()) {\n      if (component instanceof MetadataLabel) {\n        component.onTextChanged.subscribe(checkMetadataTextAndUpdateVisibility);\n      }\n    }\n\n    uimanager.onControlsShow.subscribe(() => {\n      shouldBeShown = true;\n      if (!(config.keepHiddenWithoutMetadata && !hasMetadataText)) {\n        this.show();\n      }\n    });\n    uimanager.onControlsHide.subscribe(() => {\n      shouldBeShown = false;\n      this.hide();\n    });\n\n    // init\n    checkMetadataTextAndUpdateVisibility();\n  }\n}","import {Button, ButtonConfig} from './button';\nimport {NoArgs, EventDispatcher, Event} from '../eventdispatcher';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { LocalizableText } from '../localization/i18n';\n\n/**\n * Configuration interface for a toggle button component.\n *\n * @category Configs\n */\nexport interface ToggleButtonConfig extends ButtonConfig {\n  /**\n   * The CSS class that marks the on-state of the button.\n   */\n  onClass?: string;\n  /**\n   * The CSS class that marks the off-state of the button.\n   */\n  offClass?: string;\n  /**\n   * WCAG20 standard for defining info about the component (usually the name)\n   *\n   * It is recommended to use `onAriaLabel` and `offAriaLabel` for toggle buttons\n   * as the component can then update them as the button is used.\n   *\n   * If both `ariaLabel` and `onAriaLabel` are set, `onAriaLabel` is used.\n   */\n  ariaLabel?: LocalizableText;\n  /**\n   * The aria label that marks the on-state of the button.\n   */\n  onAriaLabel?: LocalizableText;\n  /**\n   * The aria label that marks the off-state of the button.\n   */\n  offAriaLabel?: LocalizableText;\n  /**\n   * The text as string or as localize callback on the button.\n   */\n  text?: LocalizableText;\n}\n\n/**\n * A button that can be toggled between 'on' and 'off' states.\n *\n * @category Components\n */\nexport class ToggleButton<Config extends ToggleButtonConfig> extends Button<Config> {\n\n  private onState: boolean;\n\n  private toggleButtonEvents = {\n    onToggle: new EventDispatcher<ToggleButton<Config>, NoArgs>(),\n    onToggleOn: new EventDispatcher<ToggleButton<Config>, NoArgs>(),\n    onToggleOff: new EventDispatcher<ToggleButton<Config>, NoArgs>(),\n  };\n\n  constructor(config: Config) {\n    super(config);\n\n    const defaultConfig: ToggleButtonConfig = {\n      cssClass: 'ui-togglebutton',\n      onClass: 'on',\n      offClass: 'off',\n    };\n\n    if (config.onAriaLabel) {\n      config.ariaLabel = config.onAriaLabel;\n    }\n\n    this.config = this.mergeConfig(config, defaultConfig as Config, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n    const config = this.getConfig();\n    this.getDomElement().addClass(this.prefixCss(config.offClass));\n  }\n\n  /**\n   * Toggles the button to the 'on' state.\n   */\n  on() {\n    if (this.isOff()) {\n      const config = this.getConfig();\n\n      this.onState = true;\n      this.getDomElement().removeClass(this.prefixCss(config.offClass));\n      this.getDomElement().addClass(this.prefixCss(config.onClass));\n\n      this.onToggleEvent();\n      this.onToggleOnEvent();\n\n      this.setAriaAttr('pressed', 'true');\n\n      if (this.config.onAriaLabel) {\n        this.setAriaLabel(this.config.onAriaLabel);\n      }\n    }\n  }\n\n  /**\n   * Toggles the button to the 'off' state.\n   */\n  off() {\n    if (this.isOn()) {\n      const config = this.getConfig();\n\n      this.onState = false;\n      this.getDomElement().removeClass(this.prefixCss(config.onClass));\n      this.getDomElement().addClass(this.prefixCss(config.offClass));\n\n      this.onToggleEvent();\n      this.onToggleOffEvent();\n\n      this.setAriaAttr('pressed', 'false');\n\n      if (this.config.offAriaLabel) {\n        this.setAriaLabel(this.config.offAriaLabel);\n      }\n    }\n  }\n\n  /**\n   * Toggle the button 'on' if it is 'off', or 'off' if it is 'on'.\n   */\n  toggle() {\n    if (this.isOn()) {\n      this.off();\n    } else {\n      this.on();\n    }\n  }\n\n  /**\n   * Checks if the toggle button is in the 'on' state.\n   * @returns {boolean} true if button is 'on', false if 'off'\n   */\n  isOn(): boolean {\n    return this.onState;\n  }\n\n  /**\n   * Checks if the toggle button is in the 'off' state.\n   * @returns {boolean} true if button is 'off', false if 'on'\n   */\n  isOff(): boolean {\n    return !this.isOn();\n  }\n\n  protected onClickEvent() {\n    super.onClickEvent();\n\n    // Fire the toggle event together with the click event\n    // (they are technically the same, only the semantics are different)\n    this.onToggleEvent();\n  }\n\n  protected onToggleEvent() {\n    this.toggleButtonEvents.onToggle.dispatch(this);\n  }\n\n  protected onToggleOnEvent() {\n    this.toggleButtonEvents.onToggleOn.dispatch(this);\n  }\n\n  protected onToggleOffEvent() {\n    this.toggleButtonEvents.onToggleOff.dispatch(this);\n  }\n\n  /**\n   * Gets the event that is fired when the button is toggled.\n   * @returns {Event<ToggleButton<Config>, NoArgs>}\n   */\n  get onToggle(): Event<ToggleButton<Config>, NoArgs> {\n    return this.toggleButtonEvents.onToggle.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the button is toggled 'on'.\n   * @returns {Event<ToggleButton<Config>, NoArgs>}\n   */\n  get onToggleOn(): Event<ToggleButton<Config>, NoArgs> {\n    return this.toggleButtonEvents.onToggleOn.getEvent();\n  }\n\n  /**\n   * Gets the event that is fired when the button is toggled 'off'.\n   * @returns {Event<ToggleButton<Config>, NoArgs>}\n   */\n  get onToggleOff(): Event<ToggleButton<Config>, NoArgs> {\n    return this.toggleButtonEvents.onToggleOff.getEvent();\n  }\n}","import {Component, ComponentConfig} from './component';\nimport {DOM} from '../dom';\n\n/**\n * Animated analog TV static noise.\n *\n * @category Components\n */\nexport class TvNoiseCanvas extends Component<ComponentConfig> {\n\n  private canvas: DOM;\n\n  private canvasElement: HTMLCanvasElement;\n  private canvasContext: CanvasRenderingContext2D;\n  private canvasWidth = 160;\n  private canvasHeight = 90;\n  private interferenceHeight = 50;\n  private lastFrameUpdate: number = 0;\n  private frameInterval: number = 60;\n  private useAnimationFrame: boolean = !!window.requestAnimationFrame;\n  private noiseAnimationWindowPos: number;\n  private frameUpdateHandlerId: number;\n\n  constructor(config: ComponentConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-tvnoisecanvas',\n    }, this.config);\n  }\n\n  protected toDomElement(): DOM {\n    return this.canvas = new DOM('canvas', { 'class': this.getCssClasses() }, this);\n  }\n\n  start(): void {\n    this.canvasElement = <HTMLCanvasElement>this.canvas.get(0);\n    this.canvasContext = this.canvasElement.getContext('2d');\n    this.noiseAnimationWindowPos = -this.canvasHeight;\n    this.lastFrameUpdate = 0;\n\n    this.canvasElement.width = this.canvasWidth;\n    this.canvasElement.height = this.canvasHeight;\n\n    this.renderFrame();\n  }\n\n  stop(): void {\n    if (this.useAnimationFrame) {\n      cancelAnimationFrame(this.frameUpdateHandlerId);\n    } else {\n      clearTimeout(this.frameUpdateHandlerId);\n    }\n  }\n\n  private renderFrame(): void {\n    // This code has been copied from the player controls.js and simplified\n\n    if (this.lastFrameUpdate + this.frameInterval > new Date().getTime()) {\n      // It's too early to render the next frame\n      this.scheduleNextRender();\n      return;\n    }\n\n    let currentPixelOffset;\n    let canvasWidth = this.canvasWidth;\n    let canvasHeight = this.canvasHeight;\n\n    // Create texture\n    let noiseImage = this.canvasContext.createImageData(canvasWidth, canvasHeight);\n\n    // Fill texture with noise\n    for (let y = 0; y < canvasHeight; y++) {\n      for (let x = 0; x < canvasWidth; x++) {\n        currentPixelOffset = (canvasWidth * y * 4) + x * 4;\n        noiseImage.data[currentPixelOffset] = Math.random() * 255;\n        if (y < this.noiseAnimationWindowPos || y > this.noiseAnimationWindowPos + this.interferenceHeight) {\n          noiseImage.data[currentPixelOffset] *= 0.85;\n        }\n        noiseImage.data[currentPixelOffset + 1] = noiseImage.data[currentPixelOffset];\n        noiseImage.data[currentPixelOffset + 2] = noiseImage.data[currentPixelOffset];\n        noiseImage.data[currentPixelOffset + 3] = 50;\n      }\n    }\n\n    // Put texture onto canvas\n    this.canvasContext.putImageData(noiseImage, 0, 0);\n\n    this.lastFrameUpdate = new Date().getTime();\n    this.noiseAnimationWindowPos += 7;\n    if (this.noiseAnimationWindowPos > canvasHeight) {\n      this.noiseAnimationWindowPos = -canvasHeight;\n    }\n\n    this.scheduleNextRender();\n  }\n\n  private scheduleNextRender(): void {\n    if (this.useAnimationFrame) {\n      this.frameUpdateHandlerId = window.requestAnimationFrame(this.renderFrame.bind(this));\n    } else {\n      this.frameUpdateHandlerId = window.setTimeout(this.renderFrame.bind(this), this.frameInterval);\n    }\n  }\n}","import { Container, ContainerConfig } from './container';\nimport { UIInstanceManager } from '../uimanager';\nimport { DOM, HTMLElementWithComponent } from '../dom';\nimport { Timeout } from '../timeout';\nimport { PlayerUtils } from '../playerutils';\nimport { CancelEventArgs, Event as UiEvent, EventDispatcher } from '../eventdispatcher';\nimport { PlayerAPI, PlayerResizedEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\nimport { Button, ButtonConfig } from './button';\n\n/**\n * Configuration interface for a {@link UIContainer}.\n *\n * @category Configs\n */\nexport interface UIContainerConfig extends ContainerConfig {\n  /**\n   * The delay in milliseconds after which the control bar will be hidden when there is no user interaction.\n   * Set to -1 for the UI to be always shown.\n   * Default: 5 seconds (5000)\n   */\n  hideDelay?: number;\n  /**\n   * An array of player states in which the UI will not be hidden, no matter what the {@link hideDelay} is.\n   */\n  hidePlayerStateExceptions?: PlayerUtils.PlayerState[];\n  /**\n   * The HTML element on which user interaction events (e.g. mouse and touch events) will be tracked to detect\n   * interaction with the UI. These basically trigger showing and hiding of the UI.\n   * Default: the UI container itself\n   */\n  userInteractionEventSource?: HTMLElement;\n\n  /**\n   * Specify whether the UI should be hidden immediatly if the mouse leaves the userInteractionEventSource.\n   * If false or not set it will wait for the hideDelay.\n   * Default: false\n   */\n  hideImmediatelyOnMouseLeave?: boolean;\n}\n\n/**\n * The base container that contains all of the UI. The UIContainer is passed to the {@link UIManager} to build and\n * setup the UI.\n *\n * @category Containers\n */\nexport class UIContainer extends Container<UIContainerConfig> {\n\n  private static readonly STATE_PREFIX = 'player-state-';\n\n  private static readonly FULLSCREEN = 'fullscreen';\n  private static readonly BUFFERING = 'buffering';\n  private static readonly REMOTE_CONTROL = 'remote-control';\n  private static readonly CONTROLS_SHOWN = 'controls-shown';\n  private static readonly CONTROLS_HIDDEN = 'controls-hidden';\n\n  private uiHideTimeout: Timeout;\n  private playerStateChange: EventDispatcher<UIContainer, PlayerUtils.PlayerState>;\n\n  private userInteractionEventSource: DOM;\n  private userInteractionEvents: { name: string, handler: EventListenerOrEventListenerObject }[];\n  private hidingPrevented: () => boolean;\n\n  public hideUi: () => void = () => {};\n  public showUi: () => void = () => {};\n\n  constructor(config: UIContainerConfig) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <UIContainerConfig>{\n      cssClass: 'ui-uicontainer',\n      role: 'region',\n      ariaLabel: i18n.getLocalizer('player'),\n      hideDelay: 5000,\n      hideImmediatelyOnMouseLeave: false,\n    }, this.config);\n\n    this.playerStateChange = new EventDispatcher<UIContainer, PlayerUtils.PlayerState>();\n    this.hidingPrevented = () => false;\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    const config = this.getConfig();\n\n    if (config.userInteractionEventSource) {\n      this.userInteractionEventSource = new DOM(config.userInteractionEventSource);\n    } else {\n      this.userInteractionEventSource = this.getDomElement();\n    }\n\n    super.configure(player, uimanager);\n\n    this.configureUIShowHide(player, uimanager);\n    this.configurePlayerStates(player, uimanager);\n  }\n\n  private configureUIShowHide(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    let config = this.getConfig();\n\n    if (config.hideDelay === -1) {\n      uimanager.onConfigured.subscribe(() => uimanager.onControlsShow.dispatch(this));\n      return;\n    }\n\n    let isUiShown = false;\n    let isSeeking = false;\n    let isFirstTouch = true;\n    let playerState: PlayerUtils.PlayerState;\n\n    this.hidingPrevented = (): boolean => {\n      return config.hidePlayerStateExceptions && config.hidePlayerStateExceptions.indexOf(playerState) > -1;\n    };\n\n    this.showUi = () => {\n      if (!isUiShown) {\n        // Let subscribers know that they should reveal themselves\n        uimanager.onControlsShow.dispatch(this);\n        isUiShown = true;\n      }\n      // Don't trigger timeout while seeking (it will be triggered once the seek is finished) or casting\n      if (!isSeeking && !player.isCasting() && !this.hidingPrevented()) {\n        this.uiHideTimeout.start();\n      }\n    };\n\n    this.hideUi = () => {\n      // Hide the UI only if it is shown, and if not casting\n      if (isUiShown && !player.isCasting()) {\n        // Issue a preview event to check if we are good to hide the controls\n        let previewHideEventArgs = <CancelEventArgs>{};\n        uimanager.onPreviewControlsHide.dispatch(this, previewHideEventArgs);\n\n        if (!previewHideEventArgs.cancel) {\n          // If the preview wasn't canceled, let subscribers know that they should now hide themselves\n          uimanager.onControlsHide.dispatch(this);\n          isUiShown = false;\n        } else {\n          // If the hide preview was canceled, continue to show UI\n          this.showUi();\n        }\n      }\n    };\n\n    // Timeout to defer UI hiding by the configured delay time\n    this.uiHideTimeout = new Timeout(config.hideDelay, this.hideUi);\n\n    this.userInteractionEvents = [{\n      // On touch displays, the first touch reveals the UI\n      name: 'touchend',\n      handler: (e) => {\n        const shouldPreventDefault = ((e: Event): Boolean => {\n          const findButtonComponent = ((element: HTMLElementWithComponent): Button<ButtonConfig> | null => {\n            if (\n                !element\n                  || element === this.userInteractionEventSource.get(0)\n                  || element.component instanceof UIContainer\n            ) {\n              return null;\n            }\n\n            if (element.component && element.component instanceof Button) {\n              return element.component;\n            } else {\n              return findButtonComponent(element.parentElement);\n            }\n          });\n\n          const buttonComponent = findButtonComponent(e.target as HTMLElementWithComponent);\n          return !(buttonComponent && buttonComponent.getConfig().acceptsTouchWithUiHidden);\n        });\n\n        if (!isUiShown) {\n          // Only if the UI is hidden, we prevent other actions (except for the first touch) and reveal the UI\n          // instead. The first touch is not prevented to let other listeners receive the event and trigger an\n          // initial action, e.g. the huge playback button can directly start playback instead of requiring a double\n          // tap which 1. reveals the UI and 2. starts playback.\n          if (isFirstTouch && !player.isPlaying()) {\n            isFirstTouch = false;\n          } else {\n            // On touch input devices, the first touch is expected to display the UI controls and not be propagated to\n            // other components.\n            // When buttons are always visible this causes UX problems, as the first touch is not recognized.\n            // This is the case for the {@link AdSkipButton} and {@link AdClickOverlay}.\n            // To prevent UX issues where the buttons need to be touched twice, we do not prevent the first touch event.\n            if (shouldPreventDefault(e)) {\n              e.preventDefault();\n            }\n          }\n          this.showUi();\n        }\n      },\n    }, {\n      // When the mouse enters, we show the UI\n      name: 'mouseenter',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      // When the mouse moves within, we show the UI\n      name: 'mousemove',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      name: 'focusin',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      name: 'keydown',\n      handler: () => {\n        this.showUi();\n      },\n    }, {\n      // When the mouse leaves, we can prepare to hide the UI, except a seek is going on\n      name: 'mouseleave',\n      handler: () => {\n        // When a seek is going on, the seek scrub pointer may exit the UI area while still seeking, and we do not\n        // hide the UI in such cases\n        if (!isSeeking && !this.hidingPrevented()) {\n          if (this.config.hideImmediatelyOnMouseLeave) {\n            this.hideUi();\n          } else {\n            this.uiHideTimeout.start();\n          }\n        }\n      },\n    }];\n\n    this.userInteractionEvents.forEach((event) => this.userInteractionEventSource.on(event.name, event.handler));\n\n    uimanager.onSeek.subscribe(() => {\n      this.uiHideTimeout.clear(); // Don't hide UI while a seek is in progress\n      isSeeking = true;\n    });\n    uimanager.onSeeked.subscribe(() => {\n      isSeeking = false;\n      if (!this.hidingPrevented()) {\n        this.uiHideTimeout.start(); // Re-enable UI hide timeout after a seek\n      }\n    });\n    uimanager.onComponentViewModeChanged.subscribe((_, { mode }) => this.trackComponentViewMode(mode));\n    player.on(player.exports.PlayerEvent.CastStarted, () => {\n      this.showUi(); // Show UI when a Cast session has started (UI will then stay permanently on during the session)\n    });\n    this.playerStateChange.subscribe((_, state) => {\n      playerState = state;\n      if (this.hidingPrevented()) {\n        // Entering a player state that prevents hiding and forces the controls to be shown\n        this.uiHideTimeout.clear();\n        this.showUi();\n      } else {\n        // Entering a player state that allows hiding\n        this.uiHideTimeout.start();\n      }\n    });\n  }\n\n  private configurePlayerStates(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    let container = this.getDomElement();\n\n    // Convert player states into CSS class names\n    let stateClassNames = <any>[];\n    for (let state in PlayerUtils.PlayerState) {\n      if (isNaN(Number(state))) {\n        let enumName = PlayerUtils.PlayerState[<any>PlayerUtils.PlayerState[state]];\n        stateClassNames[PlayerUtils.PlayerState[state]] =\n          this.prefixCss(UIContainer.STATE_PREFIX + enumName.toLowerCase());\n      }\n    }\n\n    let removeStates = () => {\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Idle]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Prepared]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Playing]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Paused]);\n      container.removeClass(stateClassNames[PlayerUtils.PlayerState.Finished]);\n    };\n\n    const updateState = (state: PlayerUtils.PlayerState) => {\n      removeStates();\n      container.addClass(stateClassNames[state]);\n      this.playerStateChange.dispatch(this, state);\n    };\n\n    player.on(player.exports.PlayerEvent.SourceLoaded, () => {\n      updateState(PlayerUtils.PlayerState.Prepared);\n    });\n    player.on(player.exports.PlayerEvent.Play, () => {\n      updateState(PlayerUtils.PlayerState.Playing);\n    });\n    player.on(player.exports.PlayerEvent.Playing, () => {\n      updateState(PlayerUtils.PlayerState.Playing);\n    });\n    player.on(player.exports.PlayerEvent.Paused, () => {\n      updateState(PlayerUtils.PlayerState.Paused);\n    });\n    player.on(player.exports.PlayerEvent.PlaybackFinished, () => {\n      updateState(PlayerUtils.PlayerState.Finished);\n    });\n    player.on(player.exports.PlayerEvent.SourceUnloaded, () => {\n      updateState(PlayerUtils.PlayerState.Idle);\n    });\n    uimanager.getConfig().events.onUpdated.subscribe(() => {\n      updateState(PlayerUtils.getState(player));\n    });\n\n    // Fullscreen marker class\n    player.on(player.exports.PlayerEvent.ViewModeChanged, () => {\n      if (player.getViewMode() === player.exports.ViewMode.Fullscreen) {\n        container.addClass(this.prefixCss(UIContainer.FULLSCREEN));\n      } else {\n        container.removeClass(this.prefixCss(UIContainer.FULLSCREEN));\n      }\n    });\n    // Init fullscreen state\n    if (player.getViewMode() === player.exports.ViewMode.Fullscreen) {\n      container.addClass(this.prefixCss(UIContainer.FULLSCREEN));\n    }\n\n    // Buffering marker class\n    player.on(player.exports.PlayerEvent.StallStarted, () => {\n      container.addClass(this.prefixCss(UIContainer.BUFFERING));\n    });\n    player.on(player.exports.PlayerEvent.StallEnded, () => {\n      container.removeClass(this.prefixCss(UIContainer.BUFFERING));\n    });\n    // Init buffering state\n    if (player.isStalled()) {\n      container.addClass(this.prefixCss(UIContainer.BUFFERING));\n    }\n\n    // RemoteControl marker class\n    player.on(player.exports.PlayerEvent.CastStarted, () => {\n      container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));\n    });\n    player.on(player.exports.PlayerEvent.CastStopped, () => {\n      container.removeClass(this.prefixCss(UIContainer.REMOTE_CONTROL));\n    });\n    // Init RemoteControl state\n    if (player.isCasting()) {\n      container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));\n    }\n\n    // Controls visibility marker class\n    uimanager.onControlsShow.subscribe(() => {\n      container.removeClass(this.prefixCss(UIContainer.CONTROLS_HIDDEN));\n      container.addClass(this.prefixCss(UIContainer.CONTROLS_SHOWN));\n    });\n    uimanager.onControlsHide.subscribe(() => {\n      container.removeClass(this.prefixCss(UIContainer.CONTROLS_SHOWN));\n      container.addClass(this.prefixCss(UIContainer.CONTROLS_HIDDEN));\n    });\n\n    // Layout size classes\n    let updateLayoutSizeClasses = (width: number, height: number) => {\n      container.removeClass(this.prefixCss('layout-max-width-400'));\n      container.removeClass(this.prefixCss('layout-max-width-600'));\n      container.removeClass(this.prefixCss('layout-max-width-800'));\n      container.removeClass(this.prefixCss('layout-max-width-1200'));\n\n      if (width <= 400) {\n        container.addClass(this.prefixCss('layout-max-width-400'));\n      } else if (width <= 600) {\n        container.addClass(this.prefixCss('layout-max-width-600'));\n      } else if (width <= 800) {\n        container.addClass(this.prefixCss('layout-max-width-800'));\n      } else if (width <= 1200) {\n        container.addClass(this.prefixCss('layout-max-width-1200'));\n      }\n    };\n    player.on(player.exports.PlayerEvent.PlayerResized, (e: PlayerResizedEvent) => {\n      // Convert strings (with \"px\" suffix) to ints\n      let width = Math.round(Number(e.width.substring(0, e.width.length - 2)));\n      let height = Math.round(Number(e.height.substring(0, e.height.length - 2)));\n\n      updateLayoutSizeClasses(width, height);\n    });\n    // Init layout state\n    updateLayoutSizeClasses(new DOM(player.getContainer()).width(), new DOM(player.getContainer()).height());\n  }\n\n  release(): void {\n    // Explicitly unsubscribe user interaction event handlers because they could be attached to an external element\n    // that isn't owned by the UI and therefore not removed on release.\n    if (this.userInteractionEvents) {\n      this.userInteractionEvents.forEach((event) => this.userInteractionEventSource.off(event.name, event.handler));\n    }\n\n    super.release();\n\n    if (this.uiHideTimeout) {\n      this.uiHideTimeout.clear();\n    }\n  }\n\n  onPlayerStateChange(): UiEvent<UIContainer, PlayerUtils.PlayerState> {\n    return this.playerStateChange.getEvent();\n  }\n\n  protected suspendHideTimeout() {\n    this.uiHideTimeout.suspend();\n  }\n\n  protected resumeHideTimeout() {\n    this.uiHideTimeout.resume(!this.hidingPrevented());\n  }\n\n  protected toDomElement(): DOM {\n    let container = super.toDomElement();\n\n    // Detect flexbox support (not supported in IE9)\n    if (document && typeof document.createElement('p').style.flex !== 'undefined') {\n      container.addClass(this.prefixCss('flexbox'));\n    } else {\n      container.addClass(this.prefixCss('no-flexbox'));\n    }\n\n    return container;\n  }\n}\n","import {SelectBox} from './selectbox';\nimport {ListSelectorConfig} from './listselector';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A select box providing a selection between 'auto' and the available video qualities.\n *\n * @category Components\n */\nexport class VideoQualitySelectBox extends SelectBox {\n\n  private hasAuto: boolean;\n\n  constructor(config: ListSelectorConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClasses: ['ui-videoqualityselectbox'],\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let selectCurrentVideoQuality = () => {\n      this.selectItem(player.getVideoQuality().id);\n    };\n\n    let updateVideoQualities = () => {\n      let videoQualities = player.getAvailableVideoQualities();\n\n      this.clearItems();\n\n      // Progressive streams do not support automatic quality selection\n      this.hasAuto = player.getStreamType() !== 'progressive';\n\n      if (this.hasAuto) {\n        // Add entry for automatic quality switching (default setting)\n        this.addItem('auto', i18n.getLocalizer('auto'));\n      }\n\n      // Add video qualities\n      for (let videoQuality of videoQualities) {\n        this.addItem(videoQuality.id, videoQuality.label);\n      }\n\n      // Select initial quality\n      selectCurrentVideoQuality();\n    };\n\n    this.onItemSelected.subscribe((sender: VideoQualitySelectBox, value: string) => {\n      player.setVideoQuality(value);\n    });\n\n    // Update qualities when source goes away\n    player.on(player.exports.PlayerEvent.SourceUnloaded, updateVideoQualities);\n    // Update qualities when the period within a source changes\n    player.on(player.exports.PlayerEvent.PeriodSwitched, updateVideoQualities);\n    // Update quality selection when quality is changed (from outside)\n    player.on(player.exports.PlayerEvent.VideoQualityChanged, selectCurrentVideoQuality);\n\n    if ((player.exports.PlayerEvent as any).VideoQualityAdded) {\n      // Update qualities when their availability changed\n      // TODO: remove any cast after next player release\n      player.on((player.exports.PlayerEvent as any).VideoQualityAdded, updateVideoQualities);\n      player.on((player.exports.PlayerEvent as any).VideoQualityRemoved, updateVideoQualities);\n    }\n\n    uimanager.getConfig().events.onUpdated.subscribe(updateVideoQualities);\n  }\n\n  /**\n   * Returns true if the select box contains an 'auto' item for automatic quality selection mode.\n   * @return {boolean}\n   */\n  hasAutoItem(): boolean {\n    return this.hasAuto;\n  }\n}","import {Container, ContainerConfig} from './container';\nimport {VolumeSlider} from './volumeslider';\nimport {VolumeToggleButton} from './volumetogglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport {Timeout} from '../timeout';\nimport { PlayerAPI } from 'bitmovin-player';\n\n/**\n * Configuration interface for a {@link VolumeControlButton}.\n *\n * @category Configs\n */\nexport interface VolumeControlButtonConfig extends ContainerConfig {\n  /**\n   * The delay after which the volume slider will be hidden when there is no user interaction.\n   * Care must be taken that the delay is long enough so users can reach the slider from the toggle button, e.g. by\n   * mouse movement. If the delay is too short, the sliders disappears before the mouse pointer has reached it and\n   * the user is not able to use it.\n   * Default: 500ms\n   */\n  hideDelay?: number;\n  /**\n   * Specifies if the volume slider should be vertically or horizontally aligned.\n   * Default: true\n   */\n  vertical?: boolean;\n}\n\n/**\n * A composite volume control that consists of and internally manages a volume control button that can be used\n * for muting, and a (depending on the CSS style, e.g. slide-out) volume control bar.\n *\n * @category Buttons\n */\nexport class VolumeControlButton extends Container<VolumeControlButtonConfig> {\n\n  private volumeToggleButton: VolumeToggleButton;\n  private volumeSlider: VolumeSlider;\n\n  private volumeSliderHideTimeout: Timeout;\n\n  constructor(config: VolumeControlButtonConfig = {}) {\n    super(config);\n\n    this.volumeToggleButton = new VolumeToggleButton();\n    this.volumeSlider = new VolumeSlider({\n      vertical: config.vertical != null ? config.vertical : true,\n      hidden: true,\n    });\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-volumecontrolbutton',\n      components: [this.volumeToggleButton, this.volumeSlider],\n      hideDelay: 500,\n    }, <VolumeControlButtonConfig>this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let volumeToggleButton = this.getVolumeToggleButton();\n    let volumeSlider = this.getVolumeSlider();\n\n    this.volumeSliderHideTimeout = new Timeout(this.getConfig().hideDelay, () => {\n      volumeSlider.hide();\n    });\n\n    /*\n     * Volume Slider visibility handling\n     *\n     * The volume slider shall be visible while the user hovers the mute toggle button, while the user hovers the\n     * volume slider, and while the user slides the volume slider. If none of these situations are true, the slider\n     * shall disappear.\n     */\n    let volumeSliderHovered = false;\n    volumeToggleButton.getDomElement().on('mouseenter', () => {\n      // Show volume slider when mouse enters the button area\n      if (volumeSlider.isHidden()) {\n        volumeSlider.show();\n      }\n      // Avoid hiding of the slider when button is hovered\n      this.volumeSliderHideTimeout.clear();\n    });\n    volumeToggleButton.getDomElement().on('mouseleave', () => {\n      // Hide slider delayed when button is left\n      this.volumeSliderHideTimeout.reset();\n    });\n    volumeSlider.getDomElement().on('mouseenter', () => {\n      // When the slider is entered, cancel the hide timeout activated by leaving the button\n      this.volumeSliderHideTimeout.clear();\n      volumeSliderHovered = true;\n    });\n    volumeSlider.getDomElement().on('mouseleave', () => {\n      // When mouse leaves the slider, only hide it if there is no slide operation in progress\n      if (volumeSlider.isSeeking()) {\n        this.volumeSliderHideTimeout.clear();\n      } else {\n        this.volumeSliderHideTimeout.reset();\n      }\n      volumeSliderHovered = false;\n    });\n    volumeSlider.onSeeked.subscribe(() => {\n      // When a slide operation is done and the slider not hovered (mouse outside slider), hide slider delayed\n      if (!volumeSliderHovered) {\n        this.volumeSliderHideTimeout.reset();\n      }\n    });\n  }\n\n  release(): void {\n    super.release();\n    this.volumeSliderHideTimeout.clear();\n  }\n\n  /**\n   * Provides access to the internally managed volume toggle button.\n   * @returns {VolumeToggleButton}\n   */\n  getVolumeToggleButton(): VolumeToggleButton {\n    return this.volumeToggleButton;\n  }\n\n  /**\n   * Provides access to the internally managed volume silder.\n   * @returns {VolumeSlider}\n   */\n  getVolumeSlider(): VolumeSlider {\n    return this.volumeSlider;\n  }\n}","import { SeekBar, SeekBarConfig, SeekPreviewEventArgs } from './seekbar';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { VolumeTransition } from '../volumecontroller';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for the {@link VolumeSlider} component.\n *\n * @category Configs\n */\nexport interface VolumeSliderConfig extends SeekBarConfig {\n  /**\n   * Specifies if the volume slider should be automatically hidden when volume control is prohibited by the\n   * browser or platform. This currently only applies to iOS.\n   * Default: true\n   */\n  hideIfVolumeControlProhibited?: boolean;\n}\n\n/**\n * A simple volume slider component to adjust the player's volume setting.\n *\n * @category Components\n */\nexport class VolumeSlider extends SeekBar {\n  private volumeTransition: VolumeTransition;\n\n  constructor(config: VolumeSliderConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, <VolumeSliderConfig>{\n      cssClass: 'ui-volumeslider',\n      hideIfVolumeControlProhibited: true,\n      ariaLabel: i18n.getLocalizer('settings.audio.volume'),\n      tabIndex: 0,\n    }, this.config);\n  }\n\n  private setVolumeAriaSliderValues(value: number) {\n    this.getDomElement().attr('aria-valuenow', Math.ceil(value).toString());\n    this.getDomElement().attr('aria-valuetext', `${i18n.performLocalization(i18n.getLocalizer('seekBar.value'))}: ${Math.ceil(value)}`);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager, false);\n\n    this.setAriaSliderMinMax('0', '100');\n\n    let config = <VolumeSliderConfig>this.getConfig();\n\n    const volumeController = uimanager.getConfig().volumeController;\n\n    if (config.hideIfVolumeControlProhibited && !this.detectVolumeControlAvailability()) {\n      this.hide();\n\n      // We can just return from here, because the user will never interact with the control and any configured\n      // functionality would only eat resources for no reason.\n      return;\n    }\n\n    volumeController.onChanged.subscribe((_, args) => {\n      if (args.muted) {\n        this.setVolumeAriaSliderValues(0);\n        this.setPlaybackPosition(0);\n      } else {\n        this.setPlaybackPosition(args.volume);\n        this.setVolumeAriaSliderValues(args.volume);\n      }\n    });\n\n    this.onSeek.subscribe(() => {\n      this.volumeTransition = volumeController.startTransition();\n    });\n\n    this.onSeekPreview.subscribeRateLimited(this.updateVolumeWhileScrubbing, 50);\n    this.onSeeked.subscribe((sender, percentage) => {\n      if (this.volumeTransition) {\n        this.volumeTransition.finish(percentage);\n      }\n    });\n\n    // Update the volume slider marker when the player resized, a source is loaded,\n    // or the UI is configured. Check the seekbar for a detailed description.\n    player.on(player.exports.PlayerEvent.PlayerResized, () => {\n      this.refreshPlaybackPosition();\n    });\n    uimanager.onConfigured.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n\n    uimanager.getConfig().events.onUpdated.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n\n    uimanager.onComponentShow.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n    uimanager.onComponentHide.subscribe(() => {\n      this.refreshPlaybackPosition();\n    });\n\n    // Init volume bar\n    volumeController.onChangedEvent();\n  }\n\n  private updateVolumeWhileScrubbing = (sender: VolumeSlider, args: SeekPreviewEventArgs) => {\n    if (args.scrubbing && this.volumeTransition) {\n      this.volumeTransition.update(args.position);\n    }\n  };\n\n  private detectVolumeControlAvailability(): boolean {\n    /*\n     * \"On iOS devices, the audio level is always under the user’s physical control. The volume property is not\n     * settable in JavaScript. Reading the volume property always returns 1.\"\n     * https://developer.apple.com/library/content/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n     */\n    // as muted autoplay gets paused as soon as we unmute it, we may not touch the volume of the actual player so we\n    // probe a dummy audio element\n    const dummyVideoElement = document.createElement('video');\n    // try setting the volume to 0.7 and if it's still 1 we are on a volume control restricted device\n    dummyVideoElement.volume = 0.7;\n    return dummyVideoElement.volume !== 1;\n  }\n\n  release(): void {\n    super.release();\n\n    this.onSeekPreview.unsubscribe(this.updateVolumeWhileScrubbing);\n  }\n}\n","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport { UIInstanceManager } from '../uimanager';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles audio muting.\n *\n * @category Buttons\n */\nexport class VolumeToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    const defaultConfig: ToggleButtonConfig = {\n      cssClass: 'ui-volumetogglebutton',\n      text: i18n.getLocalizer('settings.audio.mute'),\n      onClass: 'muted',\n      offClass: 'unmuted',\n      ariaLabel: i18n.getLocalizer('settings.audio.mute'),\n    };\n\n    this.config = this.mergeConfig(config, defaultConfig, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    const volumeController = uimanager.getConfig().volumeController;\n\n    volumeController.onChanged.subscribe((_, args) => {\n      if (args.muted) {\n        this.on();\n      } else {\n        this.off();\n      }\n\n      const volumeLevelTens = Math.ceil(args.volume / 10);\n      this.getDomElement().data(this.prefixCss('volume-level-tens'), String(volumeLevelTens));\n    });\n\n    this.onClick.subscribe(() => {\n      volumeController.toggleMuted();\n    });\n\n    // Startup init\n    volumeController.onChangedEvent();\n  }\n}","import {ToggleButton, ToggleButtonConfig} from './togglebutton';\nimport {UIInstanceManager} from '../uimanager';\nimport { PlayerAPI, PlayerEventBase, WarningEvent } from 'bitmovin-player';\nimport { i18n } from '../localization/i18n';\n\n/**\n * A button that toggles the video view between normal/mono and VR/stereo.\n *\n * @category Buttons\n */\nexport class VRToggleButton extends ToggleButton<ToggleButtonConfig> {\n\n  constructor(config: ToggleButtonConfig = {}) {\n    super(config);\n\n    this.config = this.mergeConfig(config, {\n      cssClass: 'ui-vrtogglebutton',\n      text: i18n.getLocalizer('vr'),\n    }, this.config);\n  }\n\n  configure(player: PlayerAPI, uimanager: UIInstanceManager): void {\n    super.configure(player, uimanager);\n\n    let isVRConfigured = () => {\n      // VR availability cannot be checked through getVRStatus() because it is asynchronously populated and not\n      // available at UI initialization. As an alternative, we check the VR settings in the config.\n      // TODO use getVRStatus() through isVRStereoAvailable() once the player has been rewritten and the status is\n      // available in Ready\n      const source = player.getSource();\n      return source && Boolean(source.vr);\n    };\n\n    let isVRStereoAvailable = () => {\n      const source = player.getSource();\n      return player.vr && Boolean(source.vr);\n    };\n\n    let vrStateHandler = (ev: PlayerEventBase) => {\n      if (ev.type === player.exports.PlayerEvent.Warning\n        && (ev as WarningEvent).code !== player.exports.WarningCode.VR_RENDERING_ERROR) {\n        return;\n      }\n\n      if (isVRConfigured() && isVRStereoAvailable()) {\n        this.show(); // show button in case it is hidden\n\n        if (player.vr && player.vr.getStereo()) {\n          this.on();\n        } else {\n          this.off();\n        }\n      } else {\n        this.hide(); // hide button if no stereo mode available\n      }\n    };\n\n    let vrButtonVisibilityHandler = () => {\n      if (isVRConfigured()) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    player.on(player.exports.PlayerEvent.VRStereoChanged, vrStateHandler);\n    player.on(player.exports.PlayerEvent.Warning, vrStateHandler);\n    // Hide button when VR source goes away\n    player.on(player.exports.PlayerEvent.SourceUnloaded, vrButtonVisibilityHandler);\n    uimanager.getConfig().events.onUpdated.subscribe(vrButtonVisibilityHandler);\n\n    this.onClick.subscribe(() => {\n      if (!isVRStereoAvailable()) {\n        if (console) {\n          console.log('No VR content');\n        }\n      } else {\n        if (player.vr && player.vr.getStereo()) {\n          player.vr.setStereo(false);\n        } else {\n          player.vr.setStereo(true);\n        }\n      }\n    });\n\n    // Set startup visibility\n    vrButtonVisibilityHandler();\n  }\n}","import {ClickOverlay, ClickOverlayConfig} from './clickoverlay';\nimport { i18n } from '../localization/i18n';\n\n/**\n * Configuration interface for a {@link ClickOverlay}.\n *\n * @category Configs\n */\nexport interface WatermarkConfig extends ClickOverlayConfig {\n  // nothing yet\n}\n\n/**\n * A watermark overlay with a clickable logo.\n *\n * @category Components\n */\nexport class Watermark extends ClickOverlay {\n\n  constructor(config: WatermarkConfig = {}) {\n    super(config);\n\n    /* this.config = this.mergeConfig(config, {\n      cssClass: 'ui-watermark',\n      url: 'http://bitmovin.com',\n      role: 'link',\n      text: 'logo',\n      ariaLabel: i18n.getLocalizer('watermarkLink'),\n    }, <WatermarkConfig>this.config); */\n  }\n}\n","import {VRToggleButton} from './components/vrtogglebutton';\nimport {SettingsToggleButton} from './components/settingstogglebutton';\nimport {VolumeSlider} from './components/volumeslider';\nimport {PlaybackTimeLabel, PlaybackTimeLabelMode} from './components/playbacktimelabel';\nimport {AirPlayToggleButton} from './components/airplaytogglebutton';\nimport {ErrorMessageOverlay} from './components/errormessageoverlay';\nimport {ControlBar} from './components/controlbar';\nimport {CastToggleButton} from './components/casttogglebutton';\nimport {FullscreenToggleButton} from './components/fullscreentogglebutton';\nimport {RecommendationOverlay} from './components/recommendationoverlay';\nimport {PlaybackSpeedSelectBox} from './components/playbackspeedselectbox';\nimport {AudioQualitySelectBox} from './components/audioqualityselectbox';\nimport {CastStatusOverlay} from './components/caststatusoverlay';\nimport {UIContainer} from './components/uicontainer';\nimport {Watermark} from './components/watermark';\nimport {SubtitleOverlay} from './components/subtitleoverlay';\nimport {SettingsPanel} from './components/settingspanel';\nimport {SeekBarLabel} from './components/seekbarlabel';\nimport {PlaybackToggleOverlay} from './components/playbacktoggleoverlay';\nimport {PictureInPictureToggleButton} from './components/pictureinpicturetogglebutton';\nimport {Spacer} from './components/spacer';\nimport {Container} from './components/container';\nimport {VolumeToggleButton} from './components/volumetogglebutton';\nimport {PlaybackToggleButton} from './components/playbacktogglebutton';\nimport {SeekBar} from './components/seekbar';\nimport {VideoQualitySelectBox} from './components/videoqualityselectbox';\nimport {UIConditionContext, UIManager} from './uimanager';\nimport {TitleBar} from './components/titlebar';\nimport {BufferingOverlay} from './components/bufferingoverlay';\nimport {SubtitleListBox} from './components/subtitlelistbox';\nimport {AudioTrackListBox} from './components/audiotracklistbox';\nimport {SettingsPanelItem} from './components/settingspanelitem';\nimport {SettingsPanelPage} from './components/settingspanelpage';\nimport { UIFactory } from './uifactory';\nimport { UIConfig } from './uiconfig';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { QuickSeekButton } from './main';\n\nexport namespace DemoFactory {\n\n  export function buildDemoWithSeparateAudioSubtitlesButtons(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    // show smallScreen UI only on mobile/handheld devices\n    let smallScreenSwitchWidth = 600;\n\n    return new UIManager(player, [{\n      ui: UIFactory.modernSmallScreenAdsUI(),\n      condition: (context: UIConditionContext) => {\n        return context.isMobile && context.documentWidth < smallScreenSwitchWidth\n          && context.isAd && context.adRequiresUi;\n      },\n    }, {\n      ui: UIFactory.modernAdsUI(),\n      condition: (context: UIConditionContext) => {\n        return context.isAd && context.adRequiresUi;\n      },\n    }, {\n      ui: UIFactory.modernSmallScreenUI({ radioModeAvailable: false }),\n      condition: (context: UIConditionContext) => {\n        return context.isMobile && context.documentWidth < smallScreenSwitchWidth;\n      },\n    }, {\n      ui: modernUIWithSeparateAudioSubtitlesButtons(),\n    }], config);\n  }\n\n  function modernUIWithSeparateAudioSubtitlesButtons() {\n    let subtitleOverlay = new SubtitleOverlay();\n\n    let settingsPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [\n            new SettingsPanelItem('Video Quality', new VideoQualitySelectBox()),\n            new SettingsPanelItem('Speed', new PlaybackSpeedSelectBox()),\n            new SettingsPanelItem('Audio Quality', new AudioQualitySelectBox()),\n          ],\n        }),\n      ],\n      hidden: true,\n    });\n\n    let subtitleListBox = new SubtitleListBox();\n    let subtitleSettingsPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [\n            new SettingsPanelItem(null, subtitleListBox),\n          ],\n        }),\n      ],\n      hidden: true,\n    });\n\n    let audioTrackListBox = new AudioTrackListBox();\n    let audioTrackSettingsPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [\n            new SettingsPanelItem(null, audioTrackListBox),\n          ],\n        }),\n      ],\n      hidden: true,\n    });\n\n    let controlBar = new ControlBar({\n      components: [\n        audioTrackSettingsPanel,\n        subtitleSettingsPanel,\n        settingsPanel,\n        new Container({\n          components: [\n            new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),\n            new SeekBar({ label: new SeekBarLabel() }),\n            new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n        new Container({\n          components: [\n            new PlaybackToggleButton(),\n            new QuickSeekButton({ seekSeconds: -10 }),\n            new QuickSeekButton({ seekSeconds: 10 }),\n            new VolumeToggleButton(),\n            new VolumeSlider(),\n            new Spacer(),\n            new PictureInPictureToggleButton(),\n            new AirPlayToggleButton(),\n            new CastToggleButton(),\n            new VRToggleButton(),\n            new SettingsToggleButton({\n              settingsPanel: audioTrackSettingsPanel,\n              cssClass: 'ui-audiotracksettingstogglebutton',\n            }),\n            new SettingsToggleButton({\n              settingsPanel: subtitleSettingsPanel,\n              cssClass: 'ui-subtitlesettingstogglebutton',\n            }),\n            new SettingsToggleButton({ settingsPanel: settingsPanel }),\n            new FullscreenToggleButton(),\n          ],\n          cssClasses: ['controlbar-bottom'],\n        }),\n      ],\n    });\n\n    return new UIContainer({\n      components: [\n        subtitleOverlay,\n        new BufferingOverlay(),\n        new PlaybackToggleOverlay(),\n        new CastStatusOverlay(),\n        controlBar,\n        new TitleBar(),\n        new RecommendationOverlay(),\n        new ErrorMessageOverlay(),\n      ],\n    });\n  }\n}\n","import { Component, ComponentConfig } from './components/component';\n\nexport interface Offset {\n  left: number;\n  top: number;\n}\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface CssProperties {\n  [propertyName: string]: string;\n}\n\n/**\n * Extends the {@link HTMLElement} interface with a component attribute to store the associated component.\n */\nexport interface HTMLElementWithComponent extends HTMLElement {\n  component?: Component<ComponentConfig>;\n}\n\n/**\n * Simple DOM manipulation and DOM element event handling modeled after jQuery (as replacement for jQuery).\n *\n * Like jQuery, DOM operates on single elements and lists of elements. For example: creating an element returns a DOM\n * instance with a single element, selecting elements returns a DOM instance with zero, one, or many elements. Similar\n * to jQuery, setters usually affect all elements, while getters operate on only the first element.\n * Also similar to jQuery, most methods (except getters) return the DOM instance facilitating easy chaining of method\n * calls.\n *\n * Built with the help of: http://youmightnotneedjquery.com/\n */\nexport class DOM {\n\n  private document: Document;\n\n  /**\n   * The list of elements that the instance wraps. Take care that not all methods can operate on the whole list,\n   * getters usually just work on the first element.\n   */\n  private elements: HTMLElementWithComponent[];\n\n  /**\n   * Creates a DOM element.\n   * @param tagName the tag name of the DOM element\n   * @param attributes a list of attributes of the element\n   * @param component the {@link Component} the DOM element is associated with\n   */\n  constructor(tagName: string, attributes: {[name: string]: string}, component?: Component<ComponentConfig>);\n  /**\n   * Selects all elements from the DOM that match the specified selector.\n   * @param selector the selector to match DOM elements with\n   */\n  constructor(selector: string);\n  /**\n   * Wraps a plain HTMLElement with a DOM instance.\n   * @param element the HTMLElement to wrap with DOM\n   */\n  constructor(element: HTMLElement);\n  /**\n   * Wraps a list of plain HTMLElements with a DOM instance.\n   * @param elements the HTMLElements to wrap with DOM\n   */\n  constructor(elements: HTMLElement[]);\n  /**\n   * Wraps the document with a DOM instance. Useful to attach event listeners to the document.\n   * @param document the document to wrap\n   */\n  constructor(document: Document);\n  constructor(\n      something: string | HTMLElement | HTMLElement[] | Document,\n      attributes?: {[name: string]: string},\n      component?: Component<ComponentConfig>,\n  ) {\n    this.document = document; // Set the global document to the local document field\n\n    if (something instanceof Array) {\n      if (something.length > 0 && something[0] instanceof HTMLElement) {\n        let elements = something as HTMLElementWithComponent[];\n        this.elements = elements;\n      }\n    }\n    else if (something instanceof HTMLElement) {\n      let element = something as HTMLElementWithComponent;\n      this.elements = [element];\n    }\n    else if (something instanceof Document) {\n      // When a document is passed in, we do not do anything with it, but by setting this.elements to null\n      // we give the event handling method a means to detect if the events should be registered on the document\n      // instead of elements.\n      this.elements = null;\n    }\n    else if (attributes) {\n      let tagName = something;\n      let element = document.createElement(tagName) as HTMLElementWithComponent;\n\n      for (let attributeName in attributes) {\n        let attributeValue = attributes[attributeName];\n        if (attributeValue != null) {\n          element.setAttribute(attributeName, attributeValue);\n        }\n      }\n\n      if (component) {\n        element.component = component;\n      }\n\n      this.elements = [element];\n    }\n    else {\n      let selector = something;\n      this.elements = this.findChildElements(selector) as HTMLElementWithComponent[];\n    }\n  }\n\n  /**\n   * Gets the number of elements that this DOM instance currently holds.\n   * @returns {number} the number of elements\n   */\n  get length(): number {\n    return this.elements ? this.elements.length : 0;\n  }\n\n  /**\n   * Gets the HTML elements that this DOM instance currently holds.\n   * @returns {HTMLElement[]} the raw HTML elements\n   */\n  get(): HTMLElementWithComponent[];\n  /**\n   * Gets an HTML element from the list elements that this DOM instance currently holds.\n   * @param index The zero-based index into the element list. Can be negative to return an element from the end,\n   *    e.g. -1 returns the last element.\n   */\n  get(index: number): HTMLElementWithComponent;\n  get(index?: number): HTMLElementWithComponent | HTMLElementWithComponent[] {\n    if (index === undefined) {\n      return this.elements;\n    } else if (!this.elements || index >= this.elements.length || index < -this.elements.length) {\n      return undefined;\n    } else if (index < 0) {\n      return this.elements[this.elements.length - index];\n    } else {\n      return this.elements[index];\n    }\n  }\n\n  /**\n   * A shortcut method for iterating all elements. Shorts this.elements.forEach(...) to this.forEach(...).\n   * @param handler the handler to execute an operation on an element\n   */\n  private forEach(handler: (element: HTMLElement) => void): void {\n    if (!this.elements) {\n      return;\n    }\n    this.elements.forEach((element) => {\n      handler(element);\n    });\n  }\n\n  private findChildElementsOfElement(element: HTMLElement | Document, selector: string): HTMLElement[] {\n    let childElements = element.querySelectorAll(selector);\n\n    // Convert NodeList to Array\n    // https://toddmotto.com/a-comprehensive-dive-into-nodelists-arrays-converting-nodelists-and-understanding-the-dom/\n    return [].slice.call(childElements);\n  }\n\n  private findChildElements(selector: string): HTMLElement[] {\n    let allChildElements = <HTMLElement[]>[];\n\n    if (this.elements) {\n      this.forEach((element) => {\n        allChildElements = allChildElements.concat(this.findChildElementsOfElement(element, selector));\n      });\n    }\n    else {\n      return this.findChildElementsOfElement(document, selector);\n    }\n\n    return allChildElements;\n  }\n\n  /**\n   * Finds all child elements of all elements matching the supplied selector.\n   * @param selector the selector to match with child elements\n   * @returns {DOM} a new DOM instance representing all matched children\n   */\n  find(selector: string): DOM {\n    let allChildElements = this.findChildElements(selector) as HTMLElementWithComponent[];\n    return new DOM(allChildElements);\n  }\n\n  /**\n   * Focuses to the first input element\n   */\n  focusToFirstInput() {\n    const inputElements = this.findChildElements('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n    if (inputElements.length > 0) {\n      inputElements[0].focus();\n    }\n  }\n\n  /**\n   * Focuses to the first input element\n   */\n  scrollTo(x: number, y: number) {\n    this.elements[0].scrollTo(x, y);\n  }\n\n  /**\n   * Returns a string of the inner HTML content of the first element.\n   */\n  html(): string;\n  /**\n   * Sets the inner HTML content of all elements.\n   * @param content a string of plain text or HTML markup\n   */\n  html(content: string): DOM;\n  html(content?: string): string | DOM {\n    if (arguments.length > 0) {\n      return this.setHtml(content);\n    }\n    else {\n      return this.getHtml();\n    }\n  }\n\n  private getHtml(): string | null {\n    return this.elements[0].innerHTML;\n  }\n\n  private setHtml(content: string): DOM {\n    if (content === undefined || content == null) {\n      // Set to empty string to avoid innerHTML getting set to 'undefined' (all browsers) or 'null' (IE9)\n      content = '';\n    }\n\n    this.forEach((element) => {\n      element.innerHTML = content;\n    });\n\n    return this;\n  }\n\n  /**\n   * Clears the inner HTML of all elements (deletes all children).\n   * @returns {DOM}\n   */\n  empty(): DOM {\n    this.forEach((element) => {\n      element.innerHTML = '';\n    });\n    return this;\n  }\n\n  /**\n   * Returns the current value of the first form element, e.g. the selected value of a select box or the text if an\n   * input field.\n   * @returns {string} the value of a form element\n   */\n  val(): string {\n    let element = this.elements[0];\n\n    if (element instanceof HTMLSelectElement || element instanceof HTMLInputElement) {\n      return element.value;\n    }\n    else {\n      // TODO add support for missing form elements\n      throw new Error(`val() not supported for ${typeof element}`);\n    }\n  }\n\n  /**\n   * Returns the value of an attribute on the first element.\n   * @param attribute\n   */\n  attr(attribute: string): string | null;\n  /**\n   * Sets an attribute on all elements.\n   * @param attribute the name of the attribute\n   * @param value the value of the attribute\n   */\n  attr(attribute: string, value: string): DOM;\n  attr(attribute: string, value?: string): string | null | DOM {\n    if (arguments.length > 1) {\n      return this.setAttr(attribute, value);\n    }\n    else {\n      return this.getAttr(attribute);\n    }\n  }\n\n  /**\n   * Removes the attribute of the element.\n   * @param attribute\n   */\n  removeAttr(attribute: string) {\n    this.forEach((element) => {\n      element.removeAttribute(attribute);\n    });\n  }\n\n  private getAttr(attribute: string): string | null {\n    return this.elements[0].getAttribute(attribute);\n  }\n\n  private setAttr(attribute: string, value: string): DOM {\n    this.forEach((element) => {\n      element.setAttribute(attribute, value);\n    });\n    return this;\n  }\n\n  /**\n   * Returns the value of a data element on the first element.\n   * @param dataAttribute the name of the data attribute without the 'data-' prefix\n   */\n  data(dataAttribute: string): string | null;\n  /**\n   * Sets a data attribute on all elements.\n   * @param dataAttribute the name of the data attribute without the 'data-' prefix\n   * @param value the value of the data attribute\n   */\n  data(dataAttribute: string, value: string): DOM;\n  data(dataAttribute: string, value?: string): string | null | DOM {\n    if (arguments.length > 1) {\n      return this.setData(dataAttribute, value);\n    }\n    else {\n      return this.getData(dataAttribute);\n    }\n  }\n\n  private getData(dataAttribute: string): string | null {\n    return this.elements[0].getAttribute('data-' + dataAttribute);\n  }\n\n  private setData(dataAttribute: string, value: string): DOM {\n    this.forEach((element) => {\n      element.setAttribute('data-' + dataAttribute, value);\n    });\n    return this;\n  }\n\n  /**\n   * Appends one or more DOM elements as children to all elements.\n   * @param childElements the chrild elements to append\n   * @returns {DOM}\n   */\n  append(...childElements: DOM[]): DOM {\n    this.forEach((element) => {\n      childElements.forEach((childElement) => {\n        childElement.elements.forEach((_, index) => {\n          element.appendChild(childElement.elements[index]);\n        });\n      });\n    });\n    return this;\n  }\n\n  /**\n   * Removes all elements from the DOM.\n   */\n  remove(): void {\n    this.forEach((element) => {\n      let parent = element.parentNode;\n      if (parent) {\n        parent.removeChild(element);\n      }\n    });\n  }\n\n  /**\n   * Returns the offset of the first element from the document's top left corner.\n   * @returns {Offset}\n   */\n  offset(): Offset {\n    let element = this.elements[0];\n    let elementRect = element.getBoundingClientRect();\n    let htmlRect = document.body.parentElement.getBoundingClientRect();\n\n    // Virtual viewport scroll handling (e.g. pinch zoomed viewports in mobile browsers or desktop Chrome/Edge)\n    // 'normal' zooms and virtual viewport zooms (aka layout viewport) result in different\n    // element.getBoundingClientRect() results:\n    //  - with normal scrolls, the clientRect decreases with an increase in scroll(Top|Left)/page(X|Y)Offset\n    //  - with pinch zoom scrolls, the clientRect stays the same while scroll/pageOffset changes\n    // This means, that the combination of clientRect + scroll/pageOffset does not work to calculate the offset\n    // from the document's upper left origin when pinch zoom is used.\n    // To work around this issue, we do not use scroll/pageOffset but get the clientRect of the html element and\n    // subtract it from the element's rect, which always results in the offset from the document origin.\n    // NOTE: the current way of offset calculation was implemented specifically to track event positions on the\n    // seek bar, and it might break compatibility with jQuery's offset() method. If this ever turns out to be a\n    // problem, this method should be reverted to the old version and the offset calculation moved to the seek bar.\n\n    return {\n      top: elementRect.top - htmlRect.top,\n      left: elementRect.left - htmlRect.left,\n    };\n  }\n\n  /**\n   * Returns the width of the first element.\n   * @returns {number} the width of the first element\n   */\n  width(): number {\n    // TODO check if this is the same as jQuery's width() (probably not)\n    return this.elements[0].offsetWidth;\n  }\n\n  /**\n   * Returns the height of the first element.\n   * @returns {number} the height of the first element\n   */\n  height(): number {\n    // TODO check if this is the same as jQuery's height() (probably not)\n    return this.elements[0].offsetHeight;\n  }\n\n  /**\n   * Returns the size of the first element.\n   * @return {Size} the size of the first element\n   */\n  size(): Size {\n    return { width: this.width(), height: this.height() };\n  }\n\n  /**\n   * Attaches an event handler to one or more events on all elements.\n   * @param eventName the event name (or multiple names separated by space) to listen to\n   * @param eventHandler the event handler to call when the event fires\n   * @param options the options for this event handler\n   * @returns {DOM}\n   */\n  on(eventName: string, eventHandler: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): DOM {\n    let events = eventName.split(' ');\n\n    events.forEach((event) => {\n      if (this.elements == null) {\n        this.document.addEventListener(event, eventHandler, options);\n      }\n      else {\n        this.forEach((element) => {\n          element.addEventListener(event, eventHandler, options);\n        });\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Removes an event handler from one or more events on all elements.\n   * @param eventName the event name (or multiple names separated by space) to remove the handler from\n   * @param eventHandler the event handler to remove\n   * @param options the options for this event handler\n   * @returns {DOM}\n   */\n  off(eventName: string, eventHandler: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): DOM {\n    let events = eventName.split(' ');\n\n    events.forEach((event) => {\n      if (this.elements == null) {\n        this.document.removeEventListener(event, eventHandler, options);\n      }\n      else {\n        this.forEach((element) => {\n          element.removeEventListener(event, eventHandler, options);\n        });\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds the specified class(es) to all elements.\n   * @param className the class(es) to add, multiple classes separated by space\n   * @returns {DOM}\n   */\n  addClass(className: string): DOM {\n    this.forEach((element) => {\n      if (element.classList) {\n        const classNames = className.split(' ')\n          .filter(className => className.length > 0);\n\n        if (classNames.length > 0) {\n          element.classList.add(...classNames);\n        }\n      }\n      else {\n        element.className += ' ' + className;\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Removed the specified class(es) from all elements.\n   * @param className the class(es) to remove, multiple classes separated by space\n   * @returns {DOM}\n   */\n  removeClass(className: string): DOM {\n    this.forEach((element) => {\n      if (element.classList) {\n        const classNames = className.split(' ')\n          .filter(className => className.length > 0);\n\n        if (classNames.length > 0) {\n          element.classList.remove(...classNames);\n        }\n      }\n      else {\n        element.className = element.className.replace(\n          new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Checks if any of the elements has the specified class.\n   * @param className the class name to check\n   * @returns {boolean} true if one of the elements has the class attached, else if no element has it attached\n   */\n  hasClass(className: string): boolean {\n    let hasClass = false;\n\n    this.forEach((element) => {\n      if (element.classList) {\n        if (element.classList.contains(className)) {\n          // Since we are inside a handler, we can't just 'return true'. Instead, we save it to a variable\n          // and return it at the end of the function body.\n          hasClass = true;\n        }\n      }\n      else {\n        if (new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className)) {\n          // See comment above\n          hasClass = true;\n        }\n      }\n    });\n\n    return hasClass;\n  }\n\n  /**\n   * Returns the value of a CSS property of the first element.\n   * @param propertyName the name of the CSS property to retrieve the value of\n   */\n  css(propertyName: string): string | null;\n  /**\n   * Sets the value of a CSS property on all elements.\n   * @param propertyName the name of the CSS property to set the value for\n   * @param value the value to set for the given CSS property\n   */\n  css(propertyName: string, value: string): DOM;\n  /**\n   * Sets a collection of CSS properties and their values on all elements.\n   * @param propertyValueCollection an object containing pairs of property names and their values\n   */\n  css(propertyValueCollection: CssProperties): DOM;\n  css(propertyNameOrCollection: string | CssProperties, value?: string): string | null | DOM {\n    if (typeof propertyNameOrCollection === 'string') {\n      let propertyName = propertyNameOrCollection;\n\n      if (arguments.length === 2) {\n        return this.setCss(propertyName, value);\n      }\n      else {\n        return this.getCss(propertyName);\n      }\n    }\n    else {\n      let propertyValueCollection = propertyNameOrCollection;\n      return this.setCssCollection(propertyValueCollection);\n    }\n  }\n\n  /**\n   * Removes an inline CSS property if it exists\n   * @param propertyName name of the property to remove\n   * @param elementIndex index of the element whose CSS property should get removed\n   */\n  removeCss(propertyName: string, elementIndex = 0): string {\n    return this.elements[elementIndex].style.removeProperty(propertyName);\n  }\n\n  private getCss(propertyName: string): string | null {\n    return getComputedStyle(this.elements[0])[<any>propertyName];\n  }\n\n  private setCss(propertyName: string, value: string): DOM {\n    this.forEach((element) => {\n      // <any> cast to resolve TS7015: http://stackoverflow.com/a/36627114/370252\n      element.style[<any>propertyName] = value;\n    });\n    return this;\n  }\n\n  private setCssCollection(ruleValueCollection: {[ruleName: string]: string}): DOM {\n    this.forEach((element) => {\n      // http://stackoverflow.com/a/34490573/370252\n      Object.assign(element.style, ruleValueCollection);\n    });\n\n    return this;\n  }\n}\n","import {ErrorMessageMap, ErrorMessageTranslator} from './components/errormessageoverlay';\nimport { ErrorEvent } from 'bitmovin-player';\nimport { MobileV3PlayerErrorEvent, MobileV3SourceErrorEvent } from './mobilev3playerapi';\n\n/**\n * @category Utils\n */\nexport namespace ErrorUtils {\n\n  export const defaultErrorMessages: ErrorMessageMap = {\n    1000: 'Error is unknown',\n    1001: 'The player API is not available after a call to PlayerAPI.destroy.',\n    1100: 'General setup error',\n    1101: 'There was an error when inserting the HTML video element',\n    1102: 'No configuration was provided',\n    1103: 'The license is not valid',\n    1104: 'The the domain-locked player is not authorized to playback on this domain',\n    1105: 'The domain is not allowlisted',\n    1106: 'The license server URL is invalid',\n    1107: 'The impression server URL is invalid',\n    1108: 'Could not initialize a rendering engine',\n    1109: 'The used flash version does not support playback',\n    1110: 'Native Flash is not authorized by a valid Adobe token',\n    1111: 'Flash doesn\\'t have sufficient resources',\n    1112: 'Flash container API not available',\n    1113: 'Protocol not supported. This site has been loaded using \"file\" protocol, but unfortunately this is not supported. Please load the page using a web server (using http or https)',\n    1200: 'General source error',\n    1201: 'No valid source was provided',\n    1202: 'The downloaded manifest is invalid',\n    1203: 'There was no technology detected to playback the provided source',\n    1204: 'The stream type is not supported',\n    1205: 'The forced technology is not supported',\n    1206: 'No stream found for supported technologies.',\n    1207: 'The downloaded segment is empty',\n    1208: 'The manifest could not be loaded',\n    1209: 'Progressive stream type not supported or the stream has an error',\n    1210: 'HLS stream has an error',\n    1211: 'The encryption method is not supported',\n    1300: 'General playback error',\n    1301: 'Video decoder or demuxer had an error with the content',\n    1302: 'General error if Flash renderer has an error',\n    1303: 'Flash doesn\\'t have sufficient resources',\n    1304: 'The transmuxer could not be initialized',\n    1400: 'Network error while downloading',\n    1401: 'The manifest download timed out',\n    1402: 'The segment download timed out',\n    1403: 'The progressive stream download timed out',\n    1404: 'The Certificate could not be loaded',\n    2000: 'General DRM error',\n    2001: 'Required DRM configuration is missing',\n    2002: 'The licensing server URL is missing',\n    2003: 'License request failed',\n    2004: 'Key or KeyId is missing',\n    2005: 'Key size is not supported',\n    2006: 'Unable to instantiate a key system supporting the required combinations',\n    2007: 'Unable to create or initialize key session',\n    2008: 'The MediaKey object could not be created/initialized',\n    2009: 'Key error',\n    2010: 'The key system is not supported',\n    2011: 'The certificate is not valid',\n    2012: 'Invalid header key/value pair for PlayReady license request',\n    2013: 'Content cannot be played back because the output is restricted on this machine',\n    2014: 'DRM error for the Flash renderer',\n    2100: 'General VR error',\n    2101: 'Player technology not compatible with VR playback',\n    3000: 'General module error',\n    3001: 'The definition of the module is invalid (e.g. incomplete).',\n    3002: 'The module definition specifies dependencies but the module is not provided via a function for deferred loading.',\n    3003: 'A module cannot be loaded because it has not been added to the player core.',\n    3004: 'A module cannot be loaded because one or more dependencies are missing.',\n    3100: 'An Advertising module error has occurred. Refer to the attached AdvertisingError.',\n  };\n\n  export const defaultMobileV3ErrorMessageTranslator = (error: MobileV3PlayerErrorEvent | MobileV3SourceErrorEvent) => {\n    return error.message;\n  };\n\n  export const defaultWebErrorMessageTranslator: ErrorMessageTranslator = (error: ErrorEvent) => {\n    const errorMessage = ErrorUtils.defaultErrorMessages[error.code];\n\n    if (errorMessage) {\n      // Use the error message text if there is one\n      return `${errorMessage}\\n(${error.name})`; // default error message style\n    } else {\n      // Fallback to error code/name if no message is defined\n      return `${error.code} ${error.name}`;\n    }\n  };\n}\n","import {ArrayUtils} from './arrayutils';\nimport { Timeout } from './timeout';\n/**\n * Function interface for event listeners on the {@link EventDispatcher}.\n */\nexport interface EventListener<Sender, Args> {\n  (sender: Sender, args: Args): void;\n}\n\n/**\n * Empty type for creating {@link EventDispatcher event dispatchers} that do not carry any arguments.\n */\nexport interface NoArgs {\n}\n\n/**\n * Event args for an event that can be canceled.\n */\nexport interface CancelEventArgs extends NoArgs {\n  /**\n   * Gets or sets a flag whether the event should be canceled.\n   */\n  cancel?: boolean;\n}\n\n/**\n * Public interface that represents an event. Can be used to subscribe to and unsubscribe from events.\n */\nexport interface Event<Sender, Args> {\n  /**\n   * Subscribes an event listener to this event dispatcher.\n   * @param listener the listener to add\n   */\n  subscribe(listener: EventListener<Sender, Args>): void;\n\n  /**\n   * Subscribes an event listener to this event dispatcher that is only called once.\n   * @param listener the listener to add\n   */\n  subscribeOnce(listener: EventListener<Sender, Args>): void;\n\n  /**\n   * Subscribes an event listener to this event dispatcher that will be called at a limited rate with a minimum\n   * interval of the specified milliseconds.\n   * @param listener the listener to add\n   * @param rateMs the rate in milliseconds to which calling of the listeners should be limited\n   */\n  subscribeRateLimited(listener: EventListener<Sender, Args>, rateMs: number): void;\n\n  /**\n   * Unsubscribes a subscribed event listener from this dispatcher.\n   * @param listener the listener to remove\n   * @returns {boolean} true if the listener was successfully unsubscribed, false if it isn't subscribed on this\n   *   dispatcher\n   */\n  unsubscribe(listener: EventListener<Sender, Args>): boolean;\n}\n\n/**\n * Event dispatcher to subscribe and trigger events. Each event should have its own dispatcher.\n */\nexport class EventDispatcher<Sender, Args> implements Event<Sender, Args> {\n\n  private listeners: EventListenerWrapper<Sender, Args>[] = [];\n\n  constructor() {\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  subscribe(listener: EventListener<Sender, Args>) {\n    this.listeners.push(new EventListenerWrapper(listener));\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  subscribeOnce(listener: EventListener<Sender, Args>) {\n    this.listeners.push(new EventListenerWrapper(listener, true));\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  subscribeRateLimited(listener: EventListener<Sender, Args>, rateMs: number) {\n    this.listeners.push(new RateLimitedEventListenerWrapper(listener, rateMs));\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  unsubscribe(listener: EventListener<Sender, Args>): boolean {\n    // Iterate through listeners, compare with parameter, and remove if found\n    // NOTE: In case we ever remove all matching listeners instead of just the first, we need to reverse-iterate here\n    for (let i = 0; i < this.listeners.length; i++) {\n      let subscribedListener = this.listeners[i];\n      if (subscribedListener.listener === listener) {\n        subscribedListener.clear();\n        ArrayUtils.remove(this.listeners, subscribedListener);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all listeners from this dispatcher.\n   */\n  unsubscribeAll(): void {\n    // In case of RateLimitedEventListenerWrapper we need to make sure that the timeout callback won't be called\n    for (let listener of this.listeners) {\n      listener.clear();\n    }\n\n    this.listeners = [];\n  }\n\n  /**\n   * Dispatches an event to all subscribed listeners.\n   * @param sender the source of the event\n   * @param args the arguments for the event\n   */\n  dispatch(sender: Sender, args: Args = null) {\n    let listenersToRemove = [];\n\n    // Call every listener\n    // We iterate over a copy of the array of listeners to avoid the case where events are not fired on listeners when\n    // listeners are unsubscribed from within the event handlers during a dispatch (because the indices change and\n    // listeners are shifted within the array).\n    // This means that listener x+1 will still be called if unsubscribed from within the handler of listener x, as well\n    // as listener y+1 will not be called when subscribed from within the handler of listener y.\n    // Array.slice(0) is the fastest array copy method according to: https://stackoverflow.com/a/21514254/370252\n    const listeners = this.listeners.slice(0);\n    for (let listener of listeners) {\n      listener.fire(sender, args);\n\n      if (listener.isOnce()) {\n        listenersToRemove.push(listener);\n      }\n    }\n\n    // Remove one-time listener\n    for (let listenerToRemove of listenersToRemove) {\n      ArrayUtils.remove(this.listeners, listenerToRemove);\n    }\n  }\n\n  /**\n   * Returns the event that this dispatcher manages and on which listeners can subscribe and unsubscribe event handlers.\n   * @returns {Event}\n   */\n  getEvent(): Event<Sender, Args> {\n    // For now, just cast the event dispatcher to the event interface. At some point in the future when the\n    // codebase grows, it might make sense to split the dispatcher into separate dispatcher and event classes.\n    return <Event<Sender, Args>>this;\n  }\n}\n\n/**\n * A basic event listener wrapper to manage listeners within the {@link EventDispatcher}. This is a 'private' class\n * for internal dispatcher use and it is therefore not exported.\n */\nclass EventListenerWrapper<Sender, Args> {\n\n  private eventListener: EventListener<Sender, Args>;\n  private once: boolean;\n\n  constructor(listener: EventListener<Sender, Args>, once: boolean = false) {\n    this.eventListener = listener;\n    this.once = once;\n  }\n\n  /**\n   * Returns the wrapped event listener.\n   * @returns {EventListener<Sender, Args>}\n   */\n  get listener(): EventListener<Sender, Args> {\n    return this.eventListener;\n  }\n\n  /**\n   * Fires the wrapped event listener with the given arguments.\n   * @param sender\n   * @param args\n   */\n  fire(sender: Sender, args: Args) {\n    this.eventListener(sender, args);\n  }\n\n  /**\n   * Checks if this listener is scheduled to be called only once.\n   * @returns {boolean} once if true\n   */\n  isOnce(): boolean {\n    return this.once;\n  }\n\n  clear(): void {\n  }\n}\n\ninterface EventAttributes<Sender, Args> {\n  sender: Sender;\n  args: Args;\n}\n\n/**\n * Extends the basic {@link EventListenerWrapper} with rate-limiting functionality.\n */\nclass RateLimitedEventListenerWrapper<Sender, Args> extends EventListenerWrapper<Sender, Args> {\n\n  private readonly rateMs: number;\n  private readonly rateLimitingEventListener: EventListener<Sender, Args>;\n\n  // save last seen event attributes\n  private lastSeenEvent: EventAttributes<Sender, Args>;\n\n  private rateLimitTimout: Timeout;\n\n  constructor(listener: EventListener<Sender, Args>, rateMs: number) {\n    super(listener); // sets the event listener sink\n\n    this.rateMs = rateMs;\n\n    // starting limiting the events to the given value\n    const startRateLimiting = () => {\n      this.rateLimitTimout.start();\n    };\n\n    // timout for limiting the events\n    this.rateLimitTimout = new Timeout(this.rateMs, () => {\n      if (this.lastSeenEvent) {\n        this.fireSuper(this.lastSeenEvent.sender, this.lastSeenEvent.args);\n        startRateLimiting(); // start rateLimiting again to keep rate limit active even after firing the last seen event\n        this.lastSeenEvent = null;\n      }\n    });\n\n    // In case the events stopping during the rateLimiting we need to track the last seen one and delegate after the\n    // rate limiting is finished. This prevents missing the last update due to the rate limit.\n    this.rateLimitingEventListener = (sender: Sender, args: Args) => {\n      // only fire events if the rateLimiting is not running\n      if (this.shouldFireEvent()) {\n        this.fireSuper(sender, args);\n        startRateLimiting();\n        return;\n      }\n\n      this.lastSeenEvent = {\n        sender: sender,\n        args: args,\n      };\n    };\n  }\n\n  private shouldFireEvent(): boolean {\n    return !this.rateLimitTimout.isActive();\n  }\n\n  private fireSuper(sender: Sender, args: Args) {\n    // Fire the actual external event listener\n    super.fire(sender, args);\n  }\n\n  fire(sender: Sender, args: Args) {\n    // Fire the internal rate-limiting listener instead of the external event listener\n    this.rateLimitingEventListener(sender, args);\n  }\n\n  clear(): void {\n    super.clear();\n    this.rateLimitTimout.clear();\n  }\n}\n","const FocusVisibleCssClassName = '{{PREFIX}}-focus-visible';\n\nexport class FocusVisibilityTracker {\n  private readonly eventHandlerMap: { [eventName: string]: EventListenerOrEventListenerObject };\n  private lastInteractionWasKeyboard: boolean = true;\n\n  constructor(private bitmovinUiPrefix: string) {\n    this.eventHandlerMap = {\n      mousedown: this.onMouseOrPointerOrTouch,\n      pointerdown: this.onMouseOrPointerOrTouch,\n      touchstart: this.onMouseOrPointerOrTouch,\n      keydown: this.onKeyDown,\n      focus: this.onFocus,\n      blur: this.onBlur,\n    };\n    this.registerEventListeners();\n  }\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.metaKey || e.altKey || e.ctrlKey) {\n      return;\n    }\n\n    this.lastInteractionWasKeyboard = true;\n  };\n\n  private onMouseOrPointerOrTouch = () => (this.lastInteractionWasKeyboard = false);\n\n  private onFocus = ({ target: element }: FocusEvent) => {\n    if (\n      this.lastInteractionWasKeyboard &&\n      isHtmlElement(element) &&\n      isBitmovinUi(element, this.bitmovinUiPrefix) &&\n      !element.classList.contains(FocusVisibleCssClassName)\n    ) {\n      element.classList.add(FocusVisibleCssClassName);\n    }\n  };\n\n  private onBlur = ({ target: element }: FocusEvent) => {\n    if (isHtmlElement(element)) {\n      element.classList.remove(FocusVisibleCssClassName);\n    }\n  };\n\n  private registerEventListeners(): void {\n    for (const event in this.eventHandlerMap) {\n      document.addEventListener(event, this.eventHandlerMap[event], true);\n    }\n  }\n\n  private unregisterEventListeners(): void {\n    for (const event in this.eventHandlerMap) {\n      document.removeEventListener(event, this.eventHandlerMap[event], true);\n    }\n  }\n\n  public release(): void {\n    this.unregisterEventListeners();\n  }\n}\n\nfunction isBitmovinUi(element: Element, bitmovinUiPrefix: string): boolean {\n  return element.id.indexOf(bitmovinUiPrefix) === 0;\n}\n\nfunction isHtmlElement(element: unknown): element is HTMLElement & { classList: DOMTokenList } {\n  return (\n    element instanceof HTMLElement && element.classList instanceof DOMTokenList\n  );\n}\n","import { PlayerAPI } from 'bitmovin-player';\n/**\n * The Group Playback API offers control over synchronized playback of a group of clients, e.g. for Apple SharePlay\n * sessions.\n\n * Note: The API currently only covers the immediate needs of the iOS SDK in combination with our UI which is regarding\n * temporarily suspending synchronization of the player from the group. But it is open to be extended as needed in the\n * future.\n */\n\n/**\n * Reason for suspending the synchronization with the group.\n */\nexport enum GroupPlaybackSuspensionReason {\n  UserIsScrubbing = 'userIsScrubbing',\n}\n\n/**\n * A representation of a temporary break in participation.\n */\nexport interface GroupPlaybackSuspension {\n  /**\n   * The reason for the suspension.\n   */\n  reason: GroupPlaybackSuspensionReason;\n\n  /**\n   * A unique identifier.\n   */\n  id: string;\n}\n\n/**\n * Options to be considered upon ending a suspension.\n */\ninterface EndGroupPlaybackSuspensionOptions {\n  /**\n   * A proposed time for the group to seek to.\n   */\n  proposedPlaybackTime?: number;\n}\n\n/**\n * Group Playback API offering control over the player's participation in synchronized playback of a group of clients.\n * For example, an Apple SharePlay session.\n */\ninterface GroupPlaybackAPI {\n  /**\n   * Begins a new suspension.\n   *\n   * Temporarily suspends the local player's synchronization with the group. While suspended, any local playback control\n   * action (e.g. play, pause, seek) will not be forwarded to the group and any action originating from another group\n   * participant will not be performed on the local player.\n   *\n   * @remarks\n   * It is possible for multiple suspensions to exist exist simultaneously with different suspension reasons. The player\n   * will re-synchronize with the group once all existing suspensions have ended.\n   *\n   * @param reason - The reason for the suspension.\n   * @returns A suspension object.\n   */\n  beginSuspension(reason: GroupPlaybackSuspensionReason): GroupPlaybackSuspension;\n\n  /**\n   * Ends the given suspension.\n   *\n   * @param suspension - The suspension to be ended.\n   * @param options - Optional. Options to be considered when ending the suspension, e.g. a proposed seek time for the group.\n   */\n  endSuspension(suspension: GroupPlaybackSuspension, options?: EndGroupPlaybackSuspensionOptions): void;\n\n  /**\n   * Whether the player is currently participating in a group playback session.\n   */\n  hasJoined(): boolean;\n\n  /**\n   * Whether the player is currently suspending synchronization with the group.\n   * Can only return true if `hasJoined()` also is true.\n   */\n  isSuspended(): boolean;\n}\n\n\nexport interface ExtendedPlayerAPI extends PlayerAPI {\n  /**\n   * Group Playback API\n   *\n   * @remarks\n   * This API is optional as not every platform supports group playback.\n   */\n  groupPlayback?: GroupPlaybackAPI;\n}\n","export namespace Guid {\n\n  let guid = 1;\n\n  export function next() {\n    return guid++;\n  }\n}\n","import {DOM} from './dom';\n\nexport interface ImageLoadedCallback {\n  (url: string, width: number, height: number): void;\n}\n\ninterface ImageLoaderState {\n  url: string;\n  image: DOM;\n  loadedCallback: ImageLoadedCallback;\n  loaded: boolean;\n  width: number;\n  height: number;\n}\n\n/**\n * Tracks the loading state of images.\n */\nexport class ImageLoader {\n\n  private state: { [url: string]: ImageLoaderState; } = {};\n\n  /**\n   * Loads an image and call the callback once the image is loaded. If the image is already loaded, the callback\n   * is called immediately, else it is called once loading has finished. Calling this method multiple times for the\n   * same image while it is loading calls only let callback passed into the last call.\n   * @param url The url to the image to load\n   * @param loadedCallback The callback that is called when the image is loaded\n   */\n  load(url: string, loadedCallback: ImageLoadedCallback): void {\n    if (!this.state[url]) {\n      // When the image was never attempted to be loaded before, we create a state and store it in the state map\n      // for later use when the same image is requested to be loaded again.\n      let state: ImageLoaderState = {\n        url: url,\n        image: new DOM('img', {}),\n        loadedCallback: loadedCallback,\n        loaded: false,\n        width: 0,\n        height: 0,\n      };\n      this.state[url] = state;\n\n      // Listen to the load event, update the state and call the callback once the image is loaded\n      state.image.on('load', (e) => {\n        state.loaded = true;\n        state.width = (<HTMLImageElement>state.image.get(0)).width;\n        state.height = (<HTMLImageElement>state.image.get(0)).height;\n\n        this.callLoadedCallback(state);\n      });\n\n      // Set the image URL to start the loading\n      state.image.attr('src', state.url);\n    } else {\n      // We have a state for the requested image, so it is either already loaded or currently loading\n      let state = this.state[url];\n\n      // We overwrite the callback to make sure that only the callback of the latest call gets executed.\n      // Earlier callbacks become invalid once a new load call arrives, and they are not called as long as the image\n      // is not loaded.\n      state.loadedCallback = loadedCallback;\n\n      // When the image is already loaded, we directly execute the callback instead of waiting for the load event\n      if (state.loaded) {\n        this.callLoadedCallback(state);\n      }\n    }\n  }\n\n  private callLoadedCallback(state: ImageLoaderState): void {\n    state.loadedCallback(state.url, state.width, state.height);\n  }\n}\n","import vocabularyDe from './languages/de.json';\nimport vocabularyEn from './languages/en.json';\nimport vocabularyEs from './languages/es.json';\nimport vocabularyNl from './languages/nl.json';\n\nimport { LocalizationConfig } from '../uimanager.js';\n\nexport const defaultVocabularies: Vocabularies = {\n  'en': vocabularyEn,\n  'de': vocabularyDe,\n  'es': vocabularyEs,\n  'nl': vocabularyNl,\n};\n\nconst defaultLocalizationConfig: LocalizationConfig = {\n  language: 'en',\n  vocabularies: defaultVocabularies,\n};\n\n/**\n * @category Localization\n */\nexport type Localizer = () => string;\n/**\n * @category Localization\n */\nexport type LocalizableText = string | Localizer;\n\n/**\n * @category Localization\n */\nexport interface Vocabulary {\n  'settings.video.quality': string;\n  'settings.audio.quality': string;\n  'settings.audio.track': string;\n  'settings.audio.mute': string;\n  'settings.audio.volume': string;\n  'settings.subtitles': string;\n  'settings.subtitles.font.color': string;\n  'settings.subtitles.font.opacity': string;\n  'settings.subtitles.background.color': string;\n  'settings.subtitles.background.opacity': string;\n  'settings.subtitles.font.size': string;\n  'settings.subtitles.characterEdge': string;\n  'settings.subtitles.characterEdge.raised': string;\n  'settings.subtitles.characterEdge.depressed': string;\n  'settings.subtitles.characterEdge.uniform': string;\n  'settings.subtitles.characterEdge.dropshadowed': string;\n  'settings.subtitles.font.family': string;\n  'settings.subtitles.font.family.monospacedserif': string;\n  'settings.subtitles.font.family.proportionalserif': string;\n  'settings.subtitles.font.family.monospacedsansserif': string;\n  'settings.subtitles.font.family.proportionalsansserif': string;\n  'settings.subtitles.font.family.casual': string;\n  'settings.subtitles.font.family.cursive': string;\n  'settings.subtitles.font.family.smallcapital': string;\n  'settings.subtitles.window.color': string;\n  'settings.subtitles.window.opacity': string;\n  'play': string;\n  'settings.time.hours': string;\n  'settings.time.minutes': string;\n  'settings.time.seconds': string;\n  'colors.white': string;\n  'colors.black': string;\n  'colors.red': string;\n  'colors.green': string;\n  'colors.blue': string;\n  'colors.cyan': string;\n  'colors.yellow': string;\n  'colors.magenta': string;\n  'percent': string;\n  'settings': string;\n  'ads.remainingTime': string;\n  'pictureInPicture': string;\n  'appleAirplay': string;\n  'googleCast': string;\n  'vr': string;\n  'off': string;\n  'auto': string;\n  'back': string;\n  'reset': string;\n  'replay': string;\n  'normal': string;\n  'default': string;\n  'open': string;\n  'close': string;\n  'fullscreen': string;\n  'speed': string;\n  'playPause': string;\n  'live': string;\n  'subtitle.example': string;\n  'subtitle.select': string;\n  'playingOn': string;\n  'connectingTo': string;\n  'watermarkLink': string;\n  'controlBar': string;\n  'player': string;\n  'seekBar': string;\n  'seekBar.value': string;\n  'seekBar.timeshift': string;\n  'seekBar.durationText': string;\n  'ecoMode': string;\n  'ecoMode.title': string;\n}\n\n/**\n * @category Localization\n */\nexport type CustomVocabulary<V> = V & Partial<Vocabulary>;\n\n/**\n * @category Localization\n */\nexport interface Vocabularies {\n  [key: string]: CustomVocabulary<Record<string, string>>;\n}\n\n/**\n * @category Localization\n */\nexport class I18n {\n  private language: string;\n  private vocabulary: CustomVocabulary<Record<string, string>>;\n\n  constructor(config: LocalizationConfig) {\n    this.setConfig(config);\n  }\n\n  public setConfig(config: LocalizationConfig) {\n    const mergedConfig = { ...defaultLocalizationConfig, ...config };\n    const detectBrowserLanguage = mergedConfig.language === 'auto';\n    const vocabularies = this.mergeVocabulariesWithDefaultVocabularies(mergedConfig.vocabularies);\n    this.initializeLanguage(mergedConfig.language, detectBrowserLanguage, vocabularies);\n    this.initializeVocabulary(vocabularies);\n  }\n\n  private static containsLanguage(vocabularies: Vocabularies, language: string) {\n    return vocabularies.hasOwnProperty(language);\n  }\n\n  private mergeVocabulariesWithDefaultVocabularies(vocabularies: Vocabularies = {}) {\n    const rawVocabularies: Vocabularies = { ...defaultVocabularies, ...vocabularies };\n    return Object.keys(rawVocabularies).reduce((mergedVocabularies, language) => {\n      let vocabulary = rawVocabularies[language];\n      if (I18n.containsLanguage(defaultVocabularies, language) && I18n.containsLanguage(vocabularies, language)) {\n        vocabulary = { ...defaultVocabularies[language], ...vocabularies[language] };\n      }\n      return { ...mergedVocabularies, [language]: vocabulary };\n    }, {});\n  }\n\n  private initializeLanguage(\n    language: string,\n    browserLanguageDetectionEnabled: boolean,\n    vocabularies: Vocabularies,\n  ) {\n    if (browserLanguageDetectionEnabled) {\n      const userLanguage = window.navigator.language;\n\n      if (I18n.containsLanguage(vocabularies, userLanguage)) {\n        this.language = userLanguage;\n        return;\n      }\n      const shortenedUserLanguage = userLanguage.slice(0, 2);\n      if (I18n.containsLanguage(vocabularies, shortenedUserLanguage)) {\n        this.language = shortenedUserLanguage;\n        return;\n      }\n    }\n\n    this.language = language;\n  }\n\n  private initializeVocabulary(vocabularies: Vocabularies) {\n    this.vocabulary = ['en', this.language]\n      .reduce((vocab, lang) => ({ ...vocab, ...(vocabularies[lang] || {}) }), {});\n  }\n\n  private replaceVariableWithPlaceholderIfExists(text: string, config: any) {\n    const matches = text.match(new RegExp('{[a-zA-Z0-9]+}', 'g'));\n    if (matches.length === 0) {\n      return text;\n    }\n\n    return matches\n      .map((m: string) => ({ match: m, key: m.slice(1, -1) }))\n      .reduce((str, { key, match }) => config.hasOwnProperty(key) ? str.replace(match, config[key]) : str, text);\n  }\n\n  public getLocalizer<V extends CustomVocabulary<Record<string, string>> = CustomVocabulary<Record<string, string>>>(\n    key: keyof V,\n    config?: Record<string, string | number>,\n  ): Localizer {\n    return () => {\n      if (key == null) { // because sometimes we call toDomElement() without configuring the component or setting text...\n        return undefined;\n      }\n      let vocabularyString = this.vocabulary[key as string];\n\n      if (vocabularyString == null) {\n        vocabularyString = key as string;\n      }\n\n      if (config != null) {\n        vocabularyString = this.replaceVariableWithPlaceholderIfExists(vocabularyString, config);\n      }\n\n      return vocabularyString;\n    };\n  }\n\n  public performLocalization(text: LocalizableText) {\n    return typeof text === 'function' ? text() : text;\n  }\n}\n\n/**\n * @category Localization\n */\nexport const i18n = new I18n(defaultLocalizationConfig);\n","module.exports={\n  \"settings.video.quality\": \"Videoqualität\",\n  \"settings.audio.quality\": \"Audioqualität\",\n  \"settings.audio.track\": \"Audiospur\",\n  \"speed\": \"Geschwindigkeit\",\n  \"play\": \"Abspielen\",\n  \"pause\": \"Pause\",\n  \"playPause\": \"Abspielen/Pause\",\n  \"open\": \"öffnen\",\n  \"close\": \"Schließen\",\n  \"settings.audio.mute\": \"Stummschaltung\",\n  \"settings.audio.volume\": \"Lautstärke\",\n  \"pictureInPicture\": \"Bild im Bild\",\n  \"appleAirplay\": \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\": \"VR\",\n  \"settings\": \"Einstellungen\",\n  \"fullscreen\": \"Vollbild\",\n  \"off\": \"aus\",\n  \"settings.subtitles\": \"Untertitel\",\n  \"settings.subtitles.font.size\": \"Größe\",\n  \"settings.subtitles.font.family\": \"Schriftart\",\n  \"settings.subtitles.font.color\": \"Farbe\",\n  \"settings.subtitles.font.opacity\": \"Deckkraft\",\n  \"settings.subtitles.characterEdge\": \"Ränder\",\n  \"settings.subtitles.background.color\": \"Hintergrundfarbe\",\n  \"settings.subtitles.background.opacity\": \"Hintergrunddeckkraft\",\n  \"settings.subtitles.window.color\": \"Hintergrundfarbe\",\n  \"settings.subtitles.window.opacity\": \"Hintergrunddeckkraft\",\n  \"settings.time.hours\": \"Stunden\",\n  \"settings.time.minutes\": \"Minuten\",\n  \"settings.time.seconds\": \"Sekunden\",\n  \"back\": \"Zurück\",\n  \"reset\": \"Zurücksetzen\",\n  \"replay\": \"Wiederholen\",\n  \"ads.remainingTime\": \"Diese Anzeige endet in {remainingTime} Sekunden\",\n  \"default\": \"standard\",\n  \"colors.white\": \"weiß\",\n  \"colors.black\": \"schwarz\",\n  \"colors.red\": \"rot\",\n  \"colors.green\": \"grün\",\n  \"colors.blue\": \"blau\",\n  \"colors.yellow\": \"gelb\",\n  \"subtitle.example\": \"Beispiel Untertitel\",\n  \"subtitle.select\": \"Untertitel auswählen\",\n  \"playingOn\": \"Spielt auf <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Verbindung mit <strong>{castDeviceName}</strong> wird hergestellt...\",\n  \"watermarkLink\": \"Link zum Homepage\",\n  \"controlBar\": \"Videoplayer Kontrollen\",\n  \"player\": \"Video player\",\n  \"seekBar\": \"Video-Timeline\",\n  \"seekBar.value\": \"Wert\",\n  \"seekBar.timeshift\": \"Timeshift\",\n  \"seekBar.durationText\": \"aus\",\n  \"quickseek.forward\": \"Vor\",\n  \"quickseek.rewind\": \"Zurück\",\n  \"ecoMode\": \"ecoMode\",\n  \"ecoMode.title\":\"Eco Mode\"\n}\n","module.exports={\n  \"settings.video.quality\": \"Video Quality\",\n  \"settings.audio.quality\": \"Audio Quality\",\n  \"settings.audio.track\": \"Audio Track\",\n  \"settings.audio.mute\" : \"Mute\",\n  \"settings.audio.volume\" : \"Volume\",\n  \"settings.subtitles.window.color\" : \"Window color\",\n  \"settings.subtitles.window.opacity\" : \"Window opacity\",\n  \"settings.subtitles\" : \"Subtitles\",\n  \"settings.subtitles.font.color\" : \"Font color\",\n  \"settings.subtitles.font.opacity\" : \"Font opacity\",\n  \"settings.subtitles.background.color\" : \"Background color\",\n  \"settings.subtitles.background.opacity\": \"Background opacity\",\n  \"colors.white\": \"white\",\n  \"colors.black\": \"black\",\n  \"colors.red\": \"red\",\n  \"colors.green\": \"green\",\n  \"colors.blue\": \"blue\",\n  \"colors.cyan\": \"cyan\",\n  \"colors.yellow\": \"yellow\",\n  \"colors.magenta\": \"magenta\",\n  \"percent\": \"{value}%\",\n  \"settings.subtitles.font.size\": \"Font size\",\n  \"settings.subtitles.characterEdge\": \"Character edge\",\n  \"settings.subtitles.characterEdge.raised\": \"raised\",\n  \"settings.subtitles.characterEdge.depressed\": \"depressed\",\n  \"settings.subtitles.characterEdge.uniform\": \"uniform\",\n  \"settings.subtitles.characterEdge.dropshadowed\": \"drop shadowed\",\n  \"settings.subtitles.font.family\": \"Font family\",\n  \"settings.subtitles.font.family.monospacedserif\": \"monospaced serif\",\n  \"settings.subtitles.font.family.proportionalserif\": \"proportional serif\",\n  \"settings.subtitles.font.family.monospacedsansserif\": \"monospaced sans serif\",\n  \"settings.subtitles.font.family.proportionalsansserif\": \"proportional sans serif\",\n  \"settings.subtitles.font.family.casual\": \"casual\",\n  \"settings.subtitles.font.family.cursive\": \"cursive\",\n  \"settings.subtitles.font.family.smallcapital\": \"small capital\",\n  \"settings.time.hours\": \"Hours\",\n  \"settings.time.minutes\": \"Minutes\",\n  \"settings.time.seconds\": \"Seconds\",\n  \"ads.remainingTime\": \"This ad will end in {remainingTime} seconds.\",\n  \"settings\": \"Settings\",\n  \"fullscreen\" : \"Fullscreen\",\n  \"speed\": \"Speed\",\n  \"playPause\" : \"Play/Pause\",\n  \"play\": \"Play\",\n  \"pause\": \"Pause\",\n  \"open\": \"open\",\n  \"close\": \"Close\",\n  \"pictureInPicture\": \"Picture-in-Picture\",\n  \"appleAirplay\" : \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\" : \"VR\",\n  \"off\": \"off\",\n  \"auto\": \"auto\",\n  \"ecoMode\": \"ecoMode\",\n  \"ecoMode.title\":\"Eco Mode\",\n  \"back\" : \"Back\",\n  \"reset\": \"Reset\",\n  \"replay\": \"Replay\",\n  \"normal\": \"normal\",\n  \"default\": \"default\",\n  \"live\": \"Live\",\n  \"subtitle.example\": \"example subtitle\",\n  \"subtitle.select\": \"Select subtitle\",\n  \"playingOn\": \"Playing on <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Connecting to <strong>{castDeviceName}</strong>...\",\n  \"watermarkLink\": \"Link to Homepage\",\n  \"controlBar\": \"Video player controls\",\n  \"player\": \"Video player\",\n  \"seekBar\": \"Video timeline\",\n  \"seekBar.value\": \"Value\",\n  \"seekBar.timeshift\": \"Timeshift\",\n  \"seekBar.durationText\": \"out of\",\n  \"quickseek.forward\": \"Fast Forward\",\n  \"quickseek.rewind\": \"Rewind\"\n}\n","module.exports={\n  \"settings.video.quality\": \"Calidad de Video\",\n  \"settings.audio.quality\": \"Calidad de Audio\",\n  \"settings.audio.track\": \"Pista de Audio\",\n  \"settings.audio.mute\" : \"Silencio\",\n  \"settings.audio.volume\" : \"Volumen\",\n  \"settings.subtitles.window.color\" : \"color de Ventana\",\n  \"settings.subtitles.window.opacity\" : \"opacidad de Ventana\",\n  \"settings.subtitles\" : \"Subtítulos\",\n  \"settings.subtitles.font.color\" : \"color de Fuente\",\n  \"settings.subtitles.font.opacity\" : \"opacidad de Fuente\",\n  \"settings.subtitles.background.color\" : \"color de Fondo\",\n  \"settings.subtitles.background.opacity\": \"opacidad de Fondo\",\n  \"colors.white\": \"blanco\",\n  \"colors.black\": \"negro\",\n  \"colors.red\": \"rojo\",\n  \"colors.green\": \"verde\",\n  \"colors.blue\": \"azul\",\n  \"colors.cyan\": \"cian\",\n  \"colors.yellow\": \"amarillo\",\n  \"colors.magenta\": \"magenta\",\n  \"percent\": \"{value}%\",\n  \"settings.subtitles.font.size\": \"tamaño de Fuente\",\n  \"settings.subtitles.characterEdge\": \"borde del Caracter\",\n  \"settings.subtitles.characterEdge.raised\": \"alzado\",\n  \"settings.subtitles.characterEdge.depressed\": \"discreto\",\n  \"settings.subtitles.characterEdge.uniform\": \"uniforme\",\n  \"settings.subtitles.characterEdge.dropshadowed\": \"sombreado\",\n  \"settings.subtitles.font.family\": \"tipo de Fuente\",\n  \"settings.subtitles.font.family.monospacedserif\": \"monospaced serif\",\n  \"settings.subtitles.font.family.proportionalserif\": \"proportional serif\",\n  \"settings.subtitles.font.family.monospacedsansserif\": \"monospaced sans serif\",\n  \"settings.subtitles.font.family.proportionalsansserif\": \"proportional sans serif\",\n  \"settings.subtitles.font.family.casual\": \"casual\",\n  \"settings.subtitles.font.family.cursive\": \"cursiva\",\n  \"settings.subtitles.font.family.smallcapital\": \"small capital\",\n  \"settings.time.hours\": \"Horas\",\n  \"settings.time.minutes\": \"Minutos\",\n  \"settings.time.seconds\": \"Segundos\",\n  \"ads.remainingTime\": \"Este anuncio acabará en {remainingTime} segundos.\",\n  \"settings\": \"Configuración\",\n  \"fullscreen\" : \"Pantalla Completa\",\n  \"speed\": \"Velocidad\",\n  \"playPause\" : \"Reproducir/Pausa\",\n  \"play\": \"Reproducir\",\n  \"pause\": \"Pausa\",\n  \"open\": \"Abrir\",\n  \"close\": \"Cerrar\",\n  \"pictureInPicture\": \"Imagen en Imagen\",\n  \"appleAirplay\" : \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\" : \"VR\",\n  \"off\": \"off\",\n  \"auto\": \"auto\",\n  \"ecoMode\": \"ecoMode\",\n  \"ecoMode.title\": \"Eco Mode\",\n  \"back\" : \"Atrás\",\n  \"reset\": \"Reiniciar\",\n  \"replay\": \"Rebobinar\",\n  \"normal\": \"normal\",\n  \"default\": \"predeterminado\",\n  \"live\": \"Directo\",\n  \"subtitle.example\": \"Ejemplo de Subtítulo\",\n  \"subtitle.select\": \"Seleccionar subtítulo\",\n  \"playingOn\": \"Reproduciendo en <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Conectando a <strong>{castDeviceName}</strong>...\",\n  \"watermarkLink\": \"Enlace al inicio\",\n  \"controlBar\": \"Controles del Reproductor\",\n  \"player\": \"Reproductor de Video\",\n  \"seekBar\": \"Línea de Tiempo\",\n  \"seekBar.value\": \"posición\",\n  \"seekBar.timeshift\": \"cambio de posición\",\n  \"seekBar.durationText\": \"de\",\n  \"quickseek.forward\": \"Adelantar\",\n  \"quickseek.rewind\": \"Rebobinar\"\n}","module.exports={\n  \"settings.video.quality\": \"Videokwaliteit\",\n  \"settings.audio.quality\": \"Audiokwaliteit\",\n  \"settings.audio.track\": \"Audiospoor\",\n  \"settings.audio.mute\": \"Dempen\",\n  \"settings.audio.volume\": \"Volume\",\n  \"settings.subtitles.window.color\": \"Vensterkleur\",\n  \"settings.subtitles.window.opacity\": \"Venster doorzichtigheid\",\n  \"settings.subtitles\": \"Ondertiteling\",\n  \"settings.subtitles.font.color\": \"Lettertype kleur\",\n  \"settings.subtitles.font.opacity\": \"Lettertype doorzichtigheid\",\n  \"settings.subtitles.background.color\": \"Achtergrondkleur\",\n  \"settings.subtitles.background.opacity\": \"Achtergrond doorzichtigheid\",\n  \"colors.white\": \"wit\",\n  \"colors.black\": \"zwart\",\n  \"colors.red\": \"rood\",\n  \"colors.green\": \"groen\",\n  \"colors.blue\": \"blauw\",\n  \"colors.cyan\": \"cyaan\",\n  \"colors.yellow\": \"geel\",\n  \"colors.magenta\": \"magenta\",\n  \"percent\": \"{value}%\",\n  \"settings.subtitles.font.size\": \"Lettertype grootte\",\n  \"settings.subtitles.characterEdge\": \"Lettertype rand\",\n  \"settings.subtitles.characterEdge.raised\": \"verhoogd\",\n  \"settings.subtitles.characterEdge.depressed\": \"verlaagd\",\n  \"settings.subtitles.characterEdge.uniform\": \"uniform\",\n  \"settings.subtitles.characterEdge.dropshadowed\": \"schaduw\",\n  \"settings.subtitles.font.family\": \"Standaard lettertype\",\n  \"settings.subtitles.font.family.monospacedserif\": \"monospace serif\",\n  \"settings.subtitles.font.family.proportionalserif\": \"proportioneel serif\",\n  \"settings.subtitles.font.family.monospacedsansserif\": \"monospace sans-serif\",\n  \"settings.subtitles.font.family.proportionalsansserif\": \"proportioneel sans-serif\",\n  \"settings.subtitles.font.family.casual\": \"casual\",\n  \"settings.subtitles.font.family.cursive\": \"cursief\",\n  \"settings.subtitles.font.family.smallcapital\": \"kleine hoofdletters\",\n  \"settings.time.hours\": \"Uren\",\n  \"settings.time.minutes\": \"Minuten\",\n  \"settings.time.seconds\": \"Seconden\",\n  \"ads.remainingTime\": \"Deze advertentie eindigt in {remainingTime} seconden.\",\n  \"settings\": \"Instellingen\",\n  \"fullscreen\": \"Volledig scherm\",\n  \"speed\": \"Snelheid\",\n  \"playPause\": \"Afspelen/Pauzeren\",\n  \"play\": \"Afspelen\",\n  \"pause\": \"Pauzeren\",\n  \"open\": \"Openen\",\n  \"close\": \"Sluiten\",\n  \"pictureInPicture\": \"Picture-in-Picture\",\n  \"appleAirplay\": \"Apple AirPlay\",\n  \"googleCast\": \"Google Cast\",\n  \"vr\": \"VR\",\n  \"off\": \"uit\",\n  \"auto\": \"automatisch\",\n  \"ecoMode\": \"Eco-modus\",\n  \"ecoMode.title\": \"Eco-modus\",\n  \"back\": \"Terug\",\n  \"reset\": \"Reset\",\n  \"replay\": \"Opnieuw afspelen\",\n  \"normal\": \"normaal\",\n  \"default\": \"standaard\",\n  \"live\": \"Live\",\n  \"subtitle.example\": \"voorbeeld ondertiteling\",\n  \"subtitle.select\": \"Selecteer ondertiteling\",\n  \"playingOn\": \"Speelt af op <strong>{castDeviceName}</strong>\",\n  \"connectingTo\": \"Verbinden met <strong>{castDeviceName}</strong>...\",\n  \"watermarkLink\": \"Link naar homepage\",\n  \"controlBar\": \"Videospeler bediening\",\n  \"player\": \"Videospeler\",\n  \"seekBar\": \"Video tijdlijn\",\n  \"seekBar.value\": \"Waarde\",\n  \"seekBar.timeshift\": \"Tijdverschuiving\",\n  \"seekBar.durationText\": \"van\",\n  \"quickseek.forward\": \"Vooruitspoelen\",\n  \"quickseek.rewind\": \"Terugspoelen\"\n}","export const version: string = '{{VERSION}}';\n// Management\nexport * from './uimanager';\nexport * from './uiconfig';\n// Factories\nexport { UIFactory } from './uifactory';\nexport { DemoFactory } from './demofactory';\n// Utils\nexport { ArrayUtils } from './arrayutils';\nexport { StringUtils } from './stringutils';\nexport { PlayerUtils } from './playerutils';\nexport { UIUtils } from './uiutils';\nexport { BrowserUtils } from './browserutils';\nexport { StorageUtils } from './storageutils';\nexport { ErrorUtils } from './errorutils';\n// Localization\nexport { i18n, I18n, Vocabulary, Vocabularies, CustomVocabulary, LocalizableText, Localizer } from './localization/i18n';\n// Spatial Navigation\nexport { SpatialNavigation } from './spatialnavigation/spatialnavigation';\nexport { NavigationGroup } from './spatialnavigation/navigationgroup';\nexport { RootNavigationGroup } from './spatialnavigation/rootnavigationgroup';\nexport {\n  ListNavigationGroup,\n  ListOrientation,\n} from './spatialnavigation/ListNavigationGroup';\n// Components\nexport { Button, ButtonConfig } from './components/button';\nexport { ControlBar, ControlBarConfig } from './components/controlbar';\nexport { FullscreenToggleButton } from './components/fullscreentogglebutton';\nexport { HugePlaybackToggleButton } from './components/hugeplaybacktogglebutton';\nexport { PlaybackTimeLabel, PlaybackTimeLabelConfig, PlaybackTimeLabelMode } from './components/playbacktimelabel';\nexport { PlaybackToggleButton, PlaybackToggleButtonConfig } from './components/playbacktogglebutton';\nexport { SeekBar, SeekBarConfig, SeekPreviewEventArgs, SeekBarMarker } from './components/seekbar';\nexport { SelectBox } from './components/selectbox';\nexport { ItemSelectionList } from './components/itemselectionlist';\nexport { SettingsPanel, SettingsPanelConfig } from './components/settingspanel';\nexport { SettingsToggleButton, SettingsToggleButtonConfig } from './components/settingstogglebutton';\nexport { ToggleButton, ToggleButtonConfig } from './components/togglebutton';\nexport { VideoQualitySelectBox } from './components/videoqualityselectbox';\nexport { VolumeToggleButton } from './components/volumetogglebutton';\nexport { VRToggleButton } from './components/vrtogglebutton';\nexport { Watermark, WatermarkConfig } from './components/watermark';\nexport { UIContainer, UIContainerConfig } from './components/uicontainer';\nexport { Container, ContainerConfig } from './components/container';\nexport { Label, LabelConfig } from './components/label';\nexport { AudioQualitySelectBox } from './components/audioqualityselectbox';\nexport { AudioTrackSelectBox } from './components/audiotrackselectbox';\nexport { CastStatusOverlay } from './components/caststatusoverlay';\nexport { CastToggleButton } from './components/casttogglebutton';\nexport { Component, ComponentConfig, ComponentHoverChangedEventArgs } from './components/component';\nexport { ErrorMessageOverlay, ErrorMessageOverlayConfig, ErrorMessageTranslator, ErrorMessageMap } from './components/errormessageoverlay';\nexport { RecommendationOverlay } from './components/recommendationoverlay';\nexport { SeekBarLabel, SeekBarLabelConfig } from './components/seekbarlabel';\nexport { SubtitleOverlay } from './components/subtitleoverlay';\nexport { SubtitleSelectBox } from './components/subtitleselectbox';\nexport { TitleBar, TitleBarConfig } from './components/titlebar';\nexport { VolumeControlButton, VolumeControlButtonConfig } from './components/volumecontrolbutton';\nexport { ClickOverlay, ClickOverlayConfig } from './components/clickoverlay';\nexport { AdSkipButton, AdSkipButtonConfig } from './components/adskipbutton';\nexport { AdMessageLabel } from './components/admessagelabel';\nexport { AdClickOverlay } from './components/adclickoverlay';\nexport { PlaybackSpeedSelectBox } from './components/playbackspeedselectbox';\nexport { HugeReplayButton } from './components/hugereplaybutton';\nexport { BufferingOverlay, BufferingOverlayConfig } from './components/bufferingoverlay';\nexport { CastUIContainer } from './components/castuicontainer';\nexport { PlaybackToggleOverlay, PlaybackToggleOverlayConfig } from './components/playbacktoggleoverlay';\nexport { CloseButton, CloseButtonConfig } from './components/closebutton';\nexport { MetadataLabel, MetadataLabelContent, MetadataLabelConfig } from './components/metadatalabel';\nexport { AirPlayToggleButton } from './components/airplaytogglebutton';\nexport { VolumeSlider, VolumeSliderConfig } from './components/volumeslider';\nexport { PictureInPictureToggleButton } from './components/pictureinpicturetogglebutton';\nexport { Spacer } from './components/spacer';\nexport { BackgroundColorSelectBox } from './components/subtitlesettings/backgroundcolorselectbox';\nexport { BackgroundOpacitySelectBox } from './components/subtitlesettings/backgroundopacityselectbox';\nexport { CharacterEdgeSelectBox } from './components/subtitlesettings/characteredgeselectbox';\nexport { FontColorSelectBox } from './components/subtitlesettings/fontcolorselectbox';\nexport { FontFamilySelectBox } from './components/subtitlesettings/fontfamilyselectbox';\nexport { FontOpacitySelectBox } from './components/subtitlesettings/fontopacityselectbox';\nexport { FontSizeSelectBox } from './components/subtitlesettings/fontsizeselectbox';\nexport { SubtitleSettingSelectBox } from './components/subtitlesettings/subtitlesettingselectbox';\nexport { SubtitleSettingsLabel } from './components/subtitlesettings/subtitlesettingslabel';\nexport { WindowColorSelectBox } from './components/subtitlesettings/windowcolorselectbox';\nexport { WindowOpacitySelectBox } from './components/subtitlesettings/windowopacityselectbox';\nexport { SubtitleSettingsResetButton } from './components/subtitlesettings/subtitlesettingsresetbutton';\nexport { ListBox } from './components/listbox';\nexport { SubtitleListBox } from './components/subtitlelistbox';\nexport { AudioTrackListBox } from './components/audiotracklistbox';\nexport { SettingsPanelPage } from './components/settingspanelpage';\nexport { SettingsPanelPageBackButton } from './components/settingspanelpagebackbutton';\nexport { SettingsPanelPageOpenButton } from './components/settingspanelpageopenbutton';\nexport { SubtitleSettingsPanelPage, SubtitleSettingsPanelPageConfig } from './components/subtitlesettings/subtitlesettingspanelpage';\nexport { SettingsPanelItem } from './components/settingspanelitem';\nexport { ReplayButton } from './components/replaybutton';\nexport { QuickSeekButton, QuickSeekButtonConfig } from './components/quickseekbutton';\nexport { ListSelector, ListSelectorConfig, ListItem, ListItemFilter, ListItemLabelTranslator } from './components/listselector';\n\ndeclare global {\n  interface Window {\n    isRadioModeActive: boolean | null;\n    isRadioModeAvailable: boolean | null;\n    isQuanteecDisplayed:  boolean | null;\n  }\n}\n\nconst state = {\n  isRadioModeActive: null as boolean | null,\n  isRadioModeAvailable: null as boolean | null,\n  isQuanteecDisplayed: null as boolean | null,\n};\n\nif (typeof window.isRadioModeActive === 'undefined') {\n  Object.defineProperty(window, 'isRadioModeActive', {\n    get() {\n      return state.isRadioModeActive;\n    },\n    set(value) {\n      state.isRadioModeActive = value;\n      const event = new CustomEvent('isRadioModeActiveChange', {\n        detail: value,\n      });\n      window.dispatchEvent(event);\n    },\n  });\n}\n\nif (typeof window.isRadioModeAvailable === 'undefined') {\n  Object.defineProperty(window, 'isRadioModeAvailable', {\n    get() {\n      return state.isRadioModeAvailable;\n    },\n    set(value) {\n      state.isRadioModeAvailable = value;\n      const event = new CustomEvent('isRadioModeAvailableChange', {\n        detail: value,\n      });\n      window.dispatchEvent(event);\n    },\n  });\n}\n\nif (typeof window.isQuanteecDisplayed === 'undefined') {\n  Object.defineProperty(window, 'isQuanteecDisplayed', {\n    get() {\n      return state.isQuanteecDisplayed;\n    },\n    set(value) {\n      state.isQuanteecDisplayed = value;\n      const event = new CustomEvent('isQuanteecDisplayedChange', {\n        detail: value,\n      });\n      window.dispatchEvent(event);\n    },\n  });\n}\n\n// Object.assign polyfill for ES5/IE9\n// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  Object.assign = function (target: any) {\n    'use strict';\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (let index = 1; index < arguments.length; index++) {\n      let source = arguments[index];\n      if (source != null) {\n        for (let key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n}\n","import { PlayerAPI, PlayerEvent, PlayerEventBase, PlayerEventCallback } from 'bitmovin-player';\nimport { WrappedPlayer } from './uimanager';\n\nexport enum MobileV3PlayerEvent {\n  SourceError = 'sourceerror',\n  PlayerError = 'playererror',\n  PlaylistTransition = 'playlisttransition',\n}\n\nexport interface MobileV3PlayerErrorEvent extends PlayerEventBase {\n  code: number;\n  message: string;\n}\n\nexport interface MobileV3SourceErrorEvent extends PlayerEventBase {\n  code: number;\n  message: string;\n}\n\nexport type MobileV3PlayerEventType = PlayerEvent | MobileV3PlayerEvent;\n\nexport interface MobileV3PlayerAPI extends PlayerAPI {\n  on(eventType: MobileV3PlayerEventType, callback: PlayerEventCallback): void;\n  exports: PlayerAPI['exports'] & { PlayerEvent: MobileV3PlayerEventType };\n}\n\nexport function isMobileV3PlayerAPI(player: WrappedPlayer | PlayerAPI | MobileV3PlayerAPI): player is MobileV3PlayerAPI {\n  for (const key in MobileV3PlayerEvent) {\n    if (MobileV3PlayerEvent.hasOwnProperty(key) && !player.exports.PlayerEvent.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import {Event, EventDispatcher, NoArgs} from './eventdispatcher';\nimport {BrowserUtils} from './browserutils';\nimport { UIInstanceManager } from './uimanager';\nimport { PlayerAPI, TimeRange } from 'bitmovin-player';\n\n/**\n * @category Utils\n */\nexport namespace PlayerUtils {\n\n  export enum PlayerState {\n    Idle,\n    Prepared,\n    Playing,\n    Paused,\n    Finished,\n  }\n\n  export function isTimeShiftAvailable(player: PlayerAPI): boolean {\n    return player.isLive() && player.getMaxTimeShift() !== 0;\n  }\n\n  export function getState(player: PlayerAPI): PlayerState {\n    if (player.hasEnded()) {\n      return PlayerState.Finished;\n    } else if (player.isPlaying()) {\n      return PlayerState.Playing;\n    } else if (player.isPaused()) {\n      return PlayerState.Paused;\n    } else if (player.getSource() != null) {\n      return PlayerState.Prepared;\n    } else {\n      return PlayerState.Idle;\n    }\n  }\n\n  /**\n   * Returns the currentTime - seekableRange.start. This ensures a user-friendly currentTime after a live stream\n   * transitioned to VoD.\n   * @param player\n   */\n  export function getCurrentTimeRelativeToSeekableRange(player: PlayerAPI): number {\n    const currentTime = player.getCurrentTime();\n    if (player.isLive()) {\n      return currentTime;\n    }\n\n    const seekableRangeStart = PlayerUtils.getSeekableRangeStart(player, 0);\n    return currentTime - seekableRangeStart;\n  }\n\n  /**\n   * Returns the start value of the seekable range or the defaultValue if no seekableRange is present.\n   * For now this happens only in combination with Mobile SDKs.\n   *\n   * TODO: remove this function in next major release\n   *\n   * @param player\n   * @param defaultValue\n   */\n  export function getSeekableRangeStart(player: PlayerAPI, defaultValue: number = 0) {\n    return player.getSeekableRange() && player.getSeekableRange().start || defaultValue;\n  }\n\n  /**\n   * Calculates player seekable time range for live.\n   * As the player returns `{ start: -1, end: -1 }` for live streams we need to calculate the `seekableRange` based on `maxTimeshift`.\n   *\n   * @param player\n   */\n  export function getSeekableRangeRespectingLive(player: PlayerAPI): TimeRange {\n    if (!player.isLive()) {\n      return player.getSeekableRange();\n    }\n\n    const currentTimeshift = -player.getTimeShift();\n    const maxTimeshift = -player.getMaxTimeShift();\n    const currentTime = player.getCurrentTime();\n\n    const end = currentTime + (currentTimeshift);\n    const start = currentTime - (maxTimeshift - currentTimeshift);\n\n    return { start, end };\n  }\n\n  export interface TimeShiftAvailabilityChangedArgs extends NoArgs {\n    timeShiftAvailable: boolean;\n  }\n\n  export class TimeShiftAvailabilityDetector {\n\n    private player: PlayerAPI;\n    private timeShiftAvailable: boolean;\n    private timeShiftAvailabilityChangedEvent = new EventDispatcher<PlayerAPI, TimeShiftAvailabilityChangedArgs>();\n\n    constructor(player: PlayerAPI) {\n      this.player = player;\n      this.timeShiftAvailable = undefined;\n\n      let timeShiftDetector = () => {\n        this.detect();\n      };\n      // Try to detect timeshift availability when source is loaded, which works for DASH streams\n      player.on(player.exports.PlayerEvent.SourceLoaded, timeShiftDetector);\n      // With HLS/NativePlayer streams, getMaxTimeShift can be 0 before the buffer fills, so we need to additionally\n      // check timeshift availability in TimeChanged\n      player.on(player.exports.PlayerEvent.TimeChanged, timeShiftDetector);\n    }\n\n    detect(): void {\n      if (this.player.isLive()) {\n        let timeShiftAvailableNow = PlayerUtils.isTimeShiftAvailable(this.player);\n\n        // When the availability changes, we fire the event\n        if (timeShiftAvailableNow !== this.timeShiftAvailable) {\n          this.timeShiftAvailabilityChangedEvent.dispatch(this.player, { timeShiftAvailable: timeShiftAvailableNow });\n          this.timeShiftAvailable = timeShiftAvailableNow;\n        }\n      }\n    }\n\n    get onTimeShiftAvailabilityChanged(): Event<PlayerAPI, TimeShiftAvailabilityChangedArgs> {\n      return this.timeShiftAvailabilityChangedEvent.getEvent();\n    }\n  }\n\n  export interface LiveStreamDetectorEventArgs extends NoArgs {\n    live: boolean;\n  }\n\n  /**\n   * Detects changes of the stream type, i.e. changes of the return value of the player#isLive method.\n   * Normally, a stream cannot change its type during playback, it's either VOD or live. Due to bugs on some\n   * platforms or browsers, it can still change. It is therefore unreliable to just check #isLive and this detector\n   * should be used as a workaround instead.\n   *\n   * Additionally starting with player v8.19.0 we have the use-case that a live stream changes into a vod.\n   * The DurationChanged event indicates this switch.\n   *\n   * Known cases:\n   *\n   * - HLS VOD on Android 4.3\n   * Video duration is initially 'Infinity' and only gets available after playback starts, so streams are wrongly\n   * reported as 'live' before playback (the live-check in the player checks for infinite duration).\n   *\n   * @deprecated since UI v3.9.0 in combination with player v8.19.0 use PlayerEvent.DurationChanged instead\n   *\n   * TODO: remove this class in next major release\n   */\n  export class LiveStreamDetector {\n\n    private player: PlayerAPI;\n    private live: boolean;\n    private liveChangedEvent = new EventDispatcher<PlayerAPI, LiveStreamDetectorEventArgs>();\n    private uimanager: UIInstanceManager;\n\n    constructor(player: PlayerAPI, uimanager: UIInstanceManager) {\n      this.player = player;\n      this.uimanager = uimanager;\n      this.live = undefined;\n\n      let liveDetector = () => {\n        this.detect();\n      };\n      this.uimanager.getConfig().events.onUpdated.subscribe(liveDetector);\n      // Re-evaluate when playback starts\n      player.on(player.exports.PlayerEvent.Play, liveDetector);\n\n      // HLS live detection workaround for Android:\n      // Also re-evaluate during playback, because that is when the live flag might change.\n      // (Doing it only in Android Chrome saves unnecessary overhead on other platforms)\n      if (BrowserUtils.isAndroid && BrowserUtils.isChrome) {\n        player.on(player.exports.PlayerEvent.TimeChanged, liveDetector);\n      }\n\n      // DurationChanged event was introduced with player v8.19.0\n      if (player.exports.PlayerEvent.DurationChanged) {\n        player.on(player.exports.PlayerEvent.DurationChanged, liveDetector);\n      }\n\n      // Ad video's isLive() might be different than the actual video's isLive().\n      player.on(player.exports.PlayerEvent.AdBreakStarted, liveDetector);\n      player.on(player.exports.PlayerEvent.AdBreakFinished, liveDetector);\n    }\n\n    detect(): void {\n      let liveNow = this.player.isLive();\n\n      // Compare current to previous live state flag and fire event when it changes. Since we initialize the flag\n      // with undefined, there is always at least an initial event fired that tells listeners the live state.\n      if (liveNow !== this.live) {\n        this.liveChangedEvent.dispatch(this.player, { live: liveNow });\n        this.live = liveNow;\n      }\n    }\n\n    get onLiveChanged(): Event<PlayerAPI, LiveStreamDetectorEventArgs> {\n      return this.liveChangedEvent.getEvent();\n    }\n  }\n\n  export function clampValueToRange(value: number, boundary1: number, boundary2: number): number {\n    const lowerBoundary = Math.min(boundary1, boundary2);\n    const upperBoundary = Math.max(boundary1, boundary2);\n    return Math.min(Math.max(value, lowerBoundary), upperBoundary);\n  }\n}\n","import { NavigationGroup } from './navigationgroup';\nimport { Action, Direction } from './types';\nimport { Container } from '../components/container';\nimport { Component } from '../components/component';\n\nexport enum ListOrientation {\n  Horizontal = 'horizontal',\n  Vertical = 'vertical',\n}\n\n/**\n * @category Components\n */\nexport class ListNavigationGroup extends NavigationGroup {\n  private readonly listNavigationDirections: Direction[];\n\n  constructor(orientation: ListOrientation, container: Container<unknown>, ...components: Component<unknown>[]) {\n    super(container, ...components);\n\n    switch (orientation) {\n      case ListOrientation.Vertical:\n        this.listNavigationDirections = [Direction.UP, Direction.DOWN];\n        break;\n\n      case ListOrientation.Horizontal:\n        this.listNavigationDirections = [Direction.LEFT, Direction.RIGHT];\n        break;\n    }\n  }\n\n  public handleAction(action: Action): void {\n    super.handleAction(action);\n\n    if (action === Action.SELECT) {\n      // close the container when a list entry is selected\n      this.handleAction(Action.BACK);\n    }\n  }\n\n  public handleNavigation(direction: Direction): void {\n    super.handleNavigation(direction);\n\n    if (!this.listNavigationDirections.includes(direction)) {\n      // close the container on navigation inputs that don't align\n      // with the orientation of the list\n      this.handleAction(Action.BACK);\n    }\n  }\n}\n","import { Component } from '../components/component';\nimport { Container } from '../components/container';\nimport { isComponent, isContainer, isListBox } from './typeguards';\n\n/**\n * Recursively resolves a container and the components contained within them, building a flat list of components.\n *\n * @param container The container to get the contained components from\n */\nfunction resolveAllComponents(container: Container<unknown>): Component<unknown>[] {\n  const childComponents: Component<unknown>[] = [];\n\n  container.getComponents().forEach(containerOrComponent => {\n    if (isContainer(containerOrComponent)) {\n      childComponents.push(...resolveAllComponents(containerOrComponent));\n    } else if (isComponent(containerOrComponent)) {\n      childComponents.push(containerOrComponent);\n    }\n  });\n\n  return childComponents;\n}\n\n/**\n * Returns the HTML elements associated to the provided component.\n *\n * @param component The component to get the HTML elements from\n */\nfunction toHtmlElement(component: Component<unknown>): HTMLElement[] {\n  if (isListBox(component)) {\n    return [].slice.call(component.getDomElement().get()[0].children);\n  } else {\n    return component.getDomElement().get().slice(0, 1);\n  }\n}\n\n/**\n * Takes the provided list of components and flat-maps them to a list of their respective HTML elements. In case a\n * provided component is a container, the children of that container will be resolved recursively. Ignores components\n * that are hidden.\n *\n * @param components The components to map to HTML elements\n */\nexport function getHtmlElementsFromComponents(components: Component<unknown>[]): HTMLElement[] {\n  const htmlElements: HTMLElement[] = [];\n\n  components\n    .filter(component => !component.isHidden())\n    .forEach(component => {\n      const elementsToConsider = component instanceof Container ? resolveAllComponents(component) : [component];\n\n      elementsToConsider.forEach(component => {\n        htmlElements.push(...toHtmlElement(component));\n      });\n    });\n\n  return htmlElements;\n}\n","import { Action, Direction, KeyMap } from './types';\nimport { BrowserUtils } from '../browserutils';\n\nconst TizenKeyMap = {\n  isApplicable: () => BrowserUtils.isTizen,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // D-pad OK\n    13: Action.SELECT,\n    // Back\n    10009: Action.BACK,\n  },\n};\n\nconst WebOsKeyMap = {\n  isApplicable: () => BrowserUtils.isWebOs,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // D-pad OK\n    13: Action.SELECT,\n    // Back\n    461: Action.BACK,\n  },\n};\n\nconst PlayStationKeyMap = {\n  isApplicable: () => BrowserUtils.isPlayStation,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // Cross\n    13: Action.SELECT,\n    // Circle\n    27: Action.BACK,\n  },\n};\n\nconst AndroidKeyMap = {\n  isApplicable: () => BrowserUtils.isAndroid,\n  keyCodes: {\n    // D-pad Up\n    19: Direction.UP,\n    // D-pad Down\n    20: Direction.DOWN,\n    // D-pad Left\n    21: Direction.LEFT,\n    // D-pad Right\n    22: Direction.RIGHT,\n    // D-pad Center\n    23: Action.SELECT,\n    // Enter\n    66: Action.SELECT,\n    // Back\n    4: Action.BACK,\n  },\n};\n\nconst HisenseKeyMap = {\n  isApplicable: () => BrowserUtils.isHisense,\n  keyCodes: {\n    // D-pad Up\n    38: Direction.UP,\n    // D-pad Down\n    40: Direction.DOWN,\n    // D-pad Left\n    37: Direction.LEFT,\n    // D-pad Right\n    39: Direction.RIGHT,\n    // OK\n    13: Action.SELECT,\n    // Back\n    8: Action.BACK,\n  },\n};\n\n// Default key map used on desktops\nconst DefaultKeyMap = {\n  // Arrow Up\n  38: Direction.UP,\n  // Arrow Down\n  40: Direction.DOWN,\n  // Arrow Left\n  37: Direction.LEFT,\n  // Arrow Right\n  39: Direction.RIGHT,\n  // Enter\n  13: Action.SELECT,\n  // Escape\n  27: Action.BACK,\n};\n\n/**\n * Returns the matching key map for the current platform.\n */\nexport function getKeyMapForPlatform(): KeyMap {\n  const applicableKeyMap = [\n    WebOsKeyMap,\n    TizenKeyMap,\n    PlayStationKeyMap,\n    HisenseKeyMap,\n    AndroidKeyMap,\n  ].find(keyMap => keyMap.isApplicable());\n\n  if (applicableKeyMap) {\n    return applicableKeyMap.keyCodes;\n  } else {\n    return DefaultKeyMap;\n  }\n}\n","import { Direction } from './types';\n\ninterface Vector {\n  x: number;\n  y: number;\n}\n\n/**\n * Calculates the length of a vector.\n *\n * @param vector The vector to calculate the length of\n */\nfunction length(vector: Vector): number {\n  return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n}\n\n/**\n * Normalizes the given vector.\n *\n * @param vector The vector to normalize\n */\nfunction normalize(vector: Vector): Vector {\n  const len = length(vector);\n\n  return {\n    x: vector.x / len,\n    y: vector.y / len,\n  };\n}\n\n/**\n * Calculates the dot product between 2 vectors.\n *\n * @param a The first vector\n * @param b The second vector\n */\nfunction dotProduct(a: Vector, b: Vector): number {\n  return a.x * b.x + a.y * b.y;\n}\n\n/**\n * Calculates the distance between the 2 points pointed to by the provided vectors.\n *\n * @param a The first vector\n * @param b The second vector\n */\nfunction distance(a: Vector, b: Vector): number {\n  return length({\n    x: b.x - a.x,\n    y: b.y - a.y,\n  });\n}\n\n/**\n * Returns a vector that corresponds to the center of the provided element.\n *\n * @param element The element to get the center of\n */\nfunction getElementVector(element: HTMLElement): Vector {\n  const boundingRect = getBoundingRectFromElement(element);\n\n  return {\n    x: boundingRect.x + boundingRect.width / 2,\n    y: boundingRect.y + boundingRect.height / 2,\n  };\n}\n\n/**\n * Returns the angle in degrees between the unit vector pointing in the given {Direction} and the unit vector that\n * points from the current element to another element.\n *\n * @param a The vector of the current element\n * @param b The vector of the other element\n * @param direction The direction to move along\n */\nfunction calculateAngle(a: Vector, b: Vector, direction: Direction): number {\n  const directionVector = {\n    x: (direction === Direction.LEFT ? -1 : direction === Direction.RIGHT ? 1 : 0),\n    y: (direction === Direction.UP ? -1 : direction === Direction.DOWN ? 1 : 0),\n  };\n\n  const elementVector = normalize({\n    x: b.x - a.x,\n    y: b.y - a.y,\n  });\n\n  const angleCos = dotProduct(directionVector, elementVector) / (length(directionVector) * length(elementVector));\n\n  return Math.acos(angleCos) * 180 / Math.PI;\n}\n\n/**\n * Returns the closest element to the current element when trying to navigate in the provided direction. Returns\n * undefined, if there is not element in the given direction.\n *\n * @param activeElement The currently selected element\n * @param elements The list of all elements that can be navigated to\n * @param direction The direction in which to navigate\n */\nexport function getElementInDirection(\n  activeElement: HTMLElement,\n  elements: HTMLElement[],\n  direction: Direction,\n): HTMLElement | undefined {\n  if (!activeElement) return undefined;\n\n  const cutoffAngle = 45;\n  const activeElemVector = getElementVector(activeElement);\n\n  return elements\n    // don't take the current element into account\n    .filter(elem => elem !== activeElement)\n    // get the angle between, and distance to any other element from the current element\n    .map(element => {\n      const elementVector = getElementVector(element);\n      const dist = distance(activeElemVector, elementVector);\n      const angle = calculateAngle(activeElemVector, elementVector, direction);\n\n      return { angle, dist, element };\n    })\n    // filter out any elements that don't align with the direction we're trying to move in\n    .filter(({ angle }) => angle <= cutoffAngle)\n    // sort the resulting elements based on their distance to the current element in ascending order\n    .sort(({ angle: angleA, dist: distA }, { angle: angleB, dist: distB }) => (angleA - angleB) + (distA - distB))\n    // return the element closest to the current element\n    .shift()?.element;\n}\n\n/**\n * Returns DOMRect like object containing horizontal X and vertical Y coordinates from and HTMLElement.\n * Handles use-cases for getBoundingClientRect when the return type can be either\n * a ClientRect or DOMRect object type.\n *\n * @param element The currently selected element\n */\nexport function getBoundingRectFromElement(element: HTMLElement) {\n  const boundingRect = element.getBoundingClientRect();\n\n  if (typeof boundingRect.x !== 'number' && typeof boundingRect.y !== 'number') {\n    boundingRect.x = boundingRect.left;\n    boundingRect.y = boundingRect.top;\n  }\n\n  return boundingRect;\n}\n\n","import { Container } from '../components/container';\nimport { Component } from '../components/component';\nimport { getElementInDirection } from './navigationalgorithm';\nimport { getHtmlElementsFromComponents } from './gethtmlelementsfromcomponents';\nimport { NodeEventSubscriber } from './nodeeventsubscriber';\nimport { isSettingsPanel } from './typeguards';\nimport { Action, ActionCallback, Callback, Direction, NavigationCallback } from './types';\n\n/**\n * Used as part of spatial navigation. Groups together different components to which you can navigate to, in a single\n * navigation group.\n *\n * Responsible for finding elements in direction on navigation and for tracking active element inside the group.\n * Triggers blur and focus on element when active element is changed, as well as click on element on `Action.SELECT`.\n * Will call `hideUi()` on passed in container if `Action.BACK` is called.\n *\n * @category Components\n */\nexport class NavigationGroup {\n  private activeElement?: HTMLElement;\n  private activeElementBeforeDisable?: HTMLElement;\n  private readonly components: Component<unknown>[];\n  private removeElementHoverEventListeners = () => {};\n  private readonly eventSubscriber: NodeEventSubscriber;\n\n  constructor(public readonly container: Container<unknown>, ...components: Component<unknown>[]) {\n    this.components = components;\n    this.eventSubscriber = new NodeEventSubscriber();\n  }\n\n  /**\n   * If overwritten, allows to implement custom navigation behavior. Per default, the internal handler will still be\n   * executed. To prevent execution of the default navigation handler, call `preventDefault()`;\n   *\n   * @param direction {Direction} The direction to move along\n   * @param target {HTMLElement} The target element for the event\n   * @param preventDefault {() => void} A function that, when called, will prevent the execution of the default handler\n   */\n  public onNavigation?: NavigationCallback;\n\n  /**\n   * If overwritten, allows to implement custom action behavior. Per default, the internal handler will still be\n   * executed. To prevent execution of the default action handler, call `preventDefault()`;\n   *\n   * @param action {Action} The action that was called\n   * @param target {HTMLElement} The target element that action was called on\n   * @param preventDefault {() => void} A function that, when called, will prevent the execution of the default handler\n   */\n  public onAction?: ActionCallback;\n\n  /**\n   * Returns the active HTMLElement.\n   */\n  public getActiveElement(): HTMLElement | undefined {\n    return this.activeElement;\n  }\n\n  private focusElement(element: HTMLElement): void {\n    this.blurActiveElement();\n    this.activeElement = element;\n    this.activeElement.focus();\n  }\n\n  private blurActiveElement(): void {\n    this.activeElement?.blur();\n  }\n\n  private focusFirstElement(): void {\n    const element = getHtmlElementsFromComponents(this.components)[0];\n    if (element) {\n      this.focusElement(element);\n    }\n  }\n\n  protected defaultNavigationHandler(direction: Direction): void {\n    const targetElement = getElementInDirection(\n      this.activeElement,\n      getHtmlElementsFromComponents(this.components),\n      direction,\n    );\n\n    if (targetElement) {\n      this.focusElement(targetElement);\n    }\n  }\n\n  protected defaultActionHandler(action: Action): void {\n    switch (action) {\n      case(Action.SELECT):\n        this.activeElement.click();\n        break;\n      case(Action.BACK):\n        this.container.hide();\n        break;\n    }\n  }\n\n  private handleInput<T>(data: T, defaultHandler: (data: T) => void, userHandler?: Callback<T>): void {\n    let handleDefault = true;\n    const preventDefault = () => (handleDefault = false);\n\n    userHandler?.(data, this.activeElement, preventDefault);\n\n    if (handleDefault) {\n      defaultHandler.call(this, data);\n    }\n  }\n\n  /**\n   * Handles a navigation event.\n   *\n   * @param direction The direction of the navigation event\n   */\n  public handleNavigation(direction: Direction): void {\n    if (!this.activeElement) {\n      // If we do not have an active element, the active element has been disabled by a mouseleave\n      // event. We should continue the navigation at the exact place where we left off.\n      if (this.activeElementBeforeDisable) {\n        this.focusElement(this.activeElementBeforeDisable);\n      } else {\n        this.focusFirstElement();\n      }\n      return;\n    }\n    this.handleInput(direction, this.defaultNavigationHandler, this.onNavigation);\n  }\n\n  /**\n   * Handles an action event.\n   *\n   * @param action The action of the event\n   */\n  public handleAction(action: Action): void {\n    this.handleInput(action, this.defaultActionHandler, this.onAction);\n  }\n\n  /**\n   * Disable navigation group\n   *\n   * Call blur on active element, set as undefined, and track it as element before disable.\n   */\n  public disable(): void {\n    if (this.activeElement) {\n      this.activeElementBeforeDisable = this.activeElement;\n      this.blurActiveElement();\n      this.activeElement = undefined;\n    }\n  }\n\n  /**\n   * Enable navigation group\n   *\n   * Sets active element to either element that was active before disable, or first element of tracked elements.\n   * If it is settings panel, it will always focus first element in the list.\n   */\n  public enable(): void {\n    if (this.activeElementBeforeDisable && !isSettingsPanel(this.container)) {\n      this.focusElement(this.activeElementBeforeDisable);\n      this.activeElementBeforeDisable = undefined;\n    } else {\n      this.focusFirstElement();\n    }\n\n    this.trackElementHover();\n  }\n\n  /**\n   * Adds event listener for `mouseenter` on tracked elements to ensure tracking of active element will work together\n   * in combination of using mouse and key events.\n   */\n  private trackElementHover(): void {\n    this.removeElementHoverEventListeners();\n\n    const removeEventListenerFunctions = getHtmlElementsFromComponents(this.components).map(htmlElem => {\n      const enterListener = this.focusElement.bind(this, htmlElem);\n      const exitListener = () => this.disable();\n\n      this.eventSubscriber.on(htmlElem, 'mouseenter', enterListener);\n      this.eventSubscriber.on(htmlElem, 'mouseleave', exitListener);\n\n      return () => {\n        this.eventSubscriber.off(htmlElem, 'mouseenter', enterListener);\n        this.eventSubscriber.off(htmlElem, 'mouseleave', exitListener);\n      };\n    });\n\n    this.removeElementHoverEventListeners = () => removeEventListenerFunctions.forEach(fn => fn());\n  }\n\n  /**\n   * Dispose of navigation group\n   */\n  public release(): void {\n    this.eventSubscriber.release();\n    this.activeElement = undefined;\n    this.components.splice(0, this.components.length);\n    this.removeElementHoverEventListeners();\n  }\n}\n","type Listeners = ([Node, EventListenerOrEventListenerObject, boolean | AddEventListenerOptions])[];\n\n/**\n * Allows to subscribe to Node events.\n */\nexport class NodeEventSubscriber {\n  private readonly attachedListeners: Map<keyof HTMLElementEventMap, Listeners>;\n\n  constructor() {\n    this.attachedListeners = new Map();\n  }\n\n  private getEventListenersOfType(type: keyof HTMLElementEventMap): Listeners {\n    if (!this.attachedListeners.has(type)) {\n      this.attachedListeners.set(type, []);\n    }\n\n    return this.attachedListeners.get(type);\n  }\n\n  /**\n   * Adds the given event listener to the node.\n   *\n   * @param node The node to remove the event listener from\n   * @param type The event to listen to\n   * @param listener The listener to remove\n   * @param options The event listener options\n   */\n  public on(\n    node: Node,\n    type: keyof HTMLElementEventMap,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    node.addEventListener(type, listener, options);\n    this.getEventListenersOfType(type).push([node, listener, options]);\n  }\n\n  /**\n   * Removes the given event listener from the node.\n   *\n   * @param node The node to attach the event listener to\n   * @param type The event to listen to\n   * @param listener The listener to add\n   * @param options The event listener options\n   */\n  public off(\n    node: Node,\n    type: keyof HTMLElementEventMap,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    const listenersOfType = this.getEventListenersOfType(type);\n    const listenerIndex = listenersOfType.findIndex(([otherNode, otherListener, otherOptions]) => {\n      return otherNode === node && otherListener === listener && otherOptions === options;\n    });\n\n    node.removeEventListener(type, listener, options);\n\n    if (listenerIndex > -1) {\n      listenersOfType.splice(listenerIndex, 1);\n    }\n  }\n\n  /**\n   * Removes all attached event listeners.\n   */\n  public release(): void {\n    this.attachedListeners.forEach((listenersOfType, type) => {\n      listenersOfType.forEach(([element, listener, options]) => {\n        this.off(element, type, listener, options);\n      });\n    });\n    this.attachedListeners.clear();\n  }\n}\n","import { NavigationGroup } from './navigationgroup';\nimport { Component } from '../components/component';\nimport { UIContainer } from '../components/uicontainer';\nimport { Action, Direction } from './types';\n\n/**\n * Extends NavigationGroup and provides additional logic for hiding and showing the UI on the root container.\n *\n * @category Components\n */\nexport class RootNavigationGroup extends NavigationGroup {\n  constructor(public readonly container: UIContainer, ...elements: Component<unknown>[]) {\n    super(container, ...elements);\n  }\n\n  public handleAction(action: Action) {\n    this.container.showUi();\n\n    super.handleAction(action);\n  }\n\n  public handleNavigation(direction: Direction) {\n    this.container.showUi();\n\n    super.handleNavigation(direction);\n  }\n\n  protected defaultActionHandler(action: Action): void {\n    if (action === Action.BACK) {\n      this.container.hideUi();\n    } else {\n      super.defaultActionHandler(action);\n    }\n  }\n\n  public release(): void {\n    super.release();\n  }\n}\n","import { RootNavigationGroup } from './rootnavigationgroup';\nimport { NodeEventSubscriber } from './nodeeventsubscriber';\nimport { Action, Direction } from './types';\nimport {getBoundingRectFromElement} from './navigationalgorithm';\n\nconst DefaultScrubSpeedPercentage = 0.005;\nconst ScrubSpeedClearInterval = 100;\nconst ScrubSpeedMultiplier = 1.1;\n\n/**\n * Handles Spatial Navigation interaction with the seek bar. Ensures, that seek operations can be executed and that the\n * scrubbing tooltip is shown as if the user scrubbed using the mouse/touchscreen.\n */\nexport class SeekBarHandler {\n  private readonly cursorPosition = { x: 0, y: 0};\n  private readonly eventSubscriber: NodeEventSubscriber;\n  private isScrubbing = false;\n  private scrubSpeedResetTimeout: number;\n  private scrubSpeedPercentage = DefaultScrubSpeedPercentage;\n\n  constructor(private readonly rootNavigationGroup: RootNavigationGroup) {\n    this.rootNavigationGroup.onAction = this.onAction;\n    this.eventSubscriber = new NodeEventSubscriber();\n    this.rootNavigationGroup.onNavigation = this.onNavigation;\n  }\n\n  private updateScrubSpeedPercentage(): void {\n    clearTimeout(this.scrubSpeedResetTimeout);\n    this.scrubSpeedPercentage *= ScrubSpeedMultiplier;\n    this.scrubSpeedResetTimeout = window.setTimeout(\n      () => this.scrubSpeedPercentage = DefaultScrubSpeedPercentage, ScrubSpeedClearInterval,\n    );\n  }\n\n  private getIncrement(direction: Direction, seekBarWrapper: HTMLElement): number {\n    this.updateScrubSpeedPercentage();\n\n    const seekBarWidth = seekBarWrapper.getBoundingClientRect().width;\n    const increment = seekBarWidth * this.scrubSpeedPercentage;\n\n    return direction === Direction.RIGHT ? increment : -increment;\n  }\n\n  private resetCursorPosition(): void {\n    this.cursorPosition.x = 0;\n    this.cursorPosition.y = 0;\n  }\n\n  private updateCursorPosition(direction: Direction, seekBarWrapper: HTMLElement): void {\n    this.cursorPosition.x += this.getIncrement(direction, seekBarWrapper);\n  }\n\n  private initializeCursorPosition(seekBarWrapper: HTMLElement): void {\n    const playbackPositionMarker = getPlaybackPositionMarker(seekBarWrapper);\n    const rect = getBoundingRectFromElement(playbackPositionMarker);\n\n\n    const startX = rect.x + (rect.width / 2);\n    const startY = rect.y;\n\n    this.cursorPosition.x = startX;\n    this.cursorPosition.y = startY;\n  }\n\n  private initializeOrUpdateCursorPosition(seekBarWrapper: HTMLElement, direction: Direction): void {\n    if (this.isScrubbing) {\n      this.updateCursorPosition(direction, seekBarWrapper);\n    } else {\n      this.initializeCursorPosition(seekBarWrapper);\n    }\n\n    this.isScrubbing = true;\n  }\n\n  private getCursorPositionMouseEventInit(): MouseEventInit {\n    return {\n      clientX: this.cursorPosition.x,\n      clientY: this.cursorPosition.y,\n    };\n  }\n\n  private dispatchMouseMoveEvent(seekBar: Element): void {\n    seekBar.dispatchEvent(new MouseEvent('mousemove', this.getCursorPositionMouseEventInit()));\n  }\n\n  private readonly onNavigation = (direction: Direction, target: HTMLElement, preventDefault: () => void): void => {\n    if (!isSeekBarWrapper(target)) {\n      return;\n    }\n\n    if (direction === Direction.UP || direction === Direction.DOWN) {\n      this.stopSeeking(getSeekBar(target));\n\n      return;\n    }\n\n    this.initializeOrUpdateCursorPosition(target, direction);\n    this.dispatchMouseMoveEvent(getSeekBar(target));\n\n    preventDefault();\n  };\n\n  private dispatchMouseClickEvent(seekBar: Element): void {\n    const mouseDownHandler = () => {\n      const mouseEventInit = this.getCursorPositionMouseEventInit();\n\n      document.dispatchEvent(new MouseEvent('mouseup', mouseEventInit));\n      this.eventSubscriber.off(seekBar, 'mousedown', mouseDownHandler);\n      this.stopSeeking(seekBar);\n    };\n\n    this.eventSubscriber.on(seekBar, 'mousedown', mouseDownHandler);\n    seekBar.dispatchEvent(new MouseEvent('mousedown'));\n  }\n\n  private stopSeeking(seekBar: Element): void {\n    this.resetCursorPosition();\n    this.isScrubbing = false;\n    this.dispatchMouseLeaveEvent(seekBar);\n  }\n\n  private dispatchMouseLeaveEvent(seekBar: Element): void {\n    seekBar.dispatchEvent(new MouseEvent('mouseleave'));\n  }\n\n  private readonly onAction = (action: Action, target: HTMLElement, preventDefault: () => void): void => {\n    if (!isSeekBarWrapper(target)) {\n      return;\n    }\n\n    const seekBar = getSeekBar(target);\n\n    if (action === Action.SELECT && this.isScrubbing) {\n      this.dispatchMouseClickEvent(seekBar);\n      preventDefault();\n    } else if (action === Action.BACK) {\n      this.stopSeeking(seekBar);\n      preventDefault();\n    }\n  };\n\n  /**\n   * Releases the SeekBraHandler, making sure all event subscribers are removed.\n   */\n  public release(): void {\n    this.eventSubscriber.release();\n    this.rootNavigationGroup.onAction = undefined;\n    this.rootNavigationGroup.onNavigation = undefined;\n  }\n}\n\nfunction isSeekBarWrapper(element: HTMLElement): boolean {\n  return Array.from(element.classList).findIndex(className => /-ui-seekbar$/.test(className)) > -1;\n}\n\nfunction getSeekBar(seekBarWrapper: HTMLElement): Element {\n  return seekBarWrapper.children.item(0);\n}\n\nfunction getPlaybackPositionMarker(seekBarWrapper: HTMLElement): HTMLElement {\n  return seekBarWrapper.querySelector('[class*=\"seekbar-playbackposition-marker\"]');\n}\n","import { NavigationGroup } from './navigationgroup';\nimport { RootNavigationGroup } from './rootnavigationgroup';\nimport { NodeEventSubscriber } from './nodeeventsubscriber';\nimport { SeekBarHandler } from './seekbarhandler';\nimport { getKeyMapForPlatform } from './keymap';\nimport { Action, Direction, KeyMap } from './types';\nimport { isAction, isDirection } from './typeguards';\n\n/**\n * SpatialNavigation keeps track of all navigation groups, and updates the active navigation group when visibility\n * changes on group container.\n *\n * It listens to key events, and triggers either handleNavigation or handleAction on the active group.\n * SeekBarHandler will get instantiated with root navigation group and disposed on release of the spatial navigation.\n */\nexport class SpatialNavigation {\n  private unsubscribeVisibilityChangesFns: (() => void)[];\n  private readonly navigationGroups: NavigationGroup[] = [];\n  private readonly activeNavigationGroups: NavigationGroup[];\n  private readonly eventSubscriber: NodeEventSubscriber;\n  private readonly seekBarHandler: SeekBarHandler;\n  private readonly keyMap: KeyMap;\n\n  constructor(rootNavigationGroup: RootNavigationGroup, ...navigationGroups: NavigationGroup[]) {\n    this.seekBarHandler = new SeekBarHandler(rootNavigationGroup);\n\n    this.activeNavigationGroups = [];\n    this.unsubscribeVisibilityChangesFns = [];\n    this.eventSubscriber = new NodeEventSubscriber();\n    this.navigationGroups = [rootNavigationGroup, ...navigationGroups];\n    this.keyMap = getKeyMapForPlatform();\n\n    this.subscribeToNavigationGroupVisibilityChanges();\n    this.attachKeyEventHandler();\n    this.enableDefaultNavigationGroup();\n  }\n\n  private attachKeyEventHandler(): void {\n    this.eventSubscriber.on(document, 'keydown', this.handleKeyEvent, true);\n  }\n\n  private onShow = (group: NavigationGroup): void => {\n    this.activeNavigationGroups.push(group);\n    this.updateEnabledNavigationGroup();\n  };\n\n  private onHide = (group: NavigationGroup): void => {\n    const groupIndex = this.activeNavigationGroups.findIndex(other => other === group);\n\n    if (groupIndex > -1) {\n      group.disable();\n      this.activeNavigationGroups.splice(groupIndex, 1);\n      this.updateEnabledNavigationGroup();\n    }\n  };\n\n  /**\n   * Subscribes to onHide and onShow on all navigation groups containers as Spatial navigation tracks active navigation\n   * group based on their container visibility.\n   */\n  private subscribeToNavigationGroupVisibilityChanges(): void {\n    this.navigationGroups.forEach(group => {\n      const onShowHandler = () => this.onShow(group);\n      const onHideHandler = () => this.onHide(group);\n\n      group.container.onShow.subscribe(onShowHandler);\n      group.container.onHide.subscribe(onHideHandler);\n\n      this.unsubscribeVisibilityChangesFns.push(\n        () => group.container.onShow.unsubscribe(onShowHandler),\n        () => group.container.onHide.unsubscribe(onHideHandler),\n      );\n    });\n  }\n\n  private unsubscribeFromNavigationGroupVisibilityChanges(): void {\n    this.unsubscribeVisibilityChangesFns.forEach(unsub => unsub());\n    this.unsubscribeVisibilityChangesFns = [];\n  }\n\n  /**\n   * It will enable group of which container is currently shown\n   * If there are no groups with containers that are currently visible, it will enable root navigation group\n   */\n  private enableDefaultNavigationGroup(): void {\n    const isShown = (group: NavigationGroup) => group.container.isShown();\n    const groupToEnable = this.navigationGroups.find(isShown) ?? this.navigationGroups[0];\n\n    if (groupToEnable) {\n      this.activeNavigationGroups.push(groupToEnable);\n      this.updateEnabledNavigationGroup();\n    }\n  }\n\n  /**\n   * Disables navigation groups that are no longer active and calls enable on last pushed navigation group\n   */\n  private updateEnabledNavigationGroup(): void {\n    this.activeNavigationGroups.forEach((group, idx) => {\n      if (idx < this.activeNavigationGroups.length - 1) {\n        group.disable();\n      } else {\n        group.enable();\n      }\n    });\n  }\n\n  /**\n   * Returns currently active navigation group\n   */\n  public getActiveNavigationGroup(): NavigationGroup | undefined {\n    return this.activeNavigationGroups[this.activeNavigationGroups.length - 1];\n  }\n\n  /**\n   * Checks if keyboard event keycode is tracked either as Direction or Action and calls appropriate handler on active\n   * navigation group\n   *\n   * @param e {KeyboardEvent}\n   */\n  private handleKeyEvent = (e: KeyboardEvent): void => {\n    const event: Direction | Action | undefined = this.keyMap[getKeyCode(e)];\n\n    const active = this.getActiveNavigationGroup();\n    if (!active || !active.container || active.container.isHidden() || active.container.isDisabled()) {\n      return;\n    }\n\n    if (isDirection(event)) {\n      active.handleNavigation(event);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (isAction(event)) {\n      active.handleAction(event);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  /**\n   * Dispose of SpatialNavigation\n   *\n   * Remove all event handlers, release seekbar handler and release all navigation groups.\n   */\n  public release(): void {\n    this.unsubscribeFromNavigationGroupVisibilityChanges();\n    this.eventSubscriber.release();\n    this.navigationGroups.forEach(group => group.release());\n    this.seekBarHandler.release();\n  }\n}\n\nfunction getKeyCode(event: KeyboardEvent): number {\n  return event.keyCode;\n}\n","import { Component } from '../components/component';\nimport { SettingsPanel } from '../components/settingspanel';\nimport { Container } from '../components/container';\nimport { ListBox } from '../components/listbox';\nimport { Action, Direction } from './types';\n\nexport function isSettingsPanel(component: Component<unknown>): component is SettingsPanel {\n  return component instanceof SettingsPanel;\n}\n\nexport function isComponent(obj: unknown): obj is Component<unknown> {\n  return obj !== null && obj !== undefined && obj instanceof Component;\n}\n\nexport function isContainer(obj: unknown): obj is Container<unknown> {\n  return obj !== null && obj !== undefined && obj instanceof Container;\n}\n\nexport function isListBox(obj: unknown): obj is ListBox {\n  return obj instanceof ListBox;\n}\n\nexport function isDirection(direction: unknown): direction is Direction {\n  return typeof direction === 'string' && Object.values<string>(Direction).includes(direction);\n}\n\nexport function isAction(action: unknown): action is Action {\n  return typeof action === 'string' && Object.values<string>(Action).includes(action);\n}\n","export type Callback<T> = (data: T, target: HTMLElement, preventDefault: () => void) => void;\nexport type NavigationCallback = Callback<Direction>;\nexport type ActionCallback = Callback<Action>;\nexport type KeyMap = {\n  [keyCode: number]: Action | Direction;\n};\n\nexport enum Direction {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport enum Action {\n  SELECT = 'select',\n  BACK = 'back',\n}\n","import { UIConfig } from './uiconfig';\n\n/**\n * @category Utils\n */\nexport namespace StorageUtils {\n let disableStorageApi: boolean;\n\n  export function setStorageApiDisabled(uiConfig: UIConfig) {\n    disableStorageApi = uiConfig.disableStorageApi;\n  }\n\n  function shouldUseLocalStorage(): boolean {\n    try {\n      return (\n        !disableStorageApi &&\n        window.localStorage &&\n        typeof localStorage.getItem === 'function' &&\n        typeof localStorage.setItem === 'function'\n      );\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Stores a string item into localStorage.\n   * @param key the item's key\n   * @param data the item's data\n   */\n  export function setItem(key: string, data: string): void {\n    if (shouldUseLocalStorage()) {\n      try {\n        window.localStorage.setItem(key, data);\n      } catch (e) {\n        console.debug(`Failed to set storage item ${key}`, e);\n      }\n    }\n  }\n\n  /**\n   * Gets an item's string value from the localStorage.\n   * @param key the key to look up its associated value\n   * @return {string | null} Returns the string if found, null if there is no data stored for the key\n   */\n  export function getItem(key: string): string | null {\n    if (shouldUseLocalStorage()) {\n      try {\n        return window.localStorage.getItem(key);\n      } catch (e) {\n        console.debug(`Failed to get storage item ${key}`, e);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Stores an object into localStorage. The object will be serialized to JSON. The following types are supported\n   * in addition to the default types:\n   *  - ColorUtils.Color\n   *\n   * @param key the key to store the data to\n   * @param data the object to store\n   */\n  export function setObject<T>(key: string, data: T): void {\n    let json = JSON.stringify(data);\n    setItem(key, json);\n  }\n\n  /**\n   * Gets an object for the given key from localStorage. The object will be deserialized from JSON. Beside the\n   * default types, the following types are supported:\n   *  - ColorUtils.Color\n   *\n   * @param key the key to look up its associated object\n   * @return {any} Returns the object if found, null otherwise\n   */\n  export function getObject<T>(key: string): T | null {\n    let json = getItem(key);\n\n    if (json) {\n      let object = JSON.parse(json);\n      return <T>object;\n    }\n    return null;\n  }\n}\n","import { Ad, LinearAd, PlayerAPI } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\n\n/**\n * @category Utils\n */\nexport namespace StringUtils {\n\n  export let FORMAT_HHMMSS: string = 'hh:mm:ss';\n  export let FORMAT_MMSS: string = 'mm:ss';\n\n  /**\n   * Formats a number of seconds into a time string with the pattern hh:mm:ss.\n   *\n   * @param totalSeconds the total number of seconds to format to string\n   * @param format the time format to output (default: hh:mm:ss)\n   * @returns {string} the formatted time string\n   */\n  export function secondsToTime(totalSeconds: number, format: string = FORMAT_HHMMSS): string {\n    let isNegative = totalSeconds < 0;\n\n    if (isNegative) {\n      // If the time is negative, we make it positive for the calculation below\n      // (else we'd get all negative numbers) and reattach the negative sign later.\n      totalSeconds = -totalSeconds;\n    }\n\n    // Split into separate time parts\n    let hours = Math.floor(totalSeconds / 3600);\n    let minutes = Math.floor(totalSeconds / 60) - hours * 60;\n    let seconds = Math.floor(totalSeconds) % 60;\n\n    return (isNegative ? '-' : '') + format\n        .replace('hh', leftPadWithZeros(hours, 2))\n        .replace('mm', leftPadWithZeros(minutes, 2))\n        .replace('ss', leftPadWithZeros(seconds, 2));\n  }\n\n  export function secondsToText(totalSeconds: number): string {\n    const isNegative = totalSeconds < 0;\n\n    if (isNegative) {\n      // If the time is negative, we make it positive for the calculation below\n      // (else we'd get all negative numbers) and reattach the negative sign later.\n      totalSeconds = -totalSeconds;\n    }\n\n    // Split into separate time parts\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds / 60) - hours * 60;\n    const seconds = Math.floor(totalSeconds) % 60;\n\n    return (isNegative ? '-' : '') +\n    (hours !== 0 ? `${leftPadWithZeros(hours, 2)} ${i18n.performLocalization(i18n.getLocalizer('settings.time.hours'))} ` : '') +\n    (minutes !== 0 ? `${leftPadWithZeros(minutes, 2)} ${i18n.performLocalization(i18n.getLocalizer('settings.time.minutes'))} ` : '') +\n    `${leftPadWithZeros(seconds, 2)} ${i18n.performLocalization(i18n.getLocalizer('settings.time.seconds'))}`;\n  }\n\n  /**\n   * Converts a number to a string and left-pads it with zeros to the specified length.\n   * Example: leftPadWithZeros(123, 5) => '00123'\n   *\n   * @param num the number to convert to string and pad with zeros\n   * @param length the desired length of the padded string\n   * @returns {string} the padded number as string\n   */\n  function leftPadWithZeros(num: number | string, length: number): string {\n    let text = num + '';\n    let padding = '0000000000'.substr(0, length - text.length);\n    return padding + text;\n  }\n\n  /**\n   * Fills out placeholders in an ad message.\n   *\n   * Has the placeholders '{remainingTime[formatString]}', '{playedTime[formatString]}',\n   * '{adDuration[formatString]}' and {adBreakRemainingTime[formatString]}, which are replaced by the remaining time until the ad can be skipped, the current\n   * time or the ad duration. The format string is optional. If not specified, the placeholder is replaced by the time\n   * in seconds. If specified, it must be of the following format:\n   * - %d - Inserts the time as an integer.\n   * - %0Nd - Inserts the time as an integer with leading zeroes, if the length of the time string is smaller than N.\n   * - %f - Inserts the time as a float.\n   * - %0Nf - Inserts the time as a float with leading zeroes.\n   * - %.Mf - Inserts the time as a float with M decimal places. Can be combined with %0Nf, e.g. %04.2f (the time\n   * 10.123 would be printed as 0010.12).\n   * - %hh:mm:ss\n   * - %mm:ss\n   *\n   * Examples:\n   * - { text: 'Ad: {remainingTime%mm:ss} secs' }\n   * An input value of 100 would be displayed as: 'Ad: 01:40 secs'\n   * - { text: 'Ad: {remainingTime%f} secs' }\n   * An input value of 100 would be displayed as: 'Ad: 100.0 secs'\n   * - { text: 'Adbreak: {adBreakRemainingTime%f} secs' }\n   * Adbreak with 2 ads each 50 seconds would be displayed as: 'Ad: 100.0 secs'\n   *\n   * @param adMessage an ad message with optional placeholders to fill\n   * @param skipOffset if specified, {remainingTime} will be filled with the remaining time until the ad can be skipped\n   * @param player the player to get the time data from\n   * @returns {string} the ad message with filled placeholders\n   */\n  export function replaceAdMessagePlaceholders(adMessage: string, skipOffset: number, player: PlayerAPI) {\n    let adMessagePlaceholderRegex = new RegExp(\n      '\\\\{(remainingTime|playedTime|adDuration|adBreakRemainingTime)(}|%((0[1-9]\\\\d*(\\\\.\\\\d+(d|f)|d|f)|\\\\.\\\\d+f|d|f)|hh:mm:ss|mm:ss)})',\n      'g',\n    );\n\n    return adMessage.replace(adMessagePlaceholderRegex, (formatString) => {\n      let time = 0;\n      if (formatString.indexOf('remainingTime') > -1) {\n        if (skipOffset) {\n          time = Math.ceil(skipOffset - player.getCurrentTime());\n        } else {\n          time = player.getDuration() - player.getCurrentTime();\n        }\n      } else if (formatString.indexOf('playedTime') > -1) {\n        time = player.getCurrentTime();\n      } else if (formatString.indexOf('adDuration') > -1) {\n        time = player.getDuration();\n      } else if (formatString.indexOf('adBreakRemainingTime') > -1) { // To display the remaining time in the ad break as opposed to in the ad\n        time = 0;\n\n        // compute list of ads and calculate duration of remaining ads based on index of active ad\n        if (player.ads.isLinearAdActive()) {\n          const isActiveAd = (ad: Ad) => player.ads.getActiveAd().id === ad.id;\n          const indexOfActiveAd = player.ads.getActiveAdBreak().ads.findIndex(isActiveAd);\n          const duration = player.ads.getActiveAdBreak().ads\n          .slice(indexOfActiveAd)\n          .reduce((total, ad) => total + (ad.isLinear ? (ad as LinearAd).duration : 0), 0);\n\n          // And remaning ads duration minus time played\n          time = duration - player.getCurrentTime();\n        }\n      }\n\n      return formatNumber(Math.round(time), formatString);\n    });\n  }\n\n  function formatNumber(time: number, format: string) {\n    let formatStringValidationRegex = /%((0[1-9]\\d*(\\.\\d+(d|f)|d|f)|\\.\\d+f|d|f)|hh:mm:ss|mm:ss)/;\n    let leadingZeroesRegex = /(%0[1-9]\\d*)(?=(\\.\\d+f|f|d))/;\n    let decimalPlacesRegex = /\\.\\d*(?=f)/;\n\n    if (!formatStringValidationRegex.test(format)) {\n      // If the format is invalid, we set a default fallback format\n      format = '%d';\n    }\n\n    // Determine the number of leading zeros\n    let leadingZeroes = 0;\n    let leadingZeroesMatches = format.match(leadingZeroesRegex);\n    if (leadingZeroesMatches) {\n      leadingZeroes = parseInt(leadingZeroesMatches[0].substring(2));\n    }\n\n    // Determine the number of decimal places\n    let numDecimalPlaces = null;\n    let decimalPlacesMatches = format.match(decimalPlacesRegex);\n    if (decimalPlacesMatches && !isNaN(parseInt(decimalPlacesMatches[0].substring(1)))) {\n      numDecimalPlaces = parseInt(decimalPlacesMatches[0].substring(1));\n      if (numDecimalPlaces > 20) {\n        numDecimalPlaces = 20;\n      }\n    }\n\n    // Float format\n    if (format.indexOf('f') > -1) {\n      let timeString = '';\n\n      if (numDecimalPlaces !== null) {\n        // Apply fixed number of decimal places\n        timeString = time.toFixed(numDecimalPlaces);\n      } else {\n        timeString = '' + time;\n      }\n\n      // Apply leading zeros\n      if (timeString.indexOf('.') > -1) {\n        return leftPadWithZeros(timeString, timeString.length + (leadingZeroes - timeString.indexOf('.')));\n      } else {\n        return leftPadWithZeros(timeString, leadingZeroes);\n      }\n\n    }\n    // Time format\n    else if (format.indexOf(':') > -1) {\n      let totalSeconds = Math.ceil(time);\n\n      // hh:mm:ss format\n      if (format.indexOf('hh') > -1) {\n        return secondsToTime(totalSeconds);\n      }\n      // mm:ss format\n      else {\n        let minutes = Math.floor(totalSeconds / 60);\n        let seconds = totalSeconds % 60;\n\n        return leftPadWithZeros(minutes, 2) + ':' + leftPadWithZeros(seconds, 2);\n      }\n    }\n    // Integer format\n    else {\n      return leftPadWithZeros(Math.ceil(time), leadingZeroes);\n    }\n  }\n}\n","import { ListItem, ListSelector, ListSelectorConfig } from './components/listselector';\nimport { UIInstanceManager } from './uimanager';\nimport { PlayerAPI, SubtitleEvent, SubtitleTrack } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\n\n/**\n * Helper class to handle all subtitle related events\n *\n * This class listens to player events as well as the `ListSelector` event if selection changed\n *\n * @category Utils\n */\nexport class SubtitleSwitchHandler {\n\n  private static SUBTITLES_OFF_KEY: string = 'null';\n\n  private player: PlayerAPI;\n  private listElement: ListSelector<ListSelectorConfig>;\n  private uimanager: UIInstanceManager;\n\n  constructor(player: PlayerAPI, element: ListSelector<ListSelectorConfig>, uimanager: UIInstanceManager) {\n    this.player = player;\n    this.listElement = element;\n    this.uimanager = uimanager;\n\n    this.bindSelectionEvent();\n    this.bindPlayerEvents();\n    this.refreshSubtitles();\n  }\n\n  private bindSelectionEvent(): void {\n    this.listElement.onItemSelected.subscribe((_, value: string) => {\n      // TODO add support for multiple concurrent subtitle selections\n      if (value === SubtitleSwitchHandler.SUBTITLES_OFF_KEY) {\n        const currentSubtitle = this.player.subtitles.list().filter((subtitle) => subtitle.enabled).pop();\n        if (currentSubtitle) {\n          this.player.subtitles.disable(currentSubtitle.id);\n        }\n      } else {\n        this.player.subtitles.enable(value, true);\n      }\n    });\n  }\n\n  private bindPlayerEvents(): void {\n    this.player.on(this.player.exports.PlayerEvent.SubtitleAdded, this.addSubtitle);\n    this.player.on(this.player.exports.PlayerEvent.SubtitleEnabled, this.selectCurrentSubtitle);\n    this.player.on(this.player.exports.PlayerEvent.SubtitleDisabled, this.selectCurrentSubtitle);\n    this.player.on(this.player.exports.PlayerEvent.SubtitleRemoved, this.removeSubtitle);\n    // Update subtitles when source goes away\n    this.player.on(this.player.exports.PlayerEvent.SourceUnloaded, this.clearSubtitles);\n    // Update subtitles when the period within a source changes\n    this.player.on(this.player.exports.PlayerEvent.PeriodSwitched, this.refreshSubtitles);\n    this.uimanager.getConfig().events.onUpdated.subscribe(this.refreshSubtitles);\n  }\n\n  private addSubtitle = (event: SubtitleEvent) => {\n    const subtitle = event.subtitle;\n    if (!this.listElement.hasItem(subtitle.id)) {\n      this.listElement.addItem(subtitle.id, subtitle.label);\n    }\n  };\n\n  private removeSubtitle = (event: SubtitleEvent) => {\n    const subtitle = event.subtitle;\n    if (this.listElement.hasItem(subtitle.id)) {\n      this.listElement.removeItem(subtitle.id);\n    }\n  };\n\n  private selectCurrentSubtitle = () => {\n    if (!this.player.subtitles) {\n      // Subtitles API not available (yet)\n      return;\n    }\n\n    let currentSubtitle = this.player.subtitles.list().filter((subtitle) => subtitle.enabled).pop();\n    this.listElement.selectItem(currentSubtitle ? currentSubtitle.id : SubtitleSwitchHandler.SUBTITLES_OFF_KEY);\n  };\n\n  private clearSubtitles = () => {\n    this.listElement.clearItems();\n  }\n\n  private refreshSubtitles = () => {\n    if (!this.player.subtitles) {\n      // Subtitles API not available (yet)\n      return;\n    }\n\n    const offListItem: ListItem = {\n      key: SubtitleSwitchHandler.SUBTITLES_OFF_KEY,\n      label: i18n.getLocalizer('off'),\n    };\n\n    const subtitles = this.player.subtitles.list();\n    const subtitleToListItem = (subtitle: SubtitleTrack): ListItem => {\n      return { key: subtitle.id, label: subtitle.label };\n    };\n\n    this.listElement.synchronizeItems([\n      offListItem, ...subtitles.map(subtitleToListItem),\n    ]);\n    this.selectCurrentSubtitle();\n  };\n}\n","// TODO change to internal (not exported) class, how to use in other files?\n/**\n * Executes a callback after a specified amount of time, optionally repeatedly until stopped.\n */\nexport class Timeout {\n\n  private readonly delay: number;\n  private readonly callback: () => void;\n  private readonly repeat: boolean;\n  // There's two setTimeout declarations, one on Window which returns type \"number\" and one in NodeJS which returns\n  // type \"Timer\". For unknown reasons builds on Jenkins fail due to a type mismatch when we use type \"number\" here,\n  // although it works on other platforms (e.g. Windows, Codeship).\n  // To work around the issue we use type \"any\". The type does not matter anyway because we're not working with\n  // this value except providing it to clearTimeout.\n  private timeoutOrIntervalId: any;\n  private active: boolean;\n  private suspended: boolean;\n\n  /**\n   * Creates a new timeout callback handler.\n   * @param delay the delay in milliseconds after which the callback should be executed\n   * @param callback the callback to execute after the delay time\n   * @param repeat if true, call the callback repeatedly in delay intervals\n   */\n  constructor(delay: number, callback: () => void, repeat: boolean = false) {\n    this.delay = delay;\n    this.callback = callback;\n    this.repeat = repeat;\n    this.timeoutOrIntervalId = 0;\n    this.active = false;\n    this.suspended = false;\n  }\n\n  /**\n   * Starts the timeout and calls the callback when the timeout delay has passed. Has no effect when the timeout is\n   * suspended.\n   * @returns {Timeout} the current timeout (so the start call can be chained to the constructor)\n   */\n  start(): this {\n    this.reset();\n    return this;\n  }\n\n  /**\n   * Clears the timeout. The callback will not be called if clear is called during the timeout.\n   */\n  clear(): void {\n    this.clearInternal();\n  }\n\n  /**\n   * Suspends the timeout. The callback will not be called and calls to `start` and `reset` will be ignored until the\n   * timeout is resumed.\n   */\n  suspend() {\n    this.suspended = true;\n    this.clearInternal();\n\n    return this;\n  }\n\n  /**\n   * Resumes the timeout.\n   * @param reset whether to reset the timeout after resuming\n   */\n  resume(reset: boolean) {\n    this.suspended = false;\n\n    if (reset) {\n      this.reset();\n    }\n\n    return this;\n  }\n\n  /**\n   * Resets the passed timeout delay to zero. Can be used to defer the calling of the callback. Has no effect if the\n   * timeout is suspended.\n   */\n  reset(): void {\n    this.clearInternal();\n\n    if (this.suspended) {\n      return;\n    }\n\n    if (this.repeat) {\n      this.timeoutOrIntervalId = setInterval(this.callback, this.delay);\n    } else {\n      this.timeoutOrIntervalId = setTimeout(() => {\n        this.active = false;\n        this.callback();\n      }, this.delay);\n    }\n    this.active = true;\n  }\n\n  isActive(): boolean {\n    return this.active;\n  }\n\n  private clearInternal(): void {\n    if (this.repeat) {\n      clearInterval(this.timeoutOrIntervalId);\n    } else {\n      clearTimeout(this.timeoutOrIntervalId);\n    }\n    this.active = false;\n  }\n}","import { GoBackButton } from './../custom/ts/components/gobackbutton';\nimport { ResetButton } from './../custom/ts/components/resetbutton';\nimport { RadioModeToggleButton } from './../custom/ts/components/radiomode/radiomodetogglebutton';\nimport { QuanteecConsumptions } from './../custom/ts/components/quanteecconsumptions';\n\nimport { PlaybackJumpControlsOverlay } from '../custom/ts/components/playbackjumpoverlay';\nimport { SubtitleOverlay } from './components/subtitleoverlay';\nimport { SettingsPanelPage } from './components/settingspanelpage';\nimport { SettingsPanelItem } from './components/settingspanelitem';\nimport { VideoQualitySelectBox } from './components/videoqualityselectbox';\nimport { PlaybackSpeedSelectBox } from './components/playbackspeedselectbox';\nimport { AudioTrackSelectBox } from './components/audiotrackselectbox';\nimport { AudioQualitySelectBox } from './components/audioqualityselectbox';\nimport { SettingsPanel } from './components/settingspanel';\nimport { SubtitleSettingsPanelPage } from './components/subtitlesettings/subtitlesettingspanelpage';\nimport { SettingsPanelPageOpenButton } from './components/settingspanelpageopenbutton';\nimport { SubtitleSettingsLabel } from './components/subtitlesettings/subtitlesettingslabel';\nimport { SubtitleSelectBox } from './components/subtitleselectbox';\nimport { ControlBar } from './components/controlbar';\nimport { Container, ContainerConfig } from './components/container';\nimport { PlaybackTimeLabel, PlaybackTimeLabelMode } from './components/playbacktimelabel';\nimport { SeekBar } from './components/seekbar';\nimport { SeekBarLabel } from './components/seekbarlabel';\nimport { PlaybackToggleButton } from './components/playbacktogglebutton';\nimport { VolumeToggleButton } from './components/volumetogglebutton';\nimport { VolumeSlider } from './components/volumeslider';\nimport { Spacer } from './components/spacer';\nimport { PictureInPictureToggleButton } from './components/pictureinpicturetogglebutton';\nimport { AirPlayToggleButton } from './components/airplaytogglebutton';\nimport { CastToggleButton } from './components/casttogglebutton';\nimport { VRToggleButton } from './components/vrtogglebutton';\nimport { SettingsToggleButton } from './components/settingstogglebutton';\nimport { FullscreenToggleButton } from './components/fullscreentogglebutton';\nimport { UIContainer } from './components/uicontainer';\nimport { BufferingOverlay } from './components/bufferingoverlay';\nimport { PlaybackToggleOverlay } from './components/playbacktoggleoverlay';\nimport { CastStatusOverlay } from './components/caststatusoverlay';\nimport { TitleBar } from './components/titlebar';\nimport { RecommendationOverlay } from './components/recommendationoverlay';\nimport { Watermark } from './components/watermark';\nimport { ErrorMessageOverlay } from './components/errormessageoverlay';\nimport { AdClickOverlay } from './components/adclickoverlay';\nimport { AdMessageLabel } from './components/admessagelabel';\nimport { AdSkipButton } from './components/adskipbutton';\nimport { CloseButton } from './components/closebutton';\n\nimport {\n  MetadataLabel,\n  MetadataLabelContent,\n} from './components/metadatalabel';\nimport { PlayerUtils } from './playerutils';\nimport { Label } from './components/label';\nimport { CastUIContainer } from './components/castuicontainer';\nimport { UIConditionContext, UIManager } from './uimanager';\nimport { UIConfig } from './uiconfig';\nimport { PlayerAPI } from 'bitmovin-player';\nimport { i18n } from './localization/i18n';\nimport { SubtitleListBox } from './components/subtitlelistbox';\nimport { AudioTrackListBox } from './components/audiotracklistbox';\nimport { SpatialNavigation } from './spatialnavigation/spatialnavigation';\nimport { RootNavigationGroup } from './spatialnavigation/rootnavigationgroup';\nimport { ListNavigationGroup, ListOrientation } from './spatialnavigation/ListNavigationGroup';\nimport { EcoModeContainer } from './components/ecomodecontainer';\n\ndeclare global {\n  interface Window {\n    bitmovin: any;\n  }\n}\n\nlet uiManager: UIManager;\nlet playerApi: PlayerAPI;\nlet uiConfig: UIConfig;\n\nexport namespace UIFactory {\n  export function buildDefaultUI(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    return UIFactory.buildModernUI(player, config);\n  }\n\n  export function buildDefaultSmallScreenUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    uiConfig = config;\n    playerApi = player;\n    uiManager = UIFactory.buildModernSmallScreenUI(player, config);\n    return uiManager;\n  }\n\n  export function buildDefaultCastReceiverUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return UIFactory.buildModernCastReceiverUI(player, config);\n  }\n\n  export function buildDefaultTvUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return UIFactory.buildModernTvUI(player, config);\n  }\n\n  export function modernUI({ ecoMode, radioModeAvailable }: UIConfig) {\n    let subtitleOverlay = new SubtitleOverlay();\n\n    let mainSettingsPanelPage: SettingsPanelPage;\n\n    const components: Container<ContainerConfig>[] = [\n      new SettingsPanelItem(i18n.getLocalizer('settings.video.quality'), new VideoQualitySelectBox()),\n      new SettingsPanelItem(i18n.getLocalizer('speed'), new PlaybackSpeedSelectBox()),\n      new SettingsPanelItem(i18n.getLocalizer('settings.audio.track'), new AudioTrackSelectBox()),\n      new SettingsPanelItem(i18n.getLocalizer('settings.audio.quality'), new AudioQualitySelectBox()),\n    ];\n\n    if (ecoMode) {\n      const ecoModeContainer = new EcoModeContainer();\n\n      ecoModeContainer.setOnToggleCallback(() => {\n        // forces the browser to re-calculate the height of the settings panel when adding/removing elements\n        settingsPanel.getDomElement().css({ width: '', height: '' });\n      });\n\n      components.unshift(ecoModeContainer);\n    }\n\n    mainSettingsPanelPage = new SettingsPanelPage({\n      components,\n    });\n\n    let settingsPanel = new SettingsPanel({\n      components: [mainSettingsPanelPage],\n      hidden: true,\n    });\n\n    let subtitleSettingsPanelPage = new SubtitleSettingsPanelPage({\n      settingsPanel: settingsPanel,\n      overlay: subtitleOverlay,\n    });\n\n    const subtitleSelectBox = new SubtitleSelectBox();\n\n    let subtitleSettingsOpenButton = new SettingsPanelPageOpenButton({\n      targetPage: subtitleSettingsPanelPage,\n      container: settingsPanel,\n      ariaLabel: i18n.getLocalizer('settings.subtitles'),\n      text: i18n.getLocalizer('open'),\n    });\n\n    mainSettingsPanelPage.addComponent(\n      new SettingsPanelItem(\n        new SubtitleSettingsLabel({\n          text: i18n.getLocalizer('settings.subtitles'),\n          opener: subtitleSettingsOpenButton,\n        }),\n        subtitleSelectBox,\n        {\n          role: 'menubar',\n        },\n      ),\n    );\n\n    settingsPanel.addComponent(subtitleSettingsPanelPage);\n\n    let containerComponents = [\n      new PlaybackToggleButton(),\n      new VolumeToggleButton(),\n      new VolumeSlider(),\n      new Spacer(),\n      new PictureInPictureToggleButton(),\n      new AirPlayToggleButton(),\n      new CastToggleButton(),\n      new VRToggleButton(),\n      new QuanteecConsumptions(),\n      new SettingsToggleButton({ settingsPanel: settingsPanel }),\n      new FullscreenToggleButton(),\n    ];\n\n    if (radioModeAvailable) {\n      containerComponents.splice(\n        7,\n        0,\n        new RadioModeToggleButton({ active: false }),\n      );\n    }\n\n    let controlBar = new ControlBar({\n      components: [\n        settingsPanel,\n        new Container({\n          components: [\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n              hideInLivePlayback: true,\n            }),\n            new SeekBar({ label: new SeekBarLabel() }),\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.TotalTime,\n              cssClasses: ['text-right'],\n            }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n        new Container({\n          components: containerComponents,\n          cssClasses: ['controlbar-bottom'],\n        }),\n      ],\n    });\n\n    return new UIContainer({\n      components: [\n        subtitleOverlay,\n        new BufferingOverlay(),\n        new PlaybackToggleOverlay(),\n        new PlaybackJumpControlsOverlay(),\n        new CastStatusOverlay(),\n        controlBar,\n        new TitleBar(),\n        new RecommendationOverlay(),\n        new ErrorMessageOverlay(),\n      ],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernAdsUI() {\n    return new UIContainer({\n      components: [\n        new BufferingOverlay(),\n        new AdClickOverlay(),\n        new PlaybackToggleOverlay(),\n        new Container({\n          components: [new AdMessageLabel({ text: i18n.getLocalizer('ads.remainingTime') }), new AdSkipButton()],\n          cssClass: 'ui-ads-status',\n        }),\n        new ControlBar({\n          components: [\n            new Container({\n              components: [\n                new PlaybackToggleButton(),\n                new VolumeToggleButton(),\n                new VolumeSlider(),\n                new Spacer(),\n                new FullscreenToggleButton(),\n              ],\n              cssClasses: ['controlbar-bottom'],\n            }),\n          ],\n        }),\n      ],\n      cssClasses: ['ui-skin-ads'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernSmallScreenUI({\n    radioModeAvailable,\n  }: {\n    radioModeAvailable: boolean;\n  }) {\n    let subtitleOverlay = new SubtitleOverlay();\n\n    let mainSettingsPanelPage = new SettingsPanelPage({\n      components: [\n        new SettingsPanelItem(\n          i18n.getLocalizer('settings.video.quality'),\n          new VideoQualitySelectBox(),\n        ),\n        new SettingsPanelItem(\n          i18n.getLocalizer('speed'),\n          new PlaybackSpeedSelectBox(),\n        ),\n        new SettingsPanelItem(\n          i18n.getLocalizer('settings.audio.track'),\n          new AudioTrackSelectBox(),\n        ),\n        new SettingsPanelItem(\n          i18n.getLocalizer('settings.audio.quality'),\n          new AudioQualitySelectBox(),\n        ),\n      ],\n    });\n\n    let settingsPanel = new SettingsPanel({\n      components: [mainSettingsPanelPage],\n      hidden: true,\n      pageTransitionAnimation: false,\n      hideDelay: -1,\n    });\n\n    let subtitleSettingsPanelPage = new SubtitleSettingsPanelPage({\n      settingsPanel: settingsPanel,\n      overlay: subtitleOverlay,\n    });\n\n    let subtitleSettingsOpenButton = new SettingsPanelPageOpenButton({\n      targetPage: subtitleSettingsPanelPage,\n      container: settingsPanel,\n      ariaLabel: i18n.getLocalizer('settings.subtitles'),\n      text: i18n.getLocalizer('open'),\n    });\n\n    const subtitleSelectBox = new SubtitleSelectBox();\n\n    mainSettingsPanelPage.addComponent(\n      new SettingsPanelItem(\n        new SubtitleSettingsLabel({\n          text: i18n.getLocalizer('settings.subtitles'),\n          opener: subtitleSettingsOpenButton,\n        }),\n        subtitleSelectBox,\n        {\n          role: 'menubar',\n        },\n      ),\n    );\n\n    settingsPanel.addComponent(subtitleSettingsPanelPage);\n\n    settingsPanel.addComponent(new CloseButton({ target: settingsPanel }));\n    subtitleSettingsPanelPage.addComponent(\n      new CloseButton({ target: settingsPanel }),\n    );\n\n    let controlBar = new ControlBar({\n      components: [\n        new Container({\n          components: [\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n              hideInLivePlayback: true,\n            }),\n            new SeekBar({ label: new SeekBarLabel() }),\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.TotalTime,\n              cssClasses: ['text-right'],\n            }),\n            // new FullscreenToggleButton({\n            //   cssClasses: ['controlbar-fullscreen-toggle-button'],\n            // }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n      ],\n    });\n\n    let titleBarComponents = [];\n    const isBrowser = !window.bitmovin.customMessageHandler;\n\n    if (!isBrowser) {\n      titleBarComponents.push(new GoBackButton());\n    } else {\n      titleBarComponents.push(new QuanteecConsumptions());\n    }\n\n    titleBarComponents = [\n      ...titleBarComponents,\n      new MetadataLabel({ content: MetadataLabelContent.Title }),\n      new CastToggleButton(),\n      new VRToggleButton(),\n      new PictureInPictureToggleButton(),\n      new AirPlayToggleButton(),\n      new SettingsToggleButton({ settingsPanel: settingsPanel }),\n    ];\n\n    if (radioModeAvailable) {\n      titleBarComponents.splice(\n        !isBrowser ? 5 : 4,\n        0,\n        new RadioModeToggleButton({ active: false }),\n      );\n    }\n\n    return new UIContainer({\n      components: [\n        subtitleOverlay,\n        new BufferingOverlay(),\n        new CastStatusOverlay(),\n        new PlaybackToggleOverlay(),\n        new PlaybackJumpControlsOverlay(),\n        new RecommendationOverlay(),\n        controlBar,\n        new TitleBar({\n          components: titleBarComponents,\n        }),\n        settingsPanel,\n        new ErrorMessageOverlay(),\n      ],\n      cssClasses: ['ui-skin-smallscreen'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernSmallScreenAdsUI() {\n    return new UIContainer({\n      components: [\n        new BufferingOverlay(),\n        new AdClickOverlay(),\n        new PlaybackToggleOverlay(),\n        new TitleBar({\n          components: [\n            // dummy label with no content to move buttons to the right\n            new Label({ cssClass: 'label-metadata-title' }),\n            new FullscreenToggleButton(),\n          ],\n        }),\n        new Container({\n          components: [new AdMessageLabel({ text: 'Ad: {remainingTime} secs' }), new AdSkipButton()],\n          cssClass: 'ui-ads-status',\n        }),\n      ],\n      cssClasses: ['ui-skin-ads', 'ui-skin-smallscreen'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function modernCastReceiverUI() {\n    let controlBar = new ControlBar({\n      components: [\n        new Container({\n          components: [\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n              hideInLivePlayback: true,\n            }),\n            new SeekBar({ smoothPlaybackPositionUpdateIntervalMs: -1 }),\n            new PlaybackTimeLabel({\n              timeLabelMode: PlaybackTimeLabelMode.TotalTime,\n              cssClasses: ['text-right'],\n            }),\n          ],\n          cssClasses: ['controlbar-top'],\n        }),\n      ],\n    });\n\n    return new CastUIContainer({\n      components: [\n        new SubtitleOverlay(),\n        new BufferingOverlay(),\n        new PlaybackToggleOverlay(),\n        controlBar,\n        new TitleBar({ keepHiddenWithoutMetadata: true }),\n        new ErrorMessageOverlay(),\n      ],\n      cssClasses: ['ui-skin-cast-receiver'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n  }\n\n  export function buildModernUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    // show smallScreen UI only on mobile/handheld devices\n    let smallScreenSwitchWidth = 600;\n\n    return new UIManager(\n      player,\n      [\n        {\n          ui: modernRadioModeUI(),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && context.isRadioModeActive;\n          },\n        },\n        {\n          ui: modernSmallScreenAdsUI(),\n          condition: (context: UIConditionContext) => {\n            return (\n              context.isMobile && context.documentWidth < smallScreenSwitchWidth && context.isAd && context.adRequiresUi\n            );\n          },\n        },\n        {\n          ui: modernAdsUI(),\n          condition: (context: UIConditionContext) => {\n            return context.isAd && context.adRequiresUi;\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: true }),\n          condition: (context: UIConditionContext) => {\n            return (\n              !context.isAd &&\n              !context.adRequiresUi &&\n              context.isMobile &&\n              context.documentWidth < smallScreenSwitchWidth &&\n              !context.isRadioModeActive &&\n              context.isRadioModeAvailable\n            );\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: false }),\n          condition: (context: UIConditionContext) => {\n            return (\n              !context.isAd &&\n              !context.adRequiresUi &&\n              context.isMobile &&\n              context.documentWidth < smallScreenSwitchWidth &&\n              !context.isRadioModeActive &&\n              !context.isRadioModeAvailable\n            );\n          },\n        },\n        {\n          ui: modernUI({ ...config, radioModeAvailable: true }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && context.isRadioModeAvailable;\n          },\n        },\n        {\n          ui: modernUI({ ...config, radioModeAvailable: false }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && !context.isRadioModeAvailable;\n          },\n        },\n      ],\n      config,\n    );\n  }\n\n  export function buildModernSmallScreenUI(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    return new UIManager(\n      player,\n      [\n        {\n          ui: modernRadioModeUI(),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && context.isRadioModeActive;\n          },\n        },\n        {\n          ui: modernSmallScreenAdsUI(),\n          condition: (context: UIConditionContext) => {\n            return context.isAd && context.adRequiresUi;\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: true }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && context.isRadioModeAvailable;\n          },\n        },\n        {\n          ui: modernSmallScreenUI({ radioModeAvailable: false }),\n          condition: (context: UIConditionContext) => {\n            return !context.isAd && !context.adRequiresUi && !context.isRadioModeActive && !context.isRadioModeAvailable;\n          },\n        },\n      ],\n      config,\n    );\n  }\n\n  export function buildModernCastReceiverUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return new UIManager(player, modernCastReceiverUI(), config);\n  }\n\n  export function buildModernTvUI(player: PlayerAPI, config: UIConfig = {}): UIManager {\n    return new UIManager(\n      player,\n      [\n        {\n          ...modernTvUI(),\n        },\n      ],\n      config,\n    );\n  }\n\n  export function modernTvUI() {\n    const subtitleListBox = new SubtitleListBox();\n    const subtitleListPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [new SettingsPanelItem(null, subtitleListBox)],\n        }),\n      ],\n      hidden: true,\n    });\n\n    const audioTrackListBox = new AudioTrackListBox();\n    const audioTrackListPanel = new SettingsPanel({\n      components: [\n        new SettingsPanelPage({\n          components: [new SettingsPanelItem(null, audioTrackListBox)],\n        }),\n      ],\n      hidden: true,\n    });\n\n    const seekBar = new SeekBar({ label: new SeekBarLabel() });\n    const playbackToggleOverlay = new PlaybackToggleOverlay();\n    const subtitleToggleButton = new SettingsToggleButton({\n      settingsPanel: subtitleListPanel,\n      autoHideWhenNoActiveSettings: true,\n      cssClass: 'ui-subtitlesettingstogglebutton',\n      text: i18n.getLocalizer('settings.subtitles'),\n    });\n    const audioToggleButton = new SettingsToggleButton({\n      settingsPanel: audioTrackListPanel,\n      autoHideWhenNoActiveSettings: true,\n      cssClass: 'ui-audiotracksettingstogglebutton',\n      ariaLabel: i18n.getLocalizer('settings.audio.track'),\n      text: i18n.getLocalizer('settings.audio.track'),\n    });\n    const uiContainer = new UIContainer({\n      components: [\n        new SubtitleOverlay(),\n        new BufferingOverlay(),\n        playbackToggleOverlay,\n        new ControlBar({\n          components: [\n            new Container({\n              components: [\n                new PlaybackTimeLabel({\n                  timeLabelMode: PlaybackTimeLabelMode.CurrentTime,\n                  hideInLivePlayback: true,\n                }),\n                seekBar,\n                new PlaybackTimeLabel({\n                  timeLabelMode: PlaybackTimeLabelMode.RemainingTime,\n                  cssClasses: ['text-right'],\n                }),\n              ],\n              cssClasses: ['controlbar-top'],\n            }),\n          ],\n        }),\n        new TitleBar({\n          components: [\n            new Container({\n              components: [\n                new MetadataLabel({ content: MetadataLabelContent.Title }),\n                subtitleToggleButton,\n                audioToggleButton,\n              ],\n              cssClasses: ['ui-titlebar-top'],\n            }),\n            new Container({\n              components: [\n                new MetadataLabel({\n                  content: MetadataLabelContent.Description,\n                }),\n                subtitleListPanel,\n                audioTrackListPanel,\n              ],\n              cssClasses: ['ui-titlebar-bottom'],\n            }),\n          ],\n        }),\n        new RecommendationOverlay(),\n        new ErrorMessageOverlay(),\n      ],\n      cssClasses: ['ui-skin-tv'],\n      hideDelay: 2000,\n      hidePlayerStateExceptions: [\n        PlayerUtils.PlayerState.Prepared,\n        PlayerUtils.PlayerState.Paused,\n        PlayerUtils.PlayerState.Finished,\n      ],\n    });\n\n    const spatialNavigation = new SpatialNavigation(\n      new RootNavigationGroup(\n        uiContainer,\n        playbackToggleOverlay,\n        seekBar,\n        audioToggleButton,\n        subtitleToggleButton,\n      ),\n      new ListNavigationGroup(\n        ListOrientation.Vertical,\n        subtitleListPanel,\n        subtitleListBox,\n      ),\n      new ListNavigationGroup(\n        ListOrientation.Vertical,\n        audioTrackListPanel,\n        audioTrackListBox,\n      ),\n    );\n\n    return {\n      ui: uiContainer,\n      spatialNavigation: spatialNavigation,\n    };\n  }\n\n  export function modernRadioModeUI() {\n    return new UIContainer({\n      components: [\n        new ControlBar({\n          components: [\n            new Container({\n              components: [\n                new PlaybackToggleButton(),\n                new SeekBar({ label: new SeekBarLabel() }),\n                new RadioModeToggleButton({ active: true }),\n              ],\n              cssClasses: ['controlbar-top'],\n            }),\n          ],\n        }),\n      ],\n      cssClasses: ['ui-skin-radio'],\n      hideDelay: -1,\n    });\n  }\n\n  export function buildModernRadioModeUI(\n    player: PlayerAPI,\n    config: UIConfig = {},\n  ): UIManager {\n    return new UIManager(\n      player,\n      [\n        {\n          ui: modernRadioModeUI(),\n        },\n      ],\n      config,\n    );\n  }\n}\n","import {UIContainer} from './components/uicontainer';\nimport {DOM} from './dom';\nimport { Component, ComponentConfig, ViewModeChangedEventArgs } from './components/component';\nimport {Container} from './components/container';\nimport { SeekBar, SeekBarMarker } from './components/seekbar';\nimport {NoArgs, EventDispatcher, CancelEventArgs} from './eventdispatcher';\nimport {UIUtils} from './uiutils';\nimport {ArrayUtils} from './arrayutils';\nimport {BrowserUtils} from './browserutils';\nimport { TimelineMarker, UIConfig } from './uiconfig';\nimport { PlayerAPI, PlayerEventCallback, PlayerEventBase, PlayerEvent, AdEvent, LinearAd } from 'bitmovin-player';\nimport { VolumeController } from './volumecontroller';\nimport { i18n, CustomVocabulary, Vocabularies } from './localization/i18n';\nimport { FocusVisibilityTracker } from './focusvisibilitytracker';\nimport { isMobileV3PlayerAPI, MobileV3PlayerAPI, MobileV3PlayerEvent } from './mobilev3playerapi';\nimport { SpatialNavigation } from './spatialnavigation/spatialnavigation';\nimport { SubtitleSettingsManager } from './components/subtitlesettings/subtitlesettingsmanager';\nimport { StorageUtils } from './storageutils';\n\n/**\n * @category Configs\n */\nexport interface LocalizationConfig {\n  /**\n   * Sets the desired language, and falls back to 'en' if there is no vocabulary for the desired language. Setting it\n   * to \"auto\" will enable language detection from the browser's locale.\n   */\n  language?: 'auto' | 'en' | 'de' | string;\n  /**\n   * A map of `language` to {@link CustomVocabulary} definitions. Can be used to overwrite default translations and add\n   * custom strings or additional languages.\n   */\n  vocabularies?: Vocabularies;\n}\n\n/**\n * @category Configs\n */\nexport interface InternalUIConfig extends UIConfig {\n  events: {\n    /**\n     * Fires when the configuration has been updated/changed.\n     */\n    onUpdated: EventDispatcher<UIManager, void>;\n  };\n  volumeController: VolumeController;\n}\n\n/**\n * The context that will be passed to a {@link UIConditionResolver} to determine if it's conditions fulfil the context.\n */\nexport interface UIConditionContext {\n  /**\n   * Tells if the player is loading or playing an ad.\n   */\n  isAd: boolean;\n  /**\n   * Tells if the current ad requires an external UI, if {@link #isAd} is true.\n   */\n  adRequiresUi: boolean;\n  /**\n   * Tells if the player is currently in fullscreen mode.\n   */\n  isFullscreen: boolean;\n  /**\n   * Tells if the UI is running in a mobile browser.\n   */\n  isMobile: boolean;\n  /**\n   * Tells if the player is in playing or paused state.\n   */\n  isPlaying: boolean;\n  /**\n   * The width of the player/UI element.\n   */\n  width: number;\n  /**\n   * The width of the document where the player/UI is embedded in.\n   */\n  documentWidth: number;\n  /**\n   * Tells if the radio mode is activated or not\n   */\n  isRadioModeActive: boolean;\n  /**\n   * Tells if the radio mode is available or not\n   */\n  isRadioModeAvailable: boolean;\n}\n\n/**\n * Resolves the conditions of its associated UI in a {@link UIVariant} upon a {@link UIConditionContext} and decides\n * if the UI should be displayed. If it returns true, the UI is a candidate for display; if it returns false, it will\n * not be displayed in the given context.\n */\nexport interface UIConditionResolver {\n  (context: UIConditionContext): boolean;\n}\n\n/**\n * Associates a UI instance with an optional {@link UIConditionResolver} that determines if the UI should be displayed.\n */\nexport interface UIVariant {\n  ui: UIContainer;\n  condition?: UIConditionResolver;\n  spatialNavigation?: SpatialNavigation;\n}\n\nexport interface ActiveUiChangedArgs extends NoArgs {\n  /**\n   * The previously active {@link UIInstanceManager} prior to the {@link UIManager} switching to a different UI variant.\n   */\n  previousUi: UIInstanceManager;\n  /**\n   * The currently active {@link UIInstanceManager}.\n   */\n  currentUi: UIInstanceManager;\n}\n\nexport class UIManager {\n\n  private player: PlayerAPI;\n  private uiContainerElement: DOM;\n  private uiVariants: UIVariant[];\n  private uiInstanceManagers: InternalUIInstanceManager[];\n  private currentUi: InternalUIInstanceManager;\n  private config: InternalUIConfig; // Conjunction of provided uiConfig and sourceConfig from the player\n  private managerPlayerWrapper: PlayerWrapper;\n  private focusVisibilityTracker: FocusVisibilityTracker;\n  private isRadioModeActive: boolean;\n  private isRadioModeAvailable: boolean;\n  private subtitleSettingsManager: SubtitleSettingsManager;\n\n  private events = {\n    onUiVariantResolve: new EventDispatcher<UIManager, UIConditionContext>(),\n    onActiveUiChanged: new EventDispatcher<UIManager, ActiveUiChangedArgs>(),\n  };\n\n  /**\n   * Creates a UI manager with a single UI variant that will be permanently shown.\n   * @param player the associated player of this UI\n   * @param ui the UI to add to the player\n   * @param uiconfig optional UI configuration\n   */\n  constructor(player: PlayerAPI, ui: UIContainer, uiconfig?: UIConfig);\n  /**\n   * Creates a UI manager with a list of UI variants that will be dynamically selected and switched according to\n   * the context of the UI.\n   *\n   * Every time the UI context changes, the conditions of the UI variants will be sequentially resolved and the first\n   * UI, whose condition evaluates to true, will be selected and displayed. The last variant in the list might omit the\n   * condition resolver and will be selected as default/fallback UI when all other conditions fail. If there is no\n   * fallback UI and all conditions fail, no UI will be displayed.\n   *\n   * @param player the associated player of this UI\n   * @param uiVariants a list of UI variants that will be dynamically switched\n   * @param uiconfig optional UI configuration\n   */\n  constructor(player: PlayerAPI, uiVariants: UIVariant[], uiconfig?: UIConfig);\n  constructor(player: PlayerAPI, playerUiOrUiVariants: UIContainer | UIVariant[], uiconfig: UIConfig = {}) {\n    this.isRadioModeActive = window.isRadioModeActive;\n    this.isRadioModeAvailable = window.isRadioModeAvailable;\n\n    if (playerUiOrUiVariants instanceof UIContainer) {\n      // Single-UI constructor has been called, transform arguments to UIVariant[] signature\n      let playerUi = <UIContainer>playerUiOrUiVariants;\n      let uiVariants = [];\n\n      // Add the default player UI\n      uiVariants.push({ ui: playerUi });\n\n      this.uiVariants = uiVariants;\n    } else {\n      // Default constructor (UIVariant[]) has been called\n      this.uiVariants = <UIVariant[]>playerUiOrUiVariants;\n    }\n\n    this.subtitleSettingsManager = new SubtitleSettingsManager();\n    this.player = player;\n    this.managerPlayerWrapper = new PlayerWrapper(player);\n\n    // ensure that at least the metadata object does exist in the uiconfig\n    uiconfig.metadata = uiconfig.metadata ? uiconfig.metadata : {};\n\n    this.config = {\n      playbackSpeedSelectionEnabled: true, // Switch on speed selector by default\n      autoUiVariantResolve: true, // Switch on auto UI resolving by default\n      disableAutoHideWhenHovered: false, // Disable auto hide when UI is hovered\n      enableSeekPreview: true,\n      ...uiconfig,\n      events: {\n        onUpdated: new EventDispatcher<UIManager, void>(),\n      },\n      volumeController: new VolumeController(\n        this.managerPlayerWrapper.getPlayer(),\n      ),\n    };\n    try {\n      // Mobile\n      if (window.bitmovin.customMessageHandler) {\n        window.bitmovin.customMessageHandler.on(\n          'globalRadioModeChanged',\n          (data: string) => {\n            const { activated, available } = JSON.parse(data);\n            this.isRadioModeActive = activated;\n            this.isRadioModeAvailable = available;\n\n            this.resolveUiVariant({\n              isRadioModeActive: activated,\n              isRadioModeAvailable: available,\n            });\n          },\n        );\n      }\n      // Web\n\n      window.addEventListener('isRadioModeActiveChange', this.handleIsRadioModeActiveChange);\n      window.addEventListener('isRadioModeAvailableChange', this.handleIsRadioModeAvailableChange);\n    } catch (error) {}\n\n    /**\n     * Gathers configuration data from the UI config and player source config and creates a merged UI config\n     * that is used throughout the UI instance.\n     */\n    const updateConfig = () => {\n      const playerSourceConfig = player.getSource() || {};\n      this.config.metadata = JSON.parse(\n        JSON.stringify(uiconfig.metadata || {}),\n      );\n\n      // Extract the UI-related config properties from the source config\n      const playerSourceUiConfig: UIConfig = {\n        metadata: {\n          // TODO move metadata into source.metadata namespace in player v8\n          title: playerSourceConfig.title,\n          description: playerSourceConfig.description,\n          markers: (playerSourceConfig as any).markers,\n        },\n        recommendations: (playerSourceConfig as any).recommendations,\n      };\n\n      // Player source config takes precedence over the UI config, because the config in the source is attached\n      // to a source which changes with every player.load, whereas the UI config stays the same for the whole\n      // lifetime of the player instance.\n      this.config.metadata.title =\n        playerSourceUiConfig.metadata.title || uiconfig.metadata.title;\n      this.config.metadata.description =\n        playerSourceUiConfig.metadata.description ||\n        uiconfig.metadata.description;\n      this.config.metadata.markers =\n        playerSourceUiConfig.metadata.markers ||\n        uiconfig.metadata.markers ||\n        [];\n      this.config.recommendations =\n        playerSourceUiConfig.recommendations || uiconfig.recommendations || [];\n      this.config.metadata.title = playerSourceUiConfig.metadata.title || uiconfig.metadata.title;\n      this.config.metadata.description = playerSourceUiConfig.metadata.description || uiconfig.metadata.description;\n      this.config.metadata.markers = playerSourceUiConfig.metadata.markers || uiconfig.metadata.markers || [];\n      this.config.recommendations = playerSourceUiConfig.recommendations || uiconfig.recommendations || [];\n\n      StorageUtils.setStorageApiDisabled(uiconfig);\n    };\n\n    updateConfig();\n    this.subtitleSettingsManager.initialize();\n\n    // Update the source configuration when a new source is loaded and dispatch onUpdated\n    const updateSource = () => {\n      updateConfig();\n      this.config.events.onUpdated.dispatch(this);\n    };\n\n    const wrappedPlayer = this.managerPlayerWrapper.getPlayer();\n\n    wrappedPlayer.on(\n      this.player.exports.PlayerEvent.SourceLoaded,\n      updateSource,\n    );\n\n    // The PlaylistTransition event is only available on Mobile v3 for now.\n    // This event is fired when a new source becomes active in the player.\n    if (isMobileV3PlayerAPI(wrappedPlayer)) {\n      wrappedPlayer.on(MobileV3PlayerEvent.PlaylistTransition, updateSource);\n    }\n\n    if (uiconfig.container) {\n      // Unfortunately \"uiContainerElement = new DOM(config.container)\" will not accept the container with\n      // string|HTMLElement type directly, although it accepts both types, so we need to spit these two cases up here.\n      // TODO check in upcoming TS versions if the container can be passed in directly, or fix the constructor\n      this.uiContainerElement =\n        uiconfig.container instanceof HTMLElement\n          ? new DOM(uiconfig.container)\n          : new DOM(uiconfig.container);\n    } else {\n      this.uiContainerElement = new DOM(player.getContainer());\n    }\n\n    // Create UI instance managers for the UI variants\n    // The instance managers map to the corresponding UI variants by their array index\n    this.uiInstanceManagers = [];\n    let uiVariantsWithoutCondition = [];\n    for (let uiVariant of this.uiVariants) {\n      if (uiVariant.condition == null) {\n        // Collect variants without conditions for error checking\n        uiVariantsWithoutCondition.push(uiVariant);\n      }\n      // Create the instance manager for a UI variant\n      this.uiInstanceManagers.push(new InternalUIInstanceManager(\n        player,\n        uiVariant.ui,\n        this.config,\n        this.subtitleSettingsManager,\n        uiVariant.spatialNavigation,\n      ));\n    }\n    // Make sure that there is only one UI variant without a condition\n    // It does not make sense to have multiple variants without condition, because only the first one in the list\n    // (the one with the lowest index) will ever be selected.\n    if (uiVariantsWithoutCondition.length > 1) {\n      throw Error(\n        'Too many UIs without a condition: You cannot have more than one default UI',\n      );\n    }\n    // Make sure that the default UI variant, if defined, is at the end of the list (last index)\n    // If it comes earlier, the variants with conditions that come afterwards will never be selected because the\n    // default variant without a condition always evaluates to 'true'\n    if (\n      uiVariantsWithoutCondition.length > 0 &&\n      uiVariantsWithoutCondition[0] !==\n        this.uiVariants[this.uiVariants.length - 1]\n    ) {\n      throw Error(\n        'Invalid UI variant order: the default UI (without condition) must be at the end of the list',\n      );\n    }\n\n    let adStartedEvent: AdEvent = null; // keep the event stored here during ad playback\n\n    // Dynamically select a UI variant that matches the current UI condition.\n    let resolveUiVariant = (event: PlayerEventBase) => {\n      // Make sure that the AdStarted event data is persisted through ad playback in case other events happen\n      // in the meantime, e.g. player resize. We need to store this data because there is no other way to find out\n      // ad details while an ad is playing (in v8.0 at least; from v8.1 there will be ads.getActiveAd()).\n      // Existing event data signals that an ad is currently active (instead of ads.isLinearAdActive()).\n      if (event != null) {\n        switch (event.type) {\n          // The ads UI is shown upon the first AdStarted event. Subsequent AdStarted events within an ad break\n          // will not change the condition context and thus not lead to undesired UI variant resolving.\n          // The ads UI is shown upon AdStarted instead of AdBreakStarted because there can be a loading delay\n          // between these two events in the player, and the AdBreakStarted event does not carry any metadata to\n          // initialize the ads UI, so it would be rendered in an uninitialized state for a certain amount of time.\n          // TODO show ads UI upon AdBreakStarted and display loading overlay between AdBreakStarted and first AdStarted\n          // TODO display loading overlay between AdFinished and next AdStarted\n          case player.exports.PlayerEvent.AdStarted:\n            adStartedEvent = event as AdEvent;\n            break;\n          // The ads UI is hidden only when the ad break is finished, i.e. not on AdFinished events. This way we keep\n          // the ads UI variant active throughout an ad break, as reacting to AdFinished would lead to undesired UI\n          // variant switching between two ads in an ad break, e.g. ads UI -> AdFinished -> content UI ->\n          // AdStarted -> ads UI.\n          case player.exports.PlayerEvent.AdBreakFinished:\n            adStartedEvent = null;\n            // When switching to a variant for the first time, a config.events.onUpdated event is fired to trigger a UI\n            // update of the new variant, because most components subscribe to this event to update themselves. When\n            // switching to the ads UI on the first AdStarted, all UI variants update themselves with the ad data, so\n            // when switching back to the \"normal\" UI it will carry properties of the ad instead of the main content.\n            // We thus fire this event here to force an UI update with the properties of the main content. This is\n            // basically a hack because the config.events.onUpdated event is abused in many places and not just used\n            // for config updates (e.g. adding a marker to the seekbar).\n            // TODO introduce an event that is fired when the playback content is updated, a switch to/from ads\n            this.config.events.onUpdated.dispatch(this);\n            break;\n          // When a new source is loaded during ad playback, there will be no Ad(Break)Finished event\n          case player.exports.PlayerEvent.SourceLoaded:\n          case player.exports.PlayerEvent.SourceUnloaded:\n            adStartedEvent = null;\n            break;\n        }\n      }\n\n      // Detect if an ad has started\n      let isAd = adStartedEvent != null;\n      let adRequiresUi = false;\n      if (isAd) {\n        let ad = adStartedEvent.ad;\n        // for now only linear ads can request a UI\n        if (ad.isLinear) {\n          let linearAd = ad as LinearAd;\n          adRequiresUi =\n            (linearAd.uiConfig && linearAd.uiConfig.requestsUi) || false;\n        }\n      }\n\n      if (adRequiresUi) {\n        // we dispatch onUpdated event because if there are multiple adBreaks for same position\n        // `Play` and `Playing` events will not be dispatched which will cause `PlaybackButton` state\n        // to be out of sync\n        this.config.events.onUpdated.dispatch(this);\n      }\n\n      this.resolveUiVariant(\n        {\n          isAd: isAd,\n          adRequiresUi: adRequiresUi,\n          isRadioModeActive: this.isRadioModeActive,\n          isRadioModeAvailable: this.isRadioModeAvailable,\n        },\n        (context) => {\n          // If this is an ad UI, we need to relay the saved ON_AD_STARTED event data so ad components can configure\n          // themselves for the current ad.\n          if (context.isAd) {\n            /* Relay the ON_AD_STARTED event to the ads UI\n             *\n             * Because the ads UI is initialized in the ON_AD_STARTED handler, i.e. when the ON_AD_STARTED event has\n             * already been fired, components in the ads UI that listen for the ON_AD_STARTED event never receive it.\n             * Since this can break functionality of components that rely on this event, we relay the event to the\n             * ads UI components with the following call.\n             */\n            this.currentUi\n              .getWrappedPlayer()\n              .fireEventInUI(\n                this.player.exports.PlayerEvent.AdStarted,\n                adStartedEvent,\n              );\n          }\n        },\n      );\n    };\n\n    // Listen to the following events to trigger UI variant resolution\n    if (this.config.autoUiVariantResolve) {\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.SourceLoaded, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.SourceUnloaded, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.Play, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.Paused, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.AdStarted, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.AdBreakFinished, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.PlayerResized, resolveUiVariant);\n      this.managerPlayerWrapper\n        .getPlayer()\n        .on(this.player.exports.PlayerEvent.ViewModeChanged, resolveUiVariant);\n    }\n\n    this.focusVisibilityTracker = new FocusVisibilityTracker('{{PREFIX}}');\n\n    // Initialize the UI\n    resolveUiVariant(null);\n  }\n\n  /**\n   * Exposes i18n.getLocalizer() function\n   * @returns {I18nApi.getLocalizer()}\n   */\n  static localize<V extends CustomVocabulary<Record<string, string>>>(key: keyof V) {\n    return i18n.getLocalizer(key);\n  }\n\n  /**\n   * Provide configuration to support Custom UI languages\n   * default language: 'en'\n   */\n  static setLocalizationConfig(localizationConfig: LocalizationConfig) {\n    i18n.setConfig(localizationConfig);\n  }\n\n  handleIsRadioModeActiveChange = (\n    event: CustomEvent<boolean | null>,\n  ) => {\n    this.isRadioModeActive = event.detail;\n  };\n\n  handleIsRadioModeAvailableChange = (\n    event: CustomEvent<boolean | null>,\n  ) => {\n    this.isRadioModeAvailable = event.detail;\n  };\n  getSubtitleSettingsManager() {\n    return this.subtitleSettingsManager;\n  }\n\n  getConfig(): UIConfig {\n    return this.config;\n  }\n\n  /**\n   * Returns the list of UI variants as passed into the constructor of {@link UIManager}.\n   * @returns {UIVariant[]} the list of available UI variants\n   */\n  getUiVariants(): UIVariant[] {\n    return this.uiVariants;\n  }\n\n  /**\n   * Switches to a UI variant from the list returned by {@link getUiVariants}.\n   * @param {UIVariant} uiVariant the UI variant to switch to\n   * @param {() => void} onShow a callback that is executed just before the new UI variant is shown\n   */\n  switchToUiVariant(uiVariant: UIVariant, onShow?: () => void): void {\n    let uiVariantIndex = this.uiVariants.indexOf(uiVariant);\n\n    const previousUi = this.currentUi;\n    const nextUi: InternalUIInstanceManager = this.uiInstanceManagers[uiVariantIndex];\n    // Determine if the UI variant is changing\n    // Only if the UI variant is changing, we need to do some stuff. Else we just leave everything as-is.\n    if (nextUi === this.currentUi) {\n      return;\n      // console.log('switched from ', this.currentUi ? this.currentUi.getUI() : 'none',\n      //   ' to ', nextUi ? nextUi.getUI() : 'none');\n    }\n\n    // Hide the currently active UI variant\n    if (this.currentUi) {\n      this.currentUi.getUI().hide();\n    }\n\n    // Assign the new UI variant as current UI\n    this.currentUi = nextUi;\n\n    // When we switch to a different UI instance, there's some additional stuff to manage. If we do not switch\n    // to an instance, we're done here.\n    if (this.currentUi == null) {\n      return;\n    }\n    // Add the UI to the DOM (and configure it) the first time it is selected\n    if (!this.currentUi.isConfigured()) {\n      this.addUi(this.currentUi);\n      // ensure that the internal state is ready for the upcoming show call\n      if (!this.currentUi.getUI().isHidden()) {\n        this.currentUi.getUI().hide();\n      }\n    }\n    if (onShow) {\n      onShow();\n    }\n    this.currentUi.getUI().show();\n    this.events.onActiveUiChanged.dispatch(this, { previousUi, currentUi: nextUi });\n  }\n\n  /**\n   * Triggers a UI variant switch as triggered by events when automatic switching is enabled. It allows to overwrite\n   * properties of the {@link UIConditionContext}.\n   * @param {Partial<UIConditionContext>} context an optional set of properties that overwrite properties of the\n   *   automatically determined context\n   * @param {(context: UIConditionContext) => void} onShow a callback that is executed just before the new UI variant\n   *   is shown (if a switch is happening)\n   */\n  resolveUiVariant(context: Partial<UIConditionContext> = {}, onShow?: (context: UIConditionContext) => void): void {\n    // Determine the current context for which the UI variant will be resolved\n    const defaultContext: UIConditionContext = {\n      isAd: false,\n      adRequiresUi: false,\n      isFullscreen: this.player.getViewMode() === this.player.exports.ViewMode.Fullscreen,\n      isMobile: BrowserUtils.isMobile,\n      isPlaying: this.player.isPlaying(),\n      width: this.uiContainerElement.width(),\n      documentWidth: document.body.clientWidth,\n      isRadioModeActive: false,\n      isRadioModeAvailable: false,\n    };\n\n    // Overwrite properties of the default context with passed in context properties\n    const switchingContext = { ...defaultContext, ...context };\n\n    // Fire the event and allow modification of the context before it is used to resolve the UI variant\n    this.events.onUiVariantResolve.dispatch(this, switchingContext);\n\n    let nextUiVariant: UIVariant = null;\n\n    // Select new UI variant\n    // If no variant condition is fulfilled, we switch to *no* UI\n    for (let uiVariant of this.uiVariants) {\n      const matchesCondition = uiVariant.condition == null || uiVariant.condition(switchingContext) === true;\n      if (nextUiVariant == null && matchesCondition) {\n        nextUiVariant = uiVariant;\n      } else {\n        // hide all UIs besides the one which should be active\n        uiVariant.ui.hide();\n      }\n    }\n\n    this.switchToUiVariant(nextUiVariant, () => {\n      if (onShow) {\n        onShow(switchingContext);\n      }\n    });\n  }\n\n  private addUi(ui: InternalUIInstanceManager): void {\n    let dom = ui.getUI().getDomElement();\n    let player = ui.getWrappedPlayer();\n\n    ui.configureControls();\n    /* Append the UI DOM after configuration to avoid CSS transitions at initialization\n     * Example: Components are hidden during configuration and these hides may trigger CSS transitions that are\n     * undesirable at this time. */\n    this.uiContainerElement.append(dom);\n\n    // When the UI is loaded after a source was loaded, we need to tell the components to initialize themselves\n    if (player.getSource()) {\n      this.config.events.onUpdated.dispatch(this);\n\n    }\n\n    // Fire onConfigured after UI DOM elements are successfully added. When fired immediately, the DOM elements\n    // might not be fully configured and e.g. do not have a size.\n    // https://swizec.com/blog/how-to-properly-wait-for-dom-elements-to-show-up-in-modern-browsers/swizec/6663\n    if (window.requestAnimationFrame) {\n      requestAnimationFrame(() => { ui.onConfigured.dispatch(ui.getUI()); });\n    } else {\n      // IE9 fallback\n      setTimeout(() => { ui.onConfigured.dispatch(ui.getUI()); }, 0);\n    }\n  }\n\n  private releaseUi(ui: InternalUIInstanceManager): void {\n    ui.releaseControls();\n\n    const uiContainer = ui.getUI();\n    if (uiContainer.hasDomElement()) {\n      uiContainer.getDomElement().remove();\n    }\n\n    ui.clearEventHandlers();\n  }\n\n  release(): void {\n    for (let uiInstanceManager of this.uiInstanceManagers) {\n      this.releaseUi(uiInstanceManager);\n    }\n    this.managerPlayerWrapper.clearEventHandlers();\n    this.focusVisibilityTracker.release();\n  }\n\n  /**\n   * Fires just before UI variants are about to be resolved and the UI variant is possibly switched. It is fired when\n   * the switch is triggered from an automatic switch and when calling {@link resolveUiVariant}.\n   * Can be used to modify the {@link UIConditionContext} before resolving is done.\n   * @returns {EventDispatcher<UIManager, UIConditionContext>}\n   */\n  get onUiVariantResolve(): EventDispatcher<UIManager, UIConditionContext> {\n    return this.events.onUiVariantResolve;\n  }\n\n  /**\n   * Fires after the UIManager has switched to a different UI variant.\n   * @returns {EventDispatcher<UIManager, ActiveUiChangedArgs>}\n   */\n  get onActiveUiChanged(): EventDispatcher<UIManager, ActiveUiChangedArgs> {\n    return this.events.onActiveUiChanged;\n  }\n\n  /**\n   * The current active {@link UIInstanceManager}.\n   */\n  get activeUi(): UIInstanceManager {\n    return this.currentUi;\n  }\n\n  /**\n   * Returns the list of all added markers in undefined order.\n   */\n  getTimelineMarkers(): TimelineMarker[] {\n    return this.config.metadata.markers;\n  }\n\n  /**\n   * Adds a marker to the timeline. Does not check for duplicates/overlaps at the `time`.\n   */\n  addTimelineMarker(timelineMarker: TimelineMarker): void {\n    this.config.metadata.markers.push(timelineMarker);\n    this.config.events.onUpdated.dispatch(this);\n  }\n\n  /**\n   * Removes a marker from the timeline (by reference) and returns `true` if the marker has\n   * been part of the timeline and successfully removed, or `false` if the marker could not\n   * be found and thus not removed.\n   */\n  removeTimelineMarker(timelineMarker: TimelineMarker): boolean {\n    if (ArrayUtils.remove(this.config.metadata.markers, timelineMarker) === timelineMarker) {\n      this.config.events.onUpdated.dispatch(this);\n      return true;\n    }\n\n    return false;\n  }\n\n  destroy() {\n    window.removeEventListener('isRadioModeActiveChange', this.handleIsRadioModeActiveChange);\n    window.removeEventListener('isRadioModeAvailableChange', this.handleIsRadioModeAvailableChange);\n  }\n}\n\nexport interface SeekPreviewArgs extends NoArgs {\n  /**\n   * The timeline position in percent where the event originates from.\n   */\n  position: number;\n  /**\n   * The timeline marker associated with the current position, if existing.\n   */\n  marker?: SeekBarMarker;\n}\n\n/**\n * Encapsulates functionality to manage a UI instance. Used by the {@link UIManager} to manage multiple UI instances.\n */\nexport class UIInstanceManager {\n  private playerWrapper: PlayerWrapper;\n  private ui: UIContainer;\n  private config: InternalUIConfig;\n  private subtitleSettingsManager: SubtitleSettingsManager;\n  protected spatialNavigation?: SpatialNavigation;\n\n  private events = {\n    onConfigured: new EventDispatcher<UIContainer, NoArgs>(),\n    onSeek: new EventDispatcher<SeekBar, NoArgs>(),\n    onSeekPreview: new EventDispatcher<SeekBar, SeekPreviewArgs>(),\n    onSeeked: new EventDispatcher<SeekBar, NoArgs>(),\n    onComponentShow: new EventDispatcher<Component<ComponentConfig>, NoArgs>(),\n    onComponentHide: new EventDispatcher<Component<ComponentConfig>, NoArgs>(),\n    onComponentViewModeChanged: new EventDispatcher<Component<ComponentConfig>, ViewModeChangedEventArgs>(),\n    onControlsShow: new EventDispatcher<UIContainer, NoArgs>(),\n    onPreviewControlsHide: new EventDispatcher<UIContainer, CancelEventArgs>(),\n    onControlsHide: new EventDispatcher<UIContainer, NoArgs>(),\n    onRelease: new EventDispatcher<UIContainer, NoArgs>(),\n  };\n\n  constructor(player: PlayerAPI, ui: UIContainer, config: InternalUIConfig, subtitleSettingsManager: SubtitleSettingsManager, spatialNavigation?: SpatialNavigation) {\n    this.playerWrapper = new PlayerWrapper(player);\n    this.ui = ui;\n    this.config = config;\n    this.subtitleSettingsManager = subtitleSettingsManager;\n    this.spatialNavigation = spatialNavigation;\n  }\n\n  getSubtitleSettingsManager() {\n    return this.subtitleSettingsManager;\n  }\n\n  getConfig(): InternalUIConfig {\n    return this.config;\n  }\n\n  getUI(): UIContainer {\n    return this.ui;\n  }\n\n  getPlayer(): PlayerAPI {\n    return this.playerWrapper.getPlayer();\n  }\n\n  /**\n   * Fires when the UI is fully configured and added to the DOM.\n   * @returns {EventDispatcher}\n   */\n  get onConfigured(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onConfigured;\n  }\n\n  /**\n   * Fires when a seek starts.\n   * @returns {EventDispatcher}\n   */\n  get onSeek(): EventDispatcher<SeekBar, NoArgs> {\n    return this.events.onSeek;\n  }\n\n  /**\n   * Fires when the seek timeline is scrubbed.\n   * @returns {EventDispatcher}\n   */\n  get onSeekPreview(): EventDispatcher<SeekBar, SeekPreviewArgs> {\n    return this.events.onSeekPreview;\n  }\n\n  /**\n   * Fires when a seek is finished.\n   * @returns {EventDispatcher}\n   */\n  get onSeeked(): EventDispatcher<SeekBar, NoArgs> {\n    return this.events.onSeeked;\n  }\n\n  /**\n   * Fires when a component is showing.\n   * @returns {EventDispatcher}\n   */\n  get onComponentShow(): EventDispatcher<Component<ComponentConfig>, NoArgs> {\n    return this.events.onComponentShow;\n  }\n\n  /**\n   * Fires when a component is hiding.\n   * @returns {EventDispatcher}\n   */\n  get onComponentHide(): EventDispatcher<Component<ComponentConfig>, NoArgs> {\n    return this.events.onComponentHide;\n  }\n\n  /**\n   * Fires when the UI controls are showing.\n   * @returns {EventDispatcher}\n   */\n  get onControlsShow(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onControlsShow;\n  }\n\n  /**\n   * Fires before the UI controls are hiding to check if they are allowed to hide.\n   * @returns {EventDispatcher}\n   */\n  get onPreviewControlsHide(): EventDispatcher<UIContainer, CancelEventArgs> {\n    return this.events.onPreviewControlsHide;\n  }\n\n  /**\n   * Fires when the UI controls are hiding.\n   * @returns {EventDispatcher}\n   */\n  get onControlsHide(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onControlsHide;\n  }\n\n  /**\n   * Fires when the UI controls are released.\n   * @returns {EventDispatcher}\n   */\n  get onRelease(): EventDispatcher<UIContainer, NoArgs> {\n    return this.events.onRelease;\n  }\n\n  get onComponentViewModeChanged(): EventDispatcher<Component<ComponentConfig>, ViewModeChangedEventArgs> {\n    return this.events.onComponentViewModeChanged;\n  }\n\n  protected clearEventHandlers(): void {\n    this.playerWrapper.clearEventHandlers();\n\n    let events = <any>this.events; // avoid TS7017\n    for (let event in events) {\n      let dispatcher = <EventDispatcher<Object, Object>>events[event];\n      dispatcher.unsubscribeAll();\n    }\n  }\n}\n\n/**\n * Extends the {@link UIInstanceManager} for internal use in the {@link UIManager} and provides access to functionality\n * that components receiving a reference to the {@link UIInstanceManager} should not have access to.\n */\nclass InternalUIInstanceManager extends UIInstanceManager {\n\n  private configured: boolean;\n  private released: boolean;\n\n  getWrappedPlayer(): WrappedPlayer {\n    // TODO find a non-hacky way to provide the WrappedPlayer to the UIManager without exporting it\n    // getPlayer() actually returns the WrappedPlayer but its return type is set to Player so the WrappedPlayer does\n    // not need to be exported\n    return <WrappedPlayer>this.getPlayer();\n  }\n\n  configureControls(): void {\n    this.configureControlsTree(this.getUI());\n    this.configured = true;\n  }\n\n  isConfigured(): boolean {\n    return this.configured;\n  }\n\n  private configureControlsTree(component: Component<ComponentConfig>) {\n    let configuredComponents: Component<ComponentConfig>[] = [];\n\n    UIUtils.traverseTree(component, (component) => {\n      // First, check if we have already configured a component, and throw an error if we did. Multiple configuration\n      // of the same component leads to unexpected UI behavior. Also, a component that is in the UI tree multiple\n      // times hints at a wrong UI structure.\n      // We could just skip configuration in such a case and not throw an exception, but enforcing a clean UI tree\n      // seems like the better choice.\n      for (let configuredComponent of configuredComponents) {\n        if (configuredComponent === component) {\n          // Write the component to the console to simplify identification of the culprit\n          // (e.g. by inspecting the config)\n          if (console) {\n            console.error('Circular reference in UI tree', component);\n          }\n\n          // Additionally throw an error, because this case must not happen and leads to unexpected UI behavior.\n          throw Error('Circular reference in UI tree: ' + component.constructor.name);\n        }\n      }\n\n      component.initialize();\n      component.configure(this.getPlayer(), this);\n      configuredComponents.push(component);\n    });\n  }\n\n  releaseControls(): void {\n    // Do not call release methods if the components have never been configured; this can result in exceptions\n    if (this.configured) {\n      this.onRelease.dispatch(this.getUI());\n      this.releaseControlsTree(this.getUI());\n      this.configured = false;\n    }\n    this.spatialNavigation?.release();\n    this.released = true;\n  }\n\n  isReleased(): boolean {\n    return this.released;\n  }\n\n  private releaseControlsTree(component: Component<ComponentConfig>) {\n    component.release();\n\n    if (component instanceof Container) {\n      for (let childComponent of component.getComponents()) {\n        this.releaseControlsTree(childComponent);\n      }\n    }\n  }\n\n  clearEventHandlers(): void {\n    super.clearEventHandlers();\n  }\n}\n\n/**\n * Extended interface of the {@link Player} for use in the UI.\n */\nexport interface WrappedPlayer extends PlayerAPI {\n  /**\n   * Fires an event on the player that targets all handlers in the UI but never enters the real player.\n   * @param event the event to fire\n   * @param data data to send with the event\n   */\n  fireEventInUI(event: PlayerEvent, data: {}): void;\n}\n\n/**\n * Wraps the player to track event handlers and provide a simple method to remove all registered event\n * handlers from the player.\n *\n * @category Utils\n */\nexport class PlayerWrapper {\n\n  private player: PlayerAPI;\n  private wrapper: WrappedPlayer;\n\n  private eventHandlers: { [eventType: string]: PlayerEventCallback[]; } = {};\n\n  constructor(player: PlayerAPI) {\n    this.player = player;\n\n    // Collect all members of the player (public API methods and properties of the player)\n    const objectProtoPropertyNames = Object.getOwnPropertyNames(Object.getPrototypeOf({}));\n    const namesToIgnore = ['constructor', ...objectProtoPropertyNames];\n    const members = getAllPropertyNames(player).filter(name => namesToIgnore.indexOf(name) === -1);\n    // Split the members into methods and properties\n    let methods = <any[]>[];\n    let properties = <any[]>[];\n\n    for (let member of members) {\n      if (typeof (<any>player)[member] === 'function') {\n        methods.push(member);\n      } else {\n        properties.push(member);\n      }\n    }\n\n    // Create wrapper object\n    let wrapper = <any>{};\n\n    // Add function wrappers for all API methods that do nothing but calling the base method on the player\n    for (let method of methods) {\n      wrapper[method] = function() {\n        // console.log('called ' + member); // track method calls on the player\n        return (<any>player)[method].apply(player, arguments);\n      };\n    }\n\n    // Add all public properties of the player to the wrapper\n    for (let property of properties) {\n      // Get an eventually existing property descriptor to differentiate between plain properties and properties with\n      // getters/setters.\n      const propertyDescriptor = ((target: PlayerAPI) => {\n        while (target) {\n          const propertyDescriptor = Object.getOwnPropertyDescriptor(target, property);\n          if (propertyDescriptor) {\n            return propertyDescriptor;\n          }\n          // Check if the PropertyDescriptor exists on a child prototype in case we have an inheritance of the player\n          target = Object.getPrototypeOf(target);\n        }\n      })(player);\n\n      // If the property has getters/setters, wrap them accordingly...\n      if (propertyDescriptor && (propertyDescriptor.get || propertyDescriptor.set)) {\n        Object.defineProperty(wrapper, property, {\n          get: () => propertyDescriptor.get.call(player),\n          set: (value: any) => propertyDescriptor.set.call(player, value),\n        });\n      }\n      // ... else just transfer the property to the wrapper\n      else {\n        wrapper[property] = (<any>player)[property];\n      }\n    }\n\n    // Explicitly add a wrapper method for 'on' that adds added event handlers to the event list\n    wrapper.on = (eventType: PlayerEvent, callback: PlayerEventCallback) => {\n      player.on(eventType, callback);\n\n      if (!this.eventHandlers[eventType]) {\n        this.eventHandlers[eventType] = [];\n      }\n\n      this.eventHandlers[eventType].push(callback);\n\n      return wrapper;\n    };\n\n    // Explicitly add a wrapper method for 'off' that removes removed event handlers from the event list\n    wrapper.off = (eventType: PlayerEvent, callback: PlayerEventCallback) => {\n      player.off(eventType, callback);\n\n      if (this.eventHandlers[eventType]) {\n        ArrayUtils.remove(this.eventHandlers[eventType], callback);\n      }\n\n      return wrapper;\n    };\n\n    wrapper.fireEventInUI = (event: PlayerEvent, data: {}) => {\n      if (this.eventHandlers[event]) { // check if there are handlers for this event registered\n        // Extend the data object with default values to convert it to a {@link PlayerEventBase} object.\n        let playerEventData = <PlayerEventBase>Object.assign({}, {\n          timestamp: Date.now(),\n          type: event,\n          // Add a marker property so the UI can detect UI-internal player events\n          uiSourced: true,\n        }, data);\n\n        // Execute the registered callbacks\n        for (let callback of this.eventHandlers[event]) {\n          callback(playerEventData);\n        }\n      }\n    };\n\n    this.wrapper = <WrappedPlayer>wrapper;\n  }\n\n  /**\n   * Returns a wrapped player object that can be used on place of the normal player object.\n   * @returns {WrappedPlayer} a wrapped player\n   */\n  getPlayer(): WrappedPlayer {\n    return this.wrapper;\n  }\n\n  /**\n   * Clears all registered event handlers from the player that were added through the wrapped player.\n   */\n  clearEventHandlers(): void {\n    try {\n      // Call the player API to check if the instance is still valid or already destroyed.\n      // This can be any call throwing the PlayerAPINotAvailableError when the player instance is destroyed.\n      this.player.getSource();\n    } catch (error) {\n      if (error instanceof this.player.exports.PlayerAPINotAvailableError) {\n        // We have detected that the player instance is already destroyed, so we clear the event handlers to avoid\n        // event handler unsubscription attempts (which would result in PlayerAPINotAvailableError errors).\n        this.eventHandlers = {};\n      }\n    }\n\n    for (let eventType in this.eventHandlers) {\n      for (let callback of this.eventHandlers[eventType]) {\n        this.player.off(eventType as PlayerEvent, callback);\n      }\n    }\n  }\n}\n\nfunction getAllPropertyNames(target: Object): string[] {\n  let names: string[] = [];\n\n  while (target) {\n    const newNames = Object.getOwnPropertyNames(target).filter(name => names.indexOf(name) === -1);\n    names = names.concat(newNames);\n    // go up prototype chain\n    target = Object.getPrototypeOf(target);\n  }\n\n  return names;\n}\n","import {Component, ComponentConfig} from './components/component';\nimport {Container} from './components/container';\n\n/**\n * @category Utils\n */\nexport namespace UIUtils {\n  export interface TreeTraversalCallback {\n    (component: Component<ComponentConfig>, parent?: Component<ComponentConfig>): void;\n  }\n\n  export function traverseTree(component: Component<ComponentConfig>, visit: TreeTraversalCallback): void {\n    let recursiveTreeWalker = (component: Component<ComponentConfig>, parent?: Component<ComponentConfig>) => {\n      visit(component, parent);\n\n      // If the current component is a container, visit it's children\n      if (component instanceof Container) {\n        for (let childComponent of component.getComponents()) {\n          recursiveTreeWalker(childComponent, component);\n        }\n      }\n    };\n\n    // Walk and configure the component tree\n    recursiveTreeWalker(component);\n  }\n\n  // From: https://github.com/nfriend/ts-keycode-enum/blob/master/Key.enum.ts\n  export enum KeyCode {\n    LeftArrow = 37,\n    UpArrow = 38,\n    RightArrow = 39,\n    DownArrow = 40,\n    Space = 32,\n    End = 35,\n    Home = 36,\n  }\n}\n","import { Event, EventDispatcher } from './eventdispatcher';\nimport { PlayerAPI } from 'bitmovin-player';\n\nexport interface VolumeSettingChangedArgs {\n  volume: number;\n  muted: boolean;\n}\n\n/**\n * Can be used to centrally manage and control the volume and mute state of the player from multiple components.\n */\nexport class VolumeController {\n\n  private static readonly issuerName = 'ui-volumecontroller';\n\n  private readonly events = {\n    onChanged: new EventDispatcher<VolumeController, VolumeSettingChangedArgs>(),\n  };\n\n  private storedVolume: number;\n\n  constructor(private readonly player: PlayerAPI) {\n    this.storeVolume();\n\n    const handler = () => {\n      this.onChangedEvent();\n    };\n\n    player.on(player.exports.PlayerEvent.SourceLoaded, handler);\n    player.on(player.exports.PlayerEvent.VolumeChanged, handler);\n    player.on(player.exports.PlayerEvent.Muted, handler);\n    player.on(player.exports.PlayerEvent.Unmuted, handler);\n  }\n\n  setVolume(volume: number): void {\n    this.player.setVolume(volume, VolumeController.issuerName);\n  }\n\n  getVolume(): number {\n    return this.player.getVolume();\n  }\n\n  setMuted(muted: boolean): void {\n    if (muted) {\n      this.player.mute(VolumeController.issuerName);\n    } else {\n      this.player.unmute(VolumeController.issuerName);\n    }\n  }\n\n  toggleMuted(): void {\n    if (this.isMuted() || this.getVolume() === 0) {\n      // Unmuting from the mute or zero-volume state recalls the previously saved volume setting. Setting the\n      // volume automatically unmutes the player in v7.\n      this.recallVolume();\n    } else {\n      this.setMuted(true);\n    }\n  }\n\n  isMuted(): boolean {\n    return this.player.isMuted();\n  }\n\n  /**\n   * Stores (saves) the current volume so it can later be restored with {@link recallVolume}.\n   */\n  storeVolume(): void {\n    this.storedVolume = this.getVolume();\n  }\n\n  /**\n   * Recalls (sets) the volume previously stored with {@link storeVolume}.\n   */\n  recallVolume(): void {\n    this.setMuted(this.storedVolume === 0);\n    this.setVolume(this.storedVolume);\n  }\n\n  startTransition(): VolumeTransition {\n    return new VolumeTransition(this);\n  }\n\n  onChangedEvent() {\n    const playerMuted = this.isMuted();\n    const playerVolume = this.getVolume();\n\n    const uiMuted = playerMuted || playerVolume === 0;\n    const uiVolume = playerMuted ? 0 : playerVolume;\n\n    this.storeVolume();\n\n    this.events.onChanged.dispatch(this, { volume: uiVolume, muted: uiMuted });\n  }\n\n  /**\n   * Gets the event that is fired when the volume settings have changed.\n   */\n  get onChanged(): Event<VolumeController, VolumeSettingChangedArgs> {\n    return this.events.onChanged.getEvent();\n  }\n}\n\nexport class VolumeTransition {\n\n  constructor(private controller: VolumeController) {\n    // Store the volume at the beginning of a volume change so we can recall it later in case we set the volume to\n    // zero and actually mute the player.\n    controller.storeVolume();\n  }\n\n  update(volume: number): void {\n    // Update the volume while transitioning so the user has a \"live preview\" of the desired target volume\n    this.controller.setMuted(false);\n    this.controller.setVolume(volume);\n  }\n\n  finish(volume: number): void {\n    if (volume === 0) {\n      // When the volume is zero we essentially mute the volume so we recall the volume from the beginning of the\n      // transition and mute the player instead. Recalling is necessary to return to the actual audio volume\n      // when unmuting.\n      // We must first recall the volume and then mute, because recalling sets the volume on the player\n      // and setting a player volume > 0 unmutes the player in v7.\n      this.controller.recallVolume();\n      this.controller.setMuted(true);\n    } else {\n      this.controller.setMuted(false);\n      this.controller.setVolume(volume);\n      this.controller.storeVolume();\n    }\n  }\n}","import { SubtitleRegionContainer, SubtitleLabel } from './components/subtitleoverlay';\nimport { VTTProperties, VTTRegionProperties } from 'bitmovin-player/types/subtitles/vtt/API';\nimport { DOM, Size } from './dom';\n\n// Our default height of a line\nconst lineHeight = 28;\n\n// Default relative line height\nconst lineHeightPercent = 5;\nlet lineCount: number = 1;\n\nconst defaultLineNumber = 21; // Our default amount of lines\n\nenum Direction {\n  Top = 'top',\n  Bottom = 'bottom',\n  Left = 'left',\n  Right = 'right',\n}\n\nenum VttVerticalWriting {\n  GrowingRight = 'lr',\n  GrowingLeft = 'rl',\n}\n\ntype VerticalWritingDirection = Direction.Left | Direction.Right;\n\nconst DirectionPair = new Map<Direction, Direction>([\n  [Direction.Top, Direction.Bottom],\n  [Direction.Bottom, Direction.Top],\n  [Direction.Left, Direction.Right],\n  [Direction.Right, Direction.Left],\n]);\n\n/**\n * Sets the default standardized styles for the Cue Box\n * https://w3.org/TR/webvtt1/#applying-css-properties\n */\nconst setDefaultVttStyles = (cueContainerDom: DOM, vtt: VTTProperties) => {\n  if (vtt.region) {\n    cueContainerDom.css('position', 'relative');\n    cueContainerDom.css('unicode-bidi', 'plaintext');\n  } else {\n    cueContainerDom.css('position', 'absolute');\n    cueContainerDom.css('overflow-wrap', 'break-word');\n    cueContainerDom.css('overflow', 'hidden');\n    cueContainerDom.css('flex-flow', 'column');\n  }\n  cueContainerDom.css('display', 'inline-flex');\n};\n\n/**\n * Align the Cue Box's line\n * https://w3.org/TR/webvtt1/#webvtt-cue-line-alignment\n */\nconst setVttLineAlign = (\n  cueContainerDom: DOM,\n  { lineAlign }: VTTProperties,\n  direction: Direction,\n  relativeCueBoxPosition: number) => {\n  switch (lineAlign) {\n    case 'center':\n      setCssForCenterLineAlign(\n        cueContainerDom, direction, relativeCueBoxPosition);\n      break;\n    case 'end':\n      setCssForEndLineAlign(\n        cueContainerDom, direction, relativeCueBoxPosition);\n  }\n};\n\n/**\n * Defines the line positioning of the Cue Box\n * https://w3.org/TR/webvtt1/#webvtt-cue-line\n */\nconst setVttLine = (\n  cueContainerDom: DOM,\n  vtt: VTTProperties,\n  direction: Direction,\n  subtitleOverLaySize: Size,\n) => {\n  const overlayReferenceEdge = DirectionPair.get(direction);\n  if (vtt.line === 'auto' && vtt.vertical) {\n    cueContainerDom.css(overlayReferenceEdge, '0');\n    return;\n  }\n  if (vtt.line === 'auto' && !vtt.vertical) {\n    return;\n  }\n\n  let relativeLinePosition = parseFloat(vtt.line as string);\n\n  if (vtt.snapToLines) {\n    let targetLine = Number(vtt.line);\n    if (targetLine < 0) {\n      targetLine = defaultLineNumber + targetLine;\n    }\n\n    const lineHeight = subtitleOverLaySize.height / defaultLineNumber;\n    const absoluteLinePosition = lineHeight * targetLine;\n    relativeLinePosition = (100 * absoluteLinePosition) / subtitleOverLaySize.height;\n  }\n\n  if (vtt.lineAlign !== 'end')\n    cueContainerDom.css(\n      overlayReferenceEdge, `${relativeLinePosition}%`);\n  setVttLineAlign(cueContainerDom, vtt, direction, relativeLinePosition);\n};\n\n/**\n * Defines the writing direction of the Cue Box\n * https://w3.org/TR/webvtt1/#webvtt-cue-writing-direction\n */\nconst setVttWritingDirectionAndCueBoxPositioning = (\n  cueContainerDom: DOM, vtt: VTTProperties,\n  subtitleOverlaySize: Size,\n) => {\n  switch (vtt.vertical) {\n  case '':\n    cueContainerDom.css('writing-mode', 'horizontal-tb');\n    cueContainerDom.css(Direction.Bottom, '0');\n    setVttLine(cueContainerDom, vtt, Direction.Bottom, subtitleOverlaySize);\n    break;\n  case VttVerticalWriting.GrowingRight:\n    setCueBoxPositionForVerticalWriting(\n      cueContainerDom, Direction.Right, vtt, subtitleOverlaySize);\n    break;\n  case VttVerticalWriting.GrowingLeft:\n    setCueBoxPositionForVerticalWriting(\n      cueContainerDom, Direction.Left, vtt, subtitleOverlaySize);\n    break;\n  }\n};\n\nconst setCueBoxPositionForVerticalWriting = (\n  cueContainerDom: DOM,\n  direction: VerticalWritingDirection,\n  vtt: VTTProperties,\n  subtitleOverlaySize: Size,\n) => {\n    const writingMode = direction === Direction.Right ?\n      'vertical-lr' : 'vertical-rl';\n\n    cueContainerDom.css('writing-mode', writingMode);\n    cueContainerDom.css(Direction.Top, '0');\n    setVttLine(cueContainerDom, vtt, direction, subtitleOverlaySize);\n};\n\n/**\n * Defines the Cue position alignment\n * https://w3.org/TR/webvtt1/#webvtt-cue-position-alignment\n */\nconst setVttPositionAlign = (cueContainerDom: DOM, vtt: VTTProperties, direction: Direction) => {\n  // https://www.w3.org/TR/webvtt1/#webvtt-cue-position\n  if (vtt.position === 'auto') {\n    cueContainerDom.css(direction, '0');\n  } else {\n    switch (vtt.positionAlign) {\n      case 'line-left':\n        cueContainerDom.css(direction, `${vtt.position}%`);\n        cueContainerDom.css(DirectionPair.get(direction), 'auto');\n        cueContainerDom.css('justify-content', 'flex-start');\n        break;\n      case 'center':\n        cueContainerDom.css(direction, `${vtt.position - vtt.size / 2}%`);\n        cueContainerDom.css(DirectionPair.get(direction), 'auto');\n        cueContainerDom.css('justify-content', 'center');\n        break;\n      case 'line-right':\n        cueContainerDom.css(direction, 'auto');\n        cueContainerDom.css(DirectionPair.get(direction), `${100 - vtt.position}%`);\n        cueContainerDom.css('justify-content', 'flex-end');\n        break;\n      default:\n        cueContainerDom.css(direction, `${vtt.position}%`);\n        cueContainerDom.css('justify-content', 'flex-start');\n    }\n  }\n};\n\nconst countLines = (innerHtml: string) =>\n  innerHtml.split('<br />').length;\n\nconst setCssForCenterLineAlign = (\n  cueContainerDom: DOM,\n  direction: Direction,\n  relativeCueBoxPosition: number) => {\n  switch (direction) {\n    case Direction.Bottom:\n      cueContainerDom.css('transform', 'translateY(-50%)');\n      break;\n    case Direction.Left:\n      cueContainerDom.css('transform', 'translateX(50%)');\n      break;\n    case Direction.Right:\n      cueContainerDom.css('transform', 'translateX(-50%)');\n      break;\n  }\n};\n\nconst setCssForEndLineAlign = (\n  cueContainerDom: DOM,\n  direction: Direction,\n  offset: number) => {\n      const opositeToOverlayReferenceEdge = direction;\n      cueContainerDom.css(opositeToOverlayReferenceEdge, `${100 - offset}%`);\n};\n\n/**\n * @category Utils\n */\nexport namespace VttUtils {\n  export const setVttCueBoxStyles = (\n    cueContainer: SubtitleLabel,\n    subtitleOverlaySize: Size,\n  ) => {\n    const vtt = cueContainer.vtt;\n    const cueContainerDom = cueContainer.getDomElement();\n\n\n    setDefaultVttStyles(cueContainerDom, vtt);\n\n    lineCount = countLines(cueContainer.getText());\n    setVttWritingDirectionAndCueBoxPositioning(cueContainerDom, vtt, subtitleOverlaySize);\n\n    // https://w3.org/TR/webvtt1/#webvtt-cue-text-alignment\n    const textAlign = vtt.align === 'middle' ? 'center' : vtt.align;\n    cueContainerDom.css('text-align', textAlign);\n\n    // https://w3.org/TR/webvtt1/#webvtt-cue-size\n    const containerSize = vtt.size;\n    if (vtt.vertical === '') {\n      cueContainerDom.css('width', `${containerSize}%`);\n      setVttPositionAlign(cueContainerDom, vtt, Direction.Left);\n    } else {\n      cueContainerDom.css('height', `${containerSize}%`);\n      setVttPositionAlign(cueContainerDom, vtt, Direction.Top);\n    }\n  };\n\n  /** https://www.w3.org/TR/webvtt1/#regions\n   *  https://www.speechpad.com/captions/webvtt#toc_16\n   */\n  export const setVttRegionStyles = (\n    regionContainer: SubtitleRegionContainer,\n    region: VTTRegionProperties,\n    overlaySize: Size,\n  ) => {\n    const regionContainerDom = regionContainer.getDomElement();\n    const regionPositionX = overlaySize.width * region.viewportAnchorX / 100 - ((overlaySize.width * region.width / 100) * region.regionAnchorX / 100);\n    const regionPositionY = overlaySize.height * region.viewportAnchorY / 100 - ((region.lines * lineHeight) * region.regionAnchorY / 100);\n    regionContainerDom.css('position', 'absolute');\n    regionContainerDom.css('overflow', 'hidden');\n    regionContainerDom.css('width', `${region.width}%`);\n    regionContainerDom.css(Direction.Left, `${regionPositionX}px`);\n    regionContainerDom.css(Direction.Right, 'unset');\n    regionContainerDom.css(Direction.Top, `${regionPositionY}px`);\n    regionContainerDom.css(Direction.Bottom, 'unset');\n    regionContainerDom.css('height', `${region.lines * lineHeight}px`);\n  };\n}\n"]}